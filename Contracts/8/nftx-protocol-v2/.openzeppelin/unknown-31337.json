{
  "manifestVersion": "3.1",
  "impls": {
    "8b4bd58ccd6dc5ebba17a3f7b3c336dcbfb8fea2a0d1c9226590543ef84f9537": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x99a53ffd1f31ac0c82fc69fee9d4727249c4525043646a35350b17b1c00d79a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/proxy/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/util/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "isGuardian",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/solidity/util/PausableUpgradeable.sol:17"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "isPaused",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/solidity/util/PausableUpgradeable.sol:18"
          },
          {
            "contract": "UpgradeableBeacon",
            "label": "_implementation",
            "type": "t_address",
            "src": "contracts/solidity/proxy/UpgradeableBeacon.sol:16"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "numVaults",
            "type": "t_uint256",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:21"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "prevContract",
            "type": "t_address",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:22"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:23"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "eligibilityManager",
            "type": "t_address",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:24"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "vault",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:26"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "vaultsForAsset",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:27"
          },
          {
            "contract": "NFTXVaultFactoryUpgradeable",
            "label": "allVaults",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/solidity/NFTXVaultFactoryUpgradeable.sol:28"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38de562a83b60594babf03f57546ceb5452de53d4264df1e9f3b652c11ae5e40": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x44849d30c1952185e140cbed846a0c145931aafc0e1379fc9ad8d256b41cd61a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/proxy/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/util/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:75"
          },
          {
            "contract": "UniqueEligibility",
            "label": "eligibleBitMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/solidity/eligibility/UniqueEligibility.sol:4"
          },
          {
            "contract": "NFTXRangeEligibility",
            "label": "rangeStart",
            "type": "t_uint256",
            "src": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:22"
          },
          {
            "contract": "NFTXRangeEligibility",
            "label": "rangeEnd",
            "type": "t_uint256",
            "src": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:23"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "96cffd287a0382b1938eeef365878917b0a0387ab8bea29f4b88742d46b0141d": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xd53f24991d708f5e0d77e5933582592c17c332e8f6d12571828f45ce8bd54839",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/proxy/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/util/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "isGuardian",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/solidity/util/PausableUpgradeable.sol:17"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "isPaused",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/solidity/util/PausableUpgradeable.sol:18"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "distributionPaused",
            "type": "t_bool",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:19"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "nftxVaultFactory",
            "type": "t_address",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:21"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "lpStaking",
            "type": "t_address",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:22"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:23"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "defaultTreasuryAlloc",
            "type": "t_uint256",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:24"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "defaultLPAlloc",
            "type": "t_uint256",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:25"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "allocTotal",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:27"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "specificTreasuryAlloc",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:28"
          },
          {
            "contract": "NFTXFeeDistributor",
            "label": "feeReceivers",
            "type": "t_mapping(t_uint256,t_array(t_struct(FeeReceiver)5563_storage)dyn_storage)",
            "src": "contracts/solidity/NFTXFeeDistributor.sol:29"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(FeeReceiver)5563_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct INFTXFeeDistributor.FeeReceiver[])"
          },
          "t_array(t_struct(FeeReceiver)5563_storage)dyn_storage": {
            "label": "struct INFTXFeeDistributor.FeeReceiver[]"
          },
          "t_struct(FeeReceiver)5563_storage": {
            "label": "struct INFTXFeeDistributor.FeeReceiver",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "isContract",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f5a85e33e101741cfb3f3c3970fabe355e25303d0f9983d86dd57b50f52da9d": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x42a9773814cd5e9c9a92a8012ecb17b8b8b3a5decb36e48e59ab713c5a15d0b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/solidity/proxy/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/proxy/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/solidity/util/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/solidity/util/OwnableUpgradeable.sol:75"
          },
          {
            "contract": "UniqueEligibility",
            "label": "eligibleBitMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/solidity/eligibility/UniqueEligibility.sol:4"
          },
          {
            "contract": "NFTXUniqueEligibility",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/solidity/eligibility/NFTXUniqueEligibility.sol:22"
          },
          {
            "contract": "NFTXUniqueEligibility",
            "label": "reverseEligOnRedeem",
            "type": "t_bool",
            "src": "contracts/solidity/eligibility/NFTXUniqueEligibility.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "txHash": "0x5c451ffa577e3f2017225e51703eb966f09bad5913607270ba5267bb58daa256"
  }
}
