{
  "address": "0x77185e48DdC269B2d7D3b2938Df5862f8e601E0f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "launcherTemplate",
          "type": "address"
        }
      ],
      "name": "LauncherCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLauncher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "LauncherTemplateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "launcher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "LauncherTemplateRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "MisoInitLauncher",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LAUNCHER_MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_template",
          "type": "address"
        }
      ],
      "name": "addLiquidityLauncherTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bentoBox",
      "outputs": [
        {
          "internalType": "contract IBentoBoxFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_integratorFeeAccount",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createLauncher",
      "outputs": [
        {
          "internalType": "address",
          "name": "newLauncher",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_integratorFeeAccount",
          "type": "address"
        }
      ],
      "name": "deployLauncher",
      "outputs": [
        {
          "internalType": "address",
          "name": "launcher",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_launcher",
          "type": "address"
        }
      ],
      "name": "getLauncherTemplateId",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLaunchers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "getLiquidityLauncherTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_launcherTemplate",
          "type": "address"
        }
      ],
      "name": "getTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasLauncherMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bentoBox",
          "type": "address"
        }
      ],
      "name": "initMISOLauncher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launcherFees",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "minimumFee",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "integratorFeePct",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "launcherInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "templateId",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "index",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launcherTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "launchers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "misoDiv",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfLiquidityLauncherContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityLauncherTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTemplateId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_divaddr",
          "type": "address"
        }
      ],
      "name": "setDividends",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setIntegratorFeePct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_locked",
          "type": "bool"
        }
      ],
      "name": "setLocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x25bd0d1f18898819dad3a331aeb7f1c819920083d8d1b9b306d24b2aaae3e759",
  "receipt": {
    "to": null,
    "from": "0x08A736438df6c23e17CE2fBbc877A4CDC2DC7B84",
    "contractAddress": "0x77185e48DdC269B2d7D3b2938Df5862f8e601E0f",
    "transactionIndex": 5,
    "gasUsed": "1838088",
    "logsBloom": "0x
    "blockHash": "0x169b5649c6e59cce928f0b6e28244c1029c2d63fe47f7e35f4caa00dc9a34ccc",
    "transactionHash": "0x25bd0d1f18898819dad3a331aeb7f1c819920083d8d1b9b306d24b2aaae3e759",
    "logs": [],
    "blockNumber": 12453649,
    "cumulativeGasUsed": "2256262",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d1b4fa5f316a6a8ee3524e1600e2925f",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"launcherTemplate\",\"type\":\"address\"}],\"name\":\"LauncherCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLauncher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"LauncherTemplateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"launcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"LauncherTemplateRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"MisoInitLauncher\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LAUNCHER_MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accessControls\",\"outputs\":[{\"internalType\":\"contract MISOAccessControls\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_template\",\"type\":\"address\"}],\"name\":\"addLiquidityLauncherTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bentoBox\",\"outputs\":[{\"internalType\":\"contract IBentoBoxFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_integratorFeeAccount\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newLauncher\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_integratorFeeAccount\",\"type\":\"address\"}],\"name\":\"deployLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"launcher\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_launcher\",\"type\":\"address\"}],\"name\":\"getLauncherTemplateId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLaunchers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"getLiquidityLauncherTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_launcherTemplate\",\"type\":\"address\"}],\"name\":\"getTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasLauncherMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessControls\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bentoBox\",\"type\":\"address\"}],\"name\":\"initMISOLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launcherFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"minimumFee\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"integratorFeePct\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launcherInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"templateId\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launcherTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"launchers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumFee\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"misoDiv\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfLiquidityLauncherContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityLauncherTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"setCurrentTemplateId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_divaddr\",\"type\":\"address\"}],\"name\":\"setDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setIntegratorFeePct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinimumFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidityLauncherTemplate(address)\":{\"details\":\"Should have operator access\",\"params\":{\"_template\":\"Launcher template address.\"}},\"createLauncher(uint256,address,uint256,address,bytes)\":{\"details\":\"Initializes auction with the parameters passed.\",\"params\":{\"_data\":\"Data to be sent to template on Init.\",\"_integratorFeeAccount\":\"Address to send refferal bonus, if set.\",\"_templateId\":\"Id of the auction template to create.\",\"_token\":\"The token address to be sold.\",\"_tokenSupply\":\"Amount of tokens to be sold at market.\"},\"returns\":{\"newLauncher\":\"Launcher address.\"}},\"deployLauncher(uint256,address)\":{\"params\":{\"_integratorFeeAccount\":\"Address to pay the fee to.\",\"_templateId\":\"Template id of the launcher to create.\"},\"returns\":{\"launcher\":\" Launcher address.\"}},\"getLiquidityLauncherTemplate(uint256)\":{\"params\":{\"_templateId\":\"Launcher template ID.\"},\"returns\":{\"_0\":\"address of the required template ID.\"}},\"hasLauncherMinterRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"initMISOLauncher(address,address,address)\":{\"details\":\"Can only be initialized once.\",\"params\":{\"_accessControls\":\"Sets address to get the access controls from.\"}},\"numberOfLiquidityLauncherContracts()\":{\"returns\":{\"_0\":\"uint256 Launcher count.\"}},\"removeLiquidityLauncherTemplate(uint256)\":{\"details\":\"Function to remove a launcher template from factory.Should have operator access.\",\"params\":{\"_templateId\":\"Id of the template to be deleted.\"}},\"setCurrentTemplateId(uint256,uint256)\":{\"params\":{\"_templateId\":\"The ID of the current template for that type\",\"_templateType\":\"Type of template.\"}},\"setDividends(address)\":{\"params\":{\"_divaddr\":\"Dividend address.\"}},\"setIntegratorFeePct(uint256)\":{\"params\":{\"_amount\":\"Percentage amount.\"}},\"setLocked(bool)\":{\"params\":{\"_locked\":\"bool.\"}},\"setMinimumFee(uint256)\":{\"params\":{\"_amount\":\"Fee amount.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"LauncherCreated(address,address,address)\":{\"notice\":\"Event emitted when launcher is created using template id.\"},\"LauncherTemplateAdded(address,uint256)\":{\"notice\":\"Event emitted when launcher template is added to factory.\"},\"LauncherTemplateRemoved(address,uint256)\":{\"notice\":\"Event emitted when launcher template is removed.\"},\"MisoInitLauncher(address)\":{\"notice\":\"Event emitted when first intializing the liquidity launcher.\"}},\"kind\":\"user\",\"methods\":{\"WETH()\":{\"notice\":\"Address for Wrapped Ether.\"},\"accessControls()\":{\"notice\":\"Responsible for access rights to the contract.\"},\"addLiquidityLauncherTemplate(address)\":{\"notice\":\"Function to add a launcher template to create through factory.\"},\"createLauncher(uint256,address,uint256,address,bytes)\":{\"notice\":\"Creates a new MISOLauncher using _templateId.\"},\"deployLauncher(uint256,address)\":{\"notice\":\"Creates a launcher corresponding to _templateId.\"},\"getLiquidityLauncherTemplate(uint256)\":{\"notice\":\"Get the address based on launcher template ID.\"},\"hasLauncherMinterRole(address)\":{\"notice\":\"Used to check whether an address has the minter role\"},\"initMISOLauncher(address,address,address)\":{\"notice\":\"Single gateway to initialize the MISO Launcher with proper address.\"},\"launcherFees()\":{\"notice\":\"Minimum fee to create a launcher through the factory.\"},\"launcherInfo(address)\":{\"notice\":\"Mapping from auction created through this contract to Auction struct.\"},\"launcherTemplateId()\":{\"notice\":\"Template id to track respective auction template.\"},\"launchers(uint256)\":{\"notice\":\"All the launchers created using factory.\"},\"locked()\":{\"notice\":\"Contract locked status. If locked, only minters can deploy\"},\"misoDiv()\":{\"notice\":\"Any donations if set are sent here.\"},\"numberOfLiquidityLauncherContracts()\":{\"notice\":\"Get the total number of launchers in the contract.\"},\"setCurrentTemplateId(uint256,uint256)\":{\"notice\":\"Sets the current template ID for any type.\"},\"setDividends(address)\":{\"notice\":\"Sets dividend address.\"},\"setIntegratorFeePct(uint256)\":{\"notice\":\"Sets integrator fee percentage.\"},\"setLocked(bool)\":{\"notice\":\"Sets the factory to be locked or unlocked.\"},\"setMinimumFee(uint256)\":{\"notice\":\"Sets the minimum fee.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MISOLauncher.sol\":\"MISOLauncher\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Access/MISOAccessControls.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport \\\"./MISOAdminAccess.sol\\\";\\n\\n/**\\n * @notice Access Controls\\n * @author Attr: BlockRocket.tech\\n */\\ncontract MISOAccessControls is MISOAdminAccess {\\n    /// @notice Role definitions\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant SMART_CONTRACT_ROLE = keccak256(\\\"SMART_CONTRACT_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    /// @notice Events for adding and removing various roles\\n\\n    event MinterRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event MinterRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice The deployer is automatically given the admin role which will allow them to then grant roles to other addresses\\n     */\\n    constructor() public {\\n    }\\n\\n\\n    /////////////\\n    // Lookups //\\n    /////////////\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasMinterRole(address _address) public view returns (bool) {\\n        return hasRole(MINTER_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the smart contract role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasSmartContractRole(address _address) public view returns (bool) {\\n        return hasRole(SMART_CONTRACT_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the operator role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasOperatorRole(address _address) public view returns (bool) {\\n        return hasRole(OPERATOR_ROLE, _address);\\n    }\\n\\n    ///////////////\\n    // Modifiers //\\n    ///////////////\\n\\n    /**\\n     * @notice Grants the minter role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addMinterRole(address _address) external {\\n        grantRole(MINTER_ROLE, _address);\\n        emit MinterRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the minter role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeMinterRole(address _address) external {\\n        revokeRole(MINTER_ROLE, _address);\\n        emit MinterRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the smart contract role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addSmartContractRole(address _address) external {\\n        grantRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the smart contract role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeSmartContractRole(address _address) external {\\n        revokeRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the operator role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addOperatorRole(address _address) external {\\n        grantRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the operator role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeOperatorRole(address _address) external {\\n        revokeRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleRemoved(_address, _msgSender());\\n    }\\n\\n}\\n\",\"keccak256\":\"0x9476e7c179105c22e86fd05a7acb441cba8566b1ca2d06f25197217c7ee2f2d8\"},\"contracts/Access/MISOAdminAccess.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport \\\"../OpenZeppelin/access/AccessControl.sol\\\";\\n\\n\\ncontract MISOAdminAccess is AccessControl {\\n\\n    /// @dev Whether access is initialised.\\n    bool private initAccess;\\n\\n    /// @notice Events for adding and removing various roles.\\n    event AdminRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event AdminRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n\\n    /// @notice The deployer is automatically given the admin role which will allow them to then grant roles to other addresses.\\n    constructor() public {\\n    }\\n\\n    /**\\n     * @notice Initializes access controls.\\n     * @param _admin Admins address.\\n     */\\n    function initAccessControls(address _admin) public {\\n        require(!initAccess, \\\"Already initialised\\\");\\n        _setupRole(DEFAULT_ADMIN_ROLE, _admin);\\n        initAccess = true;\\n    }\\n\\n    /////////////\\n    // Lookups //\\n    /////////////\\n\\n    /**\\n     * @notice Used to check whether an address has the admin role.\\n     * @param _address EOA or contract being checked.\\n     * @return bool True if the account has the role or false if it does not.\\n     */\\n    function hasAdminRole(address _address) public  view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, _address);\\n    }\\n\\n    ///////////////\\n    // Modifiers //\\n    ///////////////\\n\\n    /**\\n     * @notice Grants the admin role to an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract receiving the new role.\\n     */\\n    function addAdminRole(address _address) external {\\n        grantRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the admin role from an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract affected.\\n     */\\n    function removeAdminRole(address _address) external {\\n        revokeRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleRemoved(_address, _msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdba125b21dec233e2f695768b130c85b5c495407e350bfbf9d6f5d9b0f26ac4a\"},\"contracts/MISOLauncher.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\n//----------------------------------------------------------------------------------\\n//    I n s t a n t\\n//\\n//        .:mmm.         .:mmm:.       .ii.  .:SSSSSSSSSSSSS.     .oOOOOOOOOOOOo.  \\n//      .mMM'':Mm.     .:MM'':Mm:.     .II:  :SSs..........     .oOO'''''''''''OOo.\\n//    .:Mm'   ':Mm.   .:Mm'   'MM:.    .II:  'sSSSSSSSSSSSSS:.  :OO.           .OO:\\n//  .'mMm'     ':MM:.:MMm'     ':MM:.  .II:  .:...........:SS.  'OOo:.........:oOO'\\n//  'mMm'        ':MMmm'         'mMm:  II:  'sSSSSSSSSSSSSS'     'oOOOOOOOOOOOO'  \\n//\\n//----------------------------------------------------------------------------------\\n//\\n// Chef Gonpachi's MISO Launcher\\n//\\n// A factory to conveniently deploy your own liquidity contracts\\n//\\n// Inspired by Bokky's EtherVendingMachince.io\\n// https://github.com/bokkypoobah/FixedSupplyTokenFactory\\n// \\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n//\\n// The above copyright notice and this permission notice shall be included \\n// in all copies or substantial portions of the Software.\\n//\\n// Made for Sushi.com \\n// \\n// Enjoy. (c) Chef Gonpachi 2021 \\n// <https://github.com/chefgonpachi/MISO/>\\n//\\n// ---------------------------------------------------------------------\\n// SPDX-License-Identifier: GPL-3.0                        \\n// ---------------------------------------------------------------------\\n\\nimport \\\"./Utils/SafeTransfer.sol\\\";\\nimport \\\"./Utils/BoringMath.sol\\\";\\nimport \\\"./Access/MISOAccessControls.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IMisoLiquidity.sol\\\";\\nimport \\\"./interfaces/IBentoBoxFactory.sol\\\";\\n\\n\\ncontract MISOLauncher is SafeTransfer {\\n\\n    using BoringMath for uint256;\\n    using BoringMath128 for uint128;\\n    using BoringMath64 for uint64;\\n\\n    /// @notice Responsible for access rights to the contract.\\n    MISOAccessControls public accessControls;\\n    bytes32 public constant LAUNCHER_MINTER_ROLE = keccak256(\\\"LAUNCHER_MINTER_ROLE\\\");\\n\\n    /// @notice Whether launcher has been initialized or not.\\n    bool private initialised;\\n\\n    /// @notice Struct to track Auction template.\\n    struct Launcher {\\n        bool exists;\\n        uint64 templateId;\\n        uint128 index;\\n    }\\n\\n    /// @notice All the launchers created using factory.\\n    address[] public launchers;\\n\\n    /// @notice Template id to track respective auction template.\\n    uint256 public launcherTemplateId;\\n\\n    /// @notice Address for Wrapped Ether.\\n    address public WETH;\\n    IBentoBoxFactory public bentoBox;\\n\\n    /// @notice Mapping from template id to launcher template address.\\n    mapping(uint256 => address) private launcherTemplates;\\n\\n    /// @notice mapping from launcher template address to launcher template id\\n    mapping(address => uint256) private launcherTemplateToId;\\n\\n    // /// @notice mapping from template type to template id\\n    mapping(uint256 => uint256) public currentTemplateId;\\n\\n    /// @notice Mapping from auction created through this contract to Auction struct.\\n    mapping(address => Launcher) public launcherInfo;\\n\\n    /// @notice Struct to define fees.\\n    struct LauncherFees {\\n        uint128 minimumFee;\\n        uint32 integratorFeePct;\\n    }\\n\\n    /// @notice Minimum fee to create a launcher through the factory.\\n    LauncherFees public launcherFees;\\n\\n    /// @notice Contract locked status. If locked, only minters can deploy\\n    bool public locked;\\n\\n    ///@notice Any donations if set are sent here.\\n    address payable public misoDiv;\\n\\n    /// @notice Event emitted when first intializing the liquidity launcher.\\n    event MisoInitLauncher(address sender);\\n\\n    /// @notice Event emitted when launcher is created using template id.\\n    event LauncherCreated(address indexed owner, address indexed addr, address launcherTemplate);\\n\\n    /// @notice Event emitted when launcher template is added to factory.\\n    event LauncherTemplateAdded(address newLauncher, uint256 templateId);\\n\\n    /// @notice Event emitted when launcher template is removed.\\n    event LauncherTemplateRemoved(address launcher, uint256 templateId);\\n\\n    constructor() public {\\n    }\\n\\n    /**\\n     * @notice Single gateway to initialize the MISO Launcher with proper address.\\n     * @dev Can only be initialized once.\\n     * @param _accessControls Sets address to get the access controls from.\\n     */\\n    function initMISOLauncher(address _accessControls, address _WETH, address _bentoBox) external {\\n        require(!initialised);\\n        require(_WETH != address(0), \\\"initMISOLauncher: WETH cannot be set to zero\\\");\\n        require(_accessControls != address(0), \\\"initMISOLauncher: accessControls cannot be set to zero\\\");\\n        require(_bentoBox != address(0), \\\"initMISOLauncher: bentoBox cannot be set to zero\\\");\\n\\n        accessControls = MISOAccessControls(_accessControls);\\n        bentoBox = IBentoBoxFactory(_bentoBox); \\n        WETH = _WETH;\\n        locked = true;\\n        initialised = true;\\n\\n        emit MisoInitLauncher(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Sets the minimum fee.\\n     * @param _amount Fee amount.\\n     */\\n    function setMinimumFee(uint256 _amount) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be operator\\\"\\n        );\\n        launcherFees.minimumFee = BoringMath.to128(_amount);\\n    }\\n\\n    /**\\n     * @notice Sets integrator fee percentage.\\n     * @param _amount Percentage amount.\\n     */\\n    function setIntegratorFeePct(uint256 _amount) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be operator\\\"\\n        );\\n        /// @dev this is out of 1000, ie 25% = 250\\n        require(_amount <= 1000, \\\"MISOLauncher: Percentage is out of 1000\\\");\\n        launcherFees.integratorFeePct = BoringMath.to32(_amount);\\n    }\\n\\n    /**\\n     * @notice Sets dividend address.\\n     * @param _divaddr Dividend address.\\n     */\\n    function setDividends(address payable _divaddr) external {\\n        require(accessControls.hasAdminRole(msg.sender), \\\"MISOLauncher.setDev: Sender must be operator\\\");\\n        require(_divaddr != address(0));\\n        misoDiv = _divaddr;\\n    }\\n    /**\\n     * @notice Sets the factory to be locked or unlocked.\\n     * @param _locked bool.\\n     */\\n    function setLocked(bool _locked) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be admin\\\"\\n        );\\n        locked = _locked;\\n    }\\n\\n    /**\\n     * @notice Sets the current template ID for any type.\\n     * @param _templateType Type of template.\\n     * @param _templateId The ID of the current template for that type\\n     */\\n    function setCurrentTemplateId(uint256 _templateType, uint256 _templateId) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be admin\\\"\\n        );\\n        currentTemplateId[_templateType] = _templateId;\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasLauncherMinterRole(address _address) public view returns (bool) {\\n        return accessControls.hasRole(LAUNCHER_MINTER_ROLE, _address);\\n    }\\n\\n\\n\\n    /**\\n     * @notice Creates a launcher corresponding to _templateId.\\n     * @param _templateId Template id of the launcher to create.\\n     * @param _integratorFeeAccount Address to pay the fee to.\\n     * @return launcher  Launcher address.\\n     */\\n    function deployLauncher(\\n        uint256 _templateId,\\n        address payable _integratorFeeAccount\\n    )\\n        public payable returns (address launcher)\\n    {\\n        /// @dev If the contract is locked, only admin and minters can deploy. \\n        if (locked) {\\n            require(accessControls.hasAdminRole(msg.sender) \\n                    || accessControls.hasMinterRole(msg.sender)\\n                    || hasLauncherMinterRole(msg.sender),\\n                \\\"MISOLauncher: Sender must be minter if locked\\\"\\n            );\\n        }\\n\\n        LauncherFees memory _launcherFees = launcherFees;\\n        address launcherTemplate = launcherTemplates[_templateId];\\n        require(msg.value >= uint256(_launcherFees.minimumFee), \\\"MISOLauncher: Failed to transfer minimumFee\\\");\\n        require(launcherTemplate != address(0), \\\"MISOLauncher: Launcher template doesn't exist\\\");\\n        uint256 integratorFee = 0;\\n        uint256 misoFee = msg.value;\\n        if (_integratorFeeAccount != address(0) && _integratorFeeAccount != misoDiv) {\\n            integratorFee = misoFee * uint256(_launcherFees.integratorFeePct) / 1000;\\n            misoFee = misoFee - integratorFee;\\n        }\\n        /// @dev Deploy using the BentoBox factory. \\n        launcher = bentoBox.deploy(launcherTemplate, \\\"\\\", false);\\n        launcherInfo[address(launcher)] = Launcher(true, BoringMath.to64(_templateId), BoringMath.to128(launchers.length));\\n        launchers.push(address(launcher));\\n        emit LauncherCreated(msg.sender, address(launcher), launcherTemplates[_templateId]);\\n        if (misoFee > 0) {\\n            misoDiv.transfer(misoFee);\\n        }\\n        if (integratorFee > 0) {\\n            _integratorFeeAccount.transfer(integratorFee);\\n        }\\n    }\\n\\n\\n    /**\\n     * @notice Creates a new MISOLauncher using _templateId.\\n     * @dev Initializes auction with the parameters passed.\\n     * @param _templateId Id of the auction template to create.\\n     * @param _token The token address to be sold.\\n     * @param _tokenSupply Amount of tokens to be sold at market.\\n     * @param _integratorFeeAccount Address to send refferal bonus, if set.\\n     * @param _data Data to be sent to template on Init.\\n     * @return newLauncher Launcher address.\\n     */\\n    function createLauncher(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address payable _integratorFeeAccount,\\n        bytes calldata _data\\n    )\\n        external payable returns (address newLauncher)\\n    {\\n\\n        newLauncher = deployLauncher(_templateId, _integratorFeeAccount);\\n        if (_tokenSupply > 0) {\\n            _safeTransferFrom(_token, msg.sender, _tokenSupply);\\n            require(IERC20(_token).approve(newLauncher, _tokenSupply), \\\"1\\\");\\n        }\\n        IMisoLiquidity(newLauncher).initLauncher(_data);\\n\\n        if (_tokenSupply > 0) {\\n            uint256 remainingBalance = IERC20(_token).balanceOf(address(this));\\n            if (remainingBalance > 0) {\\n                _safeTransfer(_token, msg.sender, remainingBalance);\\n            }\\n        }\\n        return newLauncher;\\n    }\\n\\n\\n    /**\\n     * @notice Function to add a launcher template to create through factory.\\n     * @dev Should have operator access\\n     * @param _template Launcher template address.\\n    */\\n    function addLiquidityLauncherTemplate(address _template) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be operator\\\"\\n        );\\n        uint256 templateType = IMisoLiquidity(_template).liquidityTemplate();\\n        require(templateType > 0, \\\"MISOLauncher: Incorrect template code \\\");\\n        launcherTemplateId++;\\n\\n        launcherTemplates[launcherTemplateId] = _template;\\n        launcherTemplateToId[_template] = launcherTemplateId;\\n        currentTemplateId[templateType] = launcherTemplateId;\\n        emit LauncherTemplateAdded(_template, launcherTemplateId);\\n\\n    }\\n\\n    /**\\n     * @dev Function to remove a launcher template from factory.\\n     * @dev Should have operator access.\\n     * @param _templateId Id of the template to be deleted.\\n     */\\n    function removeLiquidityLauncherTemplate(uint256 _templateId) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"MISOLauncher: Sender must be operator\\\"\\n        );\\n        require(launcherTemplates[_templateId] != address(0));\\n        address _template = launcherTemplates[_templateId];\\n        launcherTemplates[_templateId] = address(0);\\n        delete launcherTemplateToId[_template];\\n        emit LauncherTemplateRemoved(_template, _templateId);\\n    }\\n\\n    /**\\n     * @notice Get the address based on launcher template ID.\\n     * @param _templateId Launcher template ID.\\n     * @return address of the required template ID.\\n     */\\n    function getLiquidityLauncherTemplate(uint256 _templateId) external view returns (address) {\\n        return launcherTemplates[_templateId];\\n    }\\n\\n    function getTemplateId(address _launcherTemplate) external view returns (uint256) {\\n        return launcherTemplateToId[_launcherTemplate];\\n    }\\n\\n    /**\\n     * @notice Get the total number of launchers in the contract.\\n     * @return uint256 Launcher count.\\n     */\\n    function numberOfLiquidityLauncherContracts() external view returns (uint256) {\\n        return launchers.length;\\n    }\\n\\n    function minimumFee() external view returns(uint128) {\\n        return launcherFees.minimumFee;\\n    }\\n\\n    function getLauncherTemplateId(address _launcher) external view returns(uint64) {\\n        return launcherInfo[_launcher].templateId;\\n    }\\n    function getLaunchers() external view returns(address[] memory) {\\n        return launchers;\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xc08eeb945531b3372669214ad1e58f04bf4dfceae8075851000a2e63fedb0962\",\"license\":\"GPL-3.0\"},\"contracts/OpenZeppelin/access/AccessControl.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x33279c22849e760b03180e23a3686d97b554c680f9874c8658a23863aee6e8c3\"},\"contracts/OpenZeppelin/utils/Address.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x39f82f1573985812031896891cb27ea1bad51aeb9e47efbf3b6798b5647f3e5c\"},\"contracts/OpenZeppelin/utils/Context.sol\":{\"content\":\"\\n\\npragma solidity 0.6.12;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x408ed1e8d180f17597080e993fea24a26ec262dd56ee20dfbdcf511d261387d4\"},\"contracts/OpenZeppelin/utils/EnumerableSet.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x7a5437ee09401a3d1ec98f126470362f9848afbf521510d6bfae61d7b42a8fb7\"},\"contracts/Utils/BoringMath.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(-1), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x5421027155bdde5de1c6cb4d3197b6534464fd2c89b7eec84ce6c09f6c22b2b5\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Transfer helper from UniswapV2 Router\\n    function _safeApprove(address token, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\\n    }\\n\\n\\n    /**\\n     * There are many non-compliant ERC20 tokens... this can handle most, adapted from UniSwap V2\\n     * Im trying to make it a habit to put external calls last (reentrancy)\\n     * You can put this in an internal function if you like.\\n     */\\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0xa9059cbb = bytes4(keccak256(\\\"transfer(address,uint256)\\\"))\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 Transfer failed\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0x23b872dd = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"))\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 TransferFrom failed\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xc2af6cb1d93e3358de826e42b24bb2f108855b1b17d3f40d3da285c1e52e6bd1\"},\"contracts/interfaces/IBentoBoxFactory.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IBentoBoxFactory {\\n    function deploy(address masterContract, bytes calldata data, bool useCreate2) external payable returns (address cloneAddress) ;\\n    function masterContractApproved(address, address) external view returns (bool);\\n    function masterContractOf(address) external view returns (address);\\n    function setMasterContractApproval(address user, address masterContract, bool approved, uint8 v, bytes32 r, bytes32 s) external;\\n}\",\"keccak256\":\"0x51cd94bc37404c15a67910c521d43228c212daa3fafb37ee215bd409c2e0c2bb\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0x9e3da3bb9ec7a825414952ac7fdae2133f873608d059cb40e03ac0194cf1ca40\"},\"contracts/interfaces/IMisoLiquidity.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IMisoLiquidity {\\n    function initLauncher(\\n        bytes calldata data\\n    ) external;\\n\\n    function getMarkets() external view returns(address[] memory);\\n    function liquidityTemplate() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4d98a5fa99dc6e36cd9f02099bd61ecdac84c63de828287f13a8759bb11687dd\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061204b806100206000396000f3fe6080604052600436106101b75760003560e01c806386adc322116100ec578063ad5c46481161008a578063cd70f73411610064578063cd70f734146106aa578063cf309012146106d6578063d335ebda146106eb578063fcb62f901461071e576101b7565b8063ad5c464814610630578063bc79913b14610645578063c9907b0814610695576101b7565b806396f1266e116100c657806396f1266e146105735780639e5940cc146105885780639e9188ea146105b8578063a5f4d70f146105eb576101b7565b806386adc322146104ed5780638c363a0b1461050257806392787b4814610549576101b7565b80636b2ace871161015957806370433d031161013357806370433d031461042b578063748365ef146104905780637b7fb153146104a55780638637e041146104d8576101b7565b80636b2ace87146103875780636c4ceb361461039c5780636de88d9714610401576101b7565b80632ed4f578116101955780632ed4f578146102455780633eb63aa0146102815780633f1f44b0146102c7578063632cef90146102f1576101b7565b8063182a7506146101bc5780631a7626e7146101e8578063211e28b614610219575b600080fd5b3480156101c857600080fd5b506101e6600480360360208110156101df57600080fd5b503561075b565b005b3480156101f457600080fd5b506101fd610842565b604080516001600160801b039092168252519081900360200190f35b34801561022557600080fd5b506101e66004803603602081101561023c57600080fd5b50351515610851565b34801561025157600080fd5b5061026f6004803603602081101561026857600080fd5b5035610916565b60408051918252519081900360200190f35b34801561028d57600080fd5b506102ab600480360360208110156102a457600080fd5b5035610928565b604080516001600160a01b039092168252519081900360200190f35b3480156102d357600080fd5b506101e6600480360360208110156102ea57600080fd5b503561094f565b6102ab600480360360a081101561030757600080fd5b8135916001600160a01b0360208201358116926040830135926060810135909216919081019060a08101608082013564010000000081111561034857600080fd5b82018360208201111561035a57600080fd5b8035906020019184600183028401116401000000008311171561037c57600080fd5b509092509050610a73565b34801561039357600080fd5b506102ab610c79565b3480156103a857600080fd5b506103cf600480360360208110156103bf57600080fd5b50356001600160a01b0316610c88565b60408051931515845267ffffffffffffffff90921660208401526001600160801b031682820152519081900360600190f35b34801561040d57600080fd5b506102ab6004803603602081101561042457600080fd5b5035610cbf565b34801561043757600080fd5b50610440610cda565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561047c578181015183820152602001610464565b505050509050019250505060405180910390f35b34801561049c57600080fd5b506102ab610d3c565b3480156104b157600080fd5b506101e6600480360360208110156104c857600080fd5b50356001600160a01b0316610d4b565b3480156104e457600080fd5b5061026f610fb0565b3480156104f957600080fd5b5061026f610fd4565b34801561050e57600080fd5b506105356004803603602081101561052557600080fd5b50356001600160a01b0316610fda565b604080519115158252519081900360200190f35b34801561055557600080fd5b506101e66004803603602081101561056c57600080fd5b5035611080565b34801561057f57600080fd5b5061026f611244565b34801561059457600080fd5b506101e6600480360360408110156105ab57600080fd5b508035906020013561124a565b3480156105c457600080fd5b506101e6600480360360208110156105db57600080fd5b50356001600160a01b031661138c565b3480156105f757600080fd5b506101e66004803603606081101561060e57600080fd5b506001600160a01b038135811691602081013582169160409091013516611479565b34801561063c57600080fd5b506102ab6115ec565b34801561065157600080fd5b506106786004803603602081101561066857600080fd5b50356001600160a01b03166115fb565b6040805167ffffffffffffffff9092168252519081900360200190f35b3480156106a157600080fd5b506102ab611625565b6102ab600480360360408110156106c057600080fd5b50803590602001356001600160a01b0316611639565b3480156106e257600080fd5b50610535611b25565b3480156106f757600080fd5b5061026f6004803603602081101561070e57600080fd5b50356001600160a01b0316611b2e565b34801561072a57600080fd5b50610733611b49565b604080516001600160801b03909316835263ffffffff90911660208301528051918290030190f35b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d60208110156107d057600080fd5b505161080d5760405162461bcd60e51b8152600401808060200182810382526025815260200180611e6c6025913960400191505060405180910390fd5b61081681611b67565b600980546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550565b6009546001600160801b031690565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561089c57600080fd5b505afa1580156108b0573d6000803e3d6000fd5b505050506040513d60208110156108c657600080fd5b50516109035760405162461bcd60e51b8152600401808060200182810382526022815260200180611f096022913960400191505060405180910390fd5b600a805460ff1916911515919091179055565b60076020526000908152604090205481565b6001818154811061093557fe5b6000918252602090912001546001600160a01b0316905081565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561099a57600080fd5b505afa1580156109ae573d6000803e3d6000fd5b505050506040513d60208110156109c457600080fd5b5051610a015760405162461bcd60e51b8152600401808060200182810382526025815260200180611e6c6025913960400191505060405180910390fd5b6103e8811115610a425760405162461bcd60e51b8152600401808060200182810382526027815260200180611e916027913960400191505060405180910390fd5b610a4b81611bc9565b6009805463ffffffff92909216600160801b0263ffffffff60801b1990921691909117905550565b6000610a7f8785611639565b90508415610b4a57610a92863387611c24565b856001600160a01b031663095ea7b382876040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ae957600080fd5b505af1158015610afd573d6000803e3d6000fd5b505050506040513d6020811015610b1357600080fd5b5051610b4a576040805162461bcd60e51b81526020600482015260016024820152603160f81b604482015290519081900360640190fd5b604051637c17e46760e11b8152602060048201908152602482018490526001600160a01b0383169163f82fc8ce9186918691908190604401848480828437600081840152601f19601f8201169050808301925050509350505050600060405180830381600087803b158015610bbe57600080fd5b505af1158015610bd2573d6000803e3d6000fd5b505050506000851115610c6f576000866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c2e57600080fd5b505afa158015610c42573d6000803e3d6000fd5b505050506040513d6020811015610c5857600080fd5b505190508015610c6d57610c6d873383611d4c565b505b9695505050505050565b6004546001600160a01b031681565b60086020526000908152604090205460ff811690610100810467ffffffffffffffff1690600160481b90046001600160801b031683565b6000908152600560205260409020546001600160a01b031690565b60606001805480602002602001604051908101604052809291908181526020018280548015610d3257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d14575b5050505050905090565b6000546001600160a01b031681565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610d9657600080fd5b505afa158015610daa573d6000803e3d6000fd5b505050506040513d6020811015610dc057600080fd5b505180610e40575060005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610e1357600080fd5b505afa158015610e27573d6000803e3d6000fd5b505050506040513d6020811015610e3d57600080fd5b50515b610e7b5760405162461bcd60e51b8152600401808060200182810382526025815260200180611e6c6025913960400191505060405180910390fd5b6000816001600160a01b0316638566de4b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb657600080fd5b505afa158015610eca573d6000803e3d6000fd5b505050506040513d6020811015610ee057600080fd5b5051905080610f205760405162461bcd60e51b8152600401808060200182810382526026815260200180611eb86026913960400191505060405180910390fd5b60028054600101808255600090815260056020908152604080832080546001600160a01b0319166001600160a01b038816908117909155935484845260068352818420819055858452600783529281902083905580519384529083019190915280517f6c52e34db307a16709b387d61b2de0b4dd4a2ef6fd68b04b5515ef00a533b18f9281900390910190a15050565b7fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b14698081565b60015490565b6000805460408051632474521560e21b81527fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b14698060048201526001600160a01b038581166024830152915191909216916391d14854916044808301926020929190829003018186803b15801561104e57600080fd5b505afa158015611062573d6000803e3d6000fd5b505050506040513d602081101561107857600080fd5b505192915050565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b1580156110cb57600080fd5b505afa1580156110df573d6000803e3d6000fd5b505050506040513d60208110156110f557600080fd5b505180611175575060005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561114857600080fd5b505afa15801561115c573d6000803e3d6000fd5b505050506040513d602081101561117257600080fd5b50515b6111b05760405162461bcd60e51b8152600401808060200182810382526025815260200180611e6c6025913960400191505060405180910390fd5b6000818152600560205260409020546001600160a01b03166111d157600080fd5b600081815260056020908152604080832080546001600160a01b031981169091556001600160a01b03168084526006835281842093909355805183815291820184905280517f9c4b27a4ee95cde6444d871111211ff603accbdff0b4e96e07af9f4eba52be579281900390910190a15050565b60025481565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561129557600080fd5b505afa1580156112a9573d6000803e3d6000fd5b505050506040513d60208110156112bf57600080fd5b50518061133f575060005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561131257600080fd5b505afa158015611326573d6000803e3d6000fd5b505050506040513d602081101561133c57600080fd5b50515b61137a5760405162461bcd60e51b8152600401808060200182810382526022815260200180611f096022913960400191505060405180910390fd5b60009182526007602052604090912055565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b1580156113d757600080fd5b505afa1580156113eb573d6000803e3d6000fd5b505050506040513d602081101561140157600080fd5b505161143e5760405162461bcd60e51b815260040180806020018281038252602c815260200180611f58602c913960400191505060405180910390fd5b6001600160a01b03811661145157600080fd5b600a80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600054600160a01b900460ff161561149057600080fd5b6001600160a01b0382166114d55760405162461bcd60e51b815260040180806020018281038252602c815260200180611fea602c913960400191505060405180910390fd5b6001600160a01b03831661151a5760405162461bcd60e51b8152600401808060200182810382526036815260200180611f846036913960400191505060405180910390fd5b6001600160a01b03811661155f5760405162461bcd60e51b8152600401808060200182810382526030815260200180611fba6030913960400191505060405180910390fd5b60008054600480546001600160a01b038581166001600160a01b03199283161790925560038054878416908316179055600a805460ff1916600117905560ff60a01b1991871692169190911716600160a01b1790556040805133815290517f273553a2db9d9c7afb53120e2c4a60f274686bbe8e64b350d64aaa9d6289397e9181900360200190a1505050565b6003546001600160a01b031681565b6001600160a01b0316600090815260086020526040902054610100900467ffffffffffffffff1690565b600a5461010090046001600160a01b031681565b600a5460009060ff1615611786576000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561169257600080fd5b505afa1580156116a6573d6000803e3d6000fd5b505050506040513d60208110156116bc57600080fd5b50518061173c57506000546040805163099db01760e01b815233600482015290516001600160a01b039092169163099db01791602480820192602092909190829003018186803b15801561170f57600080fd5b505afa158015611723573d6000803e3d6000fd5b505050506040513d602081101561173957600080fd5b50515b8061174b575061174b33610fda565b6117865760405162461bcd60e51b815260040180806020018281038252602d815260200180611f2b602d913960400191505060405180910390fd5b61178e611e27565b506040805180820182526009546001600160801b038082168352600160801b90910463ffffffff16602080840191909152600087815260059091529290922054815191926001600160a01b03909116911634101561181d5760405162461bcd60e51b815260040180806020018281038252602b815260200180611ede602b913960400191505060405180910390fd5b6001600160a01b0381166118625760405162461bcd60e51b815260040180806020018281038252602d815260200180611e3f602d913960400191505060405180910390fd5b6000346001600160a01b038616158015906118905750600a546001600160a01b038781166101009092041614155b156118b3576103e8846020015163ffffffff168202816118ac57fe5b0491508190035b6004805460408051631f54245b60e01b81526001600160a01b0387811694820194909452600060448201819052606060248301526064820181905291519390921692631f54245b9260a4808201936020939283900390910190829087803b15801561191d57600080fd5b505af1158015611931573d6000803e3d6000fd5b505050506040513d602081101561194757600080fd5b50516040805160608101909152600181529095506020810161196889611dc8565b67ffffffffffffffff168152602001611985600180549050611b67565b6001600160801b039081169091526001600160a01b038088166000818152600860209081526040808320875181548985015199840151909816600160481b0278ffffffffffffffffffffffffffffffff0000000000000000001967ffffffffffffffff909a166101000268ffffffffffffffff001992151560ff19909a169990991791909116979097179790971695909517909555600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916831790558b815260058552839020548351921682529151919233927f3ba8b254094e662ed7500a3ad77fd9f4f041f221a7b9f0714e3fdbf324c5d8639281900390910190a38015611add57600a546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f19350505050158015611adb573d6000803e3d6000fd5b505b8115611b1b576040516001600160a01b0387169083156108fc029084906000818181858888f19350505050158015611b19573d6000803e3d6000fd5b505b5050505092915050565b600a5460ff1681565b6001600160a01b031660009081526006602052604090205490565b6009546001600160801b03811690600160801b900463ffffffff1682565b60006001600160801b03821115611bc5576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604482015290519081900360640190fd5b5090565b600063ffffffff821115611bc5576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152306044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000946060949389169392918291908083835b60208310611ca75780518252601f199092019160209182019101611c88565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d09576040519150601f19603f3d011682016040523d82523d6000602084013e611d0e565b606091505b5091509150818015611d3c575080511580611d3c5750808060200190516020811015611d3957600080fd5b50515b611d4557600080fd5b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009460609493891693929182919080838360208310611ca75780518252601f199092019160209182019101611c88565b600067ffffffffffffffff821115611bc5576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604482015290519081900360640190fd5b60408051808201909152600080825260208201529056fe4d49534f4c61756e636865723a204c61756e636865722074656d706c61746520646f65736e27742065786973744d49534f4c61756e636865723a2053656e646572206d757374206265206f70657261746f724d49534f4c61756e636865723a2050657263656e74616765206973206f7574206f6620313030304d49534f4c61756e636865723a20496e636f72726563742074656d706c61746520636f6465204d49534f4c61756e636865723a204661696c656420746f207472616e73666572206d696e696d756d4665654d49534f4c61756e636865723a2053656e646572206d7573742062652061646d696e4d49534f4c61756e636865723a2053656e646572206d757374206265206d696e746572206966206c6f636b65644d49534f4c61756e636865722e7365744465763a2053656e646572206d757374206265206f70657261746f72696e69744d49534f4c61756e636865723a20616363657373436f6e74726f6c732063616e6e6f742062652073657420746f207a65726f696e69744d49534f4c61756e636865723a2062656e746f426f782063616e6e6f742062652073657420746f207a65726f696e69744d49534f4c61756e636865723a20574554482063616e6e6f742062652073657420746f207a65726fa26469706673582212200df6b1aa6bb715d5b2e0155b7b554a4a461133216579029bc9e92d63b2b7909c64736f6c634300060c0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidityLauncherTemplate(address)": {
        "details": "Should have operator access",
        "params": {
          "_template": "Launcher template address."
        }
      },
      "createLauncher(uint256,address,uint256,address,bytes)": {
        "details": "Initializes auction with the parameters passed.",
        "params": {
          "_data": "Data to be sent to template on Init.",
          "_integratorFeeAccount": "Address to send refferal bonus, if set.",
          "_templateId": "Id of the auction template to create.",
          "_token": "The token address to be sold.",
          "_tokenSupply": "Amount of tokens to be sold at market."
        },
        "returns": {
          "newLauncher": "Launcher address."
        }
      },
      "deployLauncher(uint256,address)": {
        "params": {
          "_integratorFeeAccount": "Address to pay the fee to.",
          "_templateId": "Template id of the launcher to create."
        },
        "returns": {
          "launcher": " Launcher address."
        }
      },
      "getLiquidityLauncherTemplate(uint256)": {
        "params": {
          "_templateId": "Launcher template ID."
        },
        "returns": {
          "_0": "address of the required template ID."
        }
      },
      "hasLauncherMinterRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "initMISOLauncher(address,address,address)": {
        "details": "Can only be initialized once.",
        "params": {
          "_accessControls": "Sets address to get the access controls from."
        }
      },
      "numberOfLiquidityLauncherContracts()": {
        "returns": {
          "_0": "uint256 Launcher count."
        }
      },
      "removeLiquidityLauncherTemplate(uint256)": {
        "details": "Function to remove a launcher template from factory.Should have operator access.",
        "params": {
          "_templateId": "Id of the template to be deleted."
        }
      },
      "setCurrentTemplateId(uint256,uint256)": {
        "params": {
          "_templateId": "The ID of the current template for that type",
          "_templateType": "Type of template."
        }
      },
      "setDividends(address)": {
        "params": {
          "_divaddr": "Dividend address."
        }
      },
      "setIntegratorFeePct(uint256)": {
        "params": {
          "_amount": "Percentage amount."
        }
      },
      "setLocked(bool)": {
        "params": {
          "_locked": "bool."
        }
      },
      "setMinimumFee(uint256)": {
        "params": {
          "_amount": "Fee amount."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "LauncherCreated(address,address,address)": {
        "notice": "Event emitted when launcher is created using template id."
      },
      "LauncherTemplateAdded(address,uint256)": {
        "notice": "Event emitted when launcher template is added to factory."
      },
      "LauncherTemplateRemoved(address,uint256)": {
        "notice": "Event emitted when launcher template is removed."
      },
      "MisoInitLauncher(address)": {
        "notice": "Event emitted when first intializing the liquidity launcher."
      }
    },
    "kind": "user",
    "methods": {
      "WETH()": {
        "notice": "Address for Wrapped Ether."
      },
      "accessControls()": {
        "notice": "Responsible for access rights to the contract."
      },
      "addLiquidityLauncherTemplate(address)": {
        "notice": "Function to add a launcher template to create through factory."
      },
      "createLauncher(uint256,address,uint256,address,bytes)": {
        "notice": "Creates a new MISOLauncher using _templateId."
      },
      "deployLauncher(uint256,address)": {
        "notice": "Creates a launcher corresponding to _templateId."
      },
      "getLiquidityLauncherTemplate(uint256)": {
        "notice": "Get the address based on launcher template ID."
      },
      "hasLauncherMinterRole(address)": {
        "notice": "Used to check whether an address has the minter role"
      },
      "initMISOLauncher(address,address,address)": {
        "notice": "Single gateway to initialize the MISO Launcher with proper address."
      },
      "launcherFees()": {
        "notice": "Minimum fee to create a launcher through the factory."
      },
      "launcherInfo(address)": {
        "notice": "Mapping from auction created through this contract to Auction struct."
      },
      "launcherTemplateId()": {
        "notice": "Template id to track respective auction template."
      },
      "launchers(uint256)": {
        "notice": "All the launchers created using factory."
      },
      "locked()": {
        "notice": "Contract locked status. If locked, only minters can deploy"
      },
      "misoDiv()": {
        "notice": "Any donations if set are sent here."
      },
      "numberOfLiquidityLauncherContracts()": {
        "notice": "Get the total number of launchers in the contract."
      },
      "setCurrentTemplateId(uint256,uint256)": {
        "notice": "Sets the current template ID for any type."
      },
      "setDividends(address)": {
        "notice": "Sets dividend address."
      },
      "setIntegratorFeePct(uint256)": {
        "notice": "Sets integrator fee percentage."
      },
      "setLocked(bool)": {
        "notice": "Sets the factory to be locked or unlocked."
      },
      "setMinimumFee(uint256)": {
        "notice": "Sets the minimum fee."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12656,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "accessControls",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(MISOAccessControls)563"
      },
      {
        "astId": 12664,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "initialised",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 12675,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launchers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 12678,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launcherTemplateId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12681,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "WETH",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12683,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "bentoBox",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IBentoBoxFactory)25743"
      },
      {
        "astId": 12688,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launcherTemplates",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 12693,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launcherTemplateToId",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12697,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "currentTemplateId",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 12702,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launcherInfo",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Launcher)12671_storage)"
      },
      {
        "astId": 12710,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "launcherFees",
        "offset": 0,
        "slot": "9",
        "type": "t_struct(LauncherFees)12707_storage"
      },
      {
        "astId": 12713,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "locked",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 12716,
        "contract": "contracts/MISOLauncher.sol:MISOLauncher",
        "label": "misoDiv",
        "offset": 1,
        "slot": "10",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IBentoBoxFactory)25743": {
        "encoding": "inplace",
        "label": "contract IBentoBoxFactory",
        "numberOfBytes": "20"
      },
      "t_contract(MISOAccessControls)563": {
        "encoding": "inplace",
        "label": "contract MISOAccessControls",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Launcher)12671_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MISOLauncher.Launcher)",
        "numberOfBytes": "32",
        "value": "t_struct(Launcher)12671_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Launcher)12671_storage": {
        "encoding": "inplace",
        "label": "struct MISOLauncher.Launcher",
        "members": [
          {
            "astId": 12666,
            "contract": "contracts/MISOLauncher.sol:MISOLauncher",
            "label": "exists",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12668,
            "contract": "contracts/MISOLauncher.sol:MISOLauncher",
            "label": "templateId",
            "offset": 1,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 12670,
            "contract": "contracts/MISOLauncher.sol:MISOLauncher",
            "label": "index",
            "offset": 9,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LauncherFees)12707_storage": {
        "encoding": "inplace",
        "label": "struct MISOLauncher.LauncherFees",
        "members": [
          {
            "astId": 12704,
            "contract": "contracts/MISOLauncher.sol:MISOLauncher",
            "label": "minimumFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 12706,
            "contract": "contracts/MISOLauncher.sol:MISOLauncher",
            "label": "integratorFeePct",
            "offset": 16,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}