{"abi": [{"inputs": [{"internalType": "address", "name": "vault_", "type": "address"}, {"internalType": "address", "name": "strategist_", "type": "address"}, {"internalType": "uint256", "name": "convexPid_", "type": "uint256"}, {"internalType": "uint256", "name": "curveIndex_", "type": "uint256"}, {"internalType": "uint256", "name": "curveHopIndex_", "type": "uint256"}, {"internalType": "contract IAddressProvider", "name": "addressProvider_", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "token", "type": "address"}], "name": "AddRewardToken", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Deposit", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Harvest", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "token", "type": "address"}], "name": "RemoveRewardToken", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "reserve", "type": "address"}], "name": "SetCommunityReserve", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetCrvCommunityReserveShare", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetCvxCommunityReserveShare", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetHopImbalanceToleranceIn", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetHopImbalanceToleranceOut", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetImbalanceToleranceIn", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetImbalanceToleranceOut", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetSlippageTolerance", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "strategist", "type": "address"}], "name": "SetStrategist", "type": "event"}, {"anonymous": false, "inputs": [], "name": "Shutdown", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "token", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newDex", "type": "address"}], "name": "SwapDex", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Withdraw", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "WithdrawAll", "type": "event"}, {"inputs": [{"internalType": "address", "name": "token", "type": "address"}], "name": "addRewardToken", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "balance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "convexPid_", "type": "uint256"}, {"internalType": "uint256", "name": "curveIndex_", "type": "uint256"}], "name": "changeConvexPool", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "communityReserve", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "convexPid", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "crvCommunityReserveShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveHopIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveHopPool", "outputs": [{"internalType": "contract ICurveSwap", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curvePool", "outputs": [{"internalType": "contract ICurveSwap", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "cvxCommunityReserveShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimalMultiplier", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "deposit", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvEarned", "type": "uint256"}], "name": "getCvxMintAmount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "harvest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "harvestable", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hasPendingFunds", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "hopImbalanceToleranceIn", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hopImbalanceToleranceOut", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hopLp", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "imbalanceToleranceIn", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "imbalanceToleranceOut", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "isShutdown", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lp", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "token", "type": "address"}], "name": "removeRewardToken", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rewards", "outputs": [{"internalType": "contract IRewardStaking", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "roleManager", "outputs": [{"internalType": "contract IRoleManager", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_communityReserve", "type": "address"}], "name": "setCommunityReserve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvCommunityReserveShare_", "type": "uint256"}], "name": "setCrvCommunityReserveShare", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "cvxCommunityReserveShare_", "type": "uint256"}], "name": "setCvxCommunityReserveShare", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_hopImbalanceToleranceIn", "type": "uint256"}], "name": "setHopImbalanceToleranceIn", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_hopImbalanceToleranceOut", "type": "uint256"}], "name": "setHopImbalanceToleranceOut", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_imbalanceToleranceIn", "type": "uint256"}], "name": "setImbalanceToleranceIn", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_imbalanceToleranceOut", "type": "uint256"}], "name": "setImbalanceToleranceOut", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_slippageTolerance", "type": "uint256"}], "name": "setSlippageTolerance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_strategist", "type": "address"}], "name": "setStrategist", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "shutdown", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "slippageTolerance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "strategist", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "token", "type": "address"}], "name": "swapDex", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "tokenDex", "outputs": [{"internalType": "contract UniswapRouter02", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "underlying", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "vault", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "withdraw", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "withdrawAll", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"100": "contracts/utils/SlippageTolerance.sol", "106": "interfaces/IAddressProvider.sol", "109": "interfaces/IController.sol", "111": "interfaces/IERC20Full.sol", "112": "interfaces/IGasBank.sol", "115": "interfaces/IRoleManager.sol", "117": "interfaces/IStrategy.sol", "120": "interfaces/IVault.sol", "121": "interfaces/IVaultReserve.sol", "128": "interfaces/oracles/IOracleProvider.sol", "131": "interfaces/pool/ILiquidityPool.sol", "134": "interfaces/tokenomics/IInflationManager.sol", "146": "interfaces/vendor/IBooster.sol", "148": "interfaces/vendor/ICurveRegistry.sol", "149": "interfaces/vendor/ICurveSwap.sol", "150": "interfaces/vendor/ICurveSwapEth.sol", "155": "interfaces/vendor/IRewardStaking.sol", "160": "interfaces/vendor/UniswapRouter02.sol", "161": "libraries/AddressProviderHelpers.sol", "162": "libraries/AddressProviderKeys.sol", "167": "libraries/Errors.sol", "168": "libraries/Roles.sol", "169": "libraries/ScaledMath.sol", "17": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "19": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "20": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol", "25": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/structs/EnumerableSet.sol", "33": "contracts/access/Authorization.sol", "34": "contracts/access/AuthorizationBase.sol", "53": "contracts/strategies/BkdTriHopCvx.sol", "96": "contracts/utils/CvxMintAmount.sol"}, "ast": {"absolutePath": "contracts/strategies/BkdTriHopCvx.sol", "exportedSymbols": {"Address": [45176], "AddressProviderHelpers": [38016], "AddressProviderKeys": [35911], "AddressProviderMeta": [35991], "Authorization": [4140], "AuthorizationBase": [4247], "BkdTriHopCvx": [22260], "CvxMintAmount": [31838], "EnumerableSet": [41598], "Error": [39003], "IAddressProvider": [35607], "IBkdToken": [44414], "IBooster": [43894], "IController": [37336], "ICurveRegistry": [44168], "ICurveSwap": [38503], "ICurveSwapEth": [44158], "IERC20": [38094], "IERC20Full": [39770], "IGasBank": [35657], "IInflationManager": [37862], "ILiquidityPool": [37601], "IOracleProvider": [35881], "IPreparable": [44581], "IRewardStaking": [38714], "IRoleManager": [40999], "IStrategy": [43837], "IVault": [39865], "IVaultReserve": [44638], "Roles": [37271], "SafeERC20": [38318], "ScaledMath": [39748], "SlippageTolerance": [32416], "UniswapRouter02": [44025], "UniswapV2Factory": [44045], "UniswapV2Pair": [44035]}, "id": 22261, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 19956, "literals": ["solidity", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "45:22:53"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 19957, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 38095, "src": "69:56:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 19958, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 38319, "src": "126:65:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 19959, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 41599, "src": "192:65:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/AddressProviderHelpers.sol", "file": "../../libraries/AddressProviderHelpers.sol", "id": 19960, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 38017, "src": "259:52:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../../libraries/ScaledMath.sol", "id": 19961, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 39749, "src": "312:40:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/utils/CvxMintAmount.sol", "file": "../utils/CvxMintAmount.sol", "id": 19962, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 31839, "src": "353:36:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/utils/SlippageTolerance.sol", "file": "../utils/SlippageTolerance.sol", "id": 19963, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 32417, "src": "390:40:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IERC20Full.sol", "file": "../../interfaces/IERC20Full.sol", "id": 19964, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 39771, "src": "431:41:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IStrategy.sol", "file": "../../interfaces/IStrategy.sol", "id": 19965, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 43838, "src": "473:40:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IAddressProvider.sol", "file": "../../interfaces/IAddressProvider.sol", "id": 19966, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 35608, "src": "514:47:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/IBooster.sol", "file": "../../interfaces/vendor/IBooster.sol", "id": 19967, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 43895, "src": "562:46:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/ICurveSwap.sol", "file": "../../interfaces/vendor/ICurveSwap.sol", "id": 19968, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 38504, "src": "609:48:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/ICurveSwapEth.sol", "file": "../../interfaces/vendor/ICurveSwapEth.sol", "id": 19969, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 44159, "src": "658:51:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/IRewardStaking.sol", "file": "../../interfaces/vendor/IRewardStaking.sol", "id": 19970, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 38715, "src": "710:52:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/UniswapRouter02.sol", "file": "../../interfaces/vendor/UniswapRouter02.sol", "id": 19971, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 44046, "src": "763:53:53", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/ICurveRegistry.sol", "file": "../../interfaces/vendor/ICurveRegistry.sol", "id": 19972, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 22261, "sourceUnit": 44169, "src": "817:52:53", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 19974, "name": "IStrategy", "nodeType": "IdentifierPath", "referencedDeclaration": 43837, "src": "1532:9:53"}, "id": 19975, "nodeType": "InheritanceSpecifier", "src": "1532:9:53"}, {"baseName": {"id": 19976, "name": "CvxMintAmount", "nodeType": "IdentifierPath", "referencedDeclaration": 31838, "src": "1543:13:53"}, "id": 19977, "nodeType": "InheritanceSpecifier", "src": "1543:13:53"}, {"baseName": {"id": 19978, "name": "SlippageTolerance", "nodeType": "IdentifierPath", "referencedDeclaration": 32416, "src": "1558:17:53"}, "id": 19979, "nodeType": "InheritanceSpecifier", "src": "1558:17:53"}], "canonicalName": "BkdTriHopCvx", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 19973, "nodeType": "StructuredDocumentation", "src": "871:635:53", "text": " This is the BkdTriHopCvx strategy, which is designed to be used by a Backd ERC20 Vault.\n The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool.\n The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool.\n The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex.\n Rewards received on Convex (CVX, CRV), are sold in part for the underlying.\n A share of earned CVX & CRV are retained on behalf of the Backd community to participate in governance."}, "fullyImplemented": true, "id": 22260, "linearizedBaseContracts": [22260, 32416, 4140, 4247, 31838, 43837], "name": "BkdTriHopCvx", "nameLocation": "1516:12:53", "nodeType": "ContractDefinition", "nodes": [{"id": 19982, "libraryName": {"id": 19980, "name": "ScaledMath", "nodeType": "IdentifierPath", "referencedDeclaration": 39748, "src": "1588:10:53"}, "nodeType": "UsingForDirective", "src": "1582:29:53", "typeName": {"id": 19981, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1603:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 19986, "libraryName": {"id": 19983, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38318, "src": "1622:9:53"}, "nodeType": "UsingForDirective", "src": "1616:27:53", "typeName": {"id": 19985, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 19984, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "1636:6:53"}, "referencedDeclaration": 38094, "src": "1636:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}}, {"id": 19990, "libraryName": {"id": 19987, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 41598, "src": "1654:13:53"}, "nodeType": "UsingForDirective", "src": "1648:49:53", "typeName": {"id": 19989, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 19988, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 41311, "src": "1672:24:53"}, "referencedDeclaration": 41311, "src": "1672:24:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 19994, "libraryName": {"id": 19991, "name": "AddressProviderHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 38016, "src": "1708:22:53"}, "nodeType": "UsingForDirective", "src": "1702:50:53", "typeName": {"id": 19993, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 19992, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 35607, "src": "1735:16:53"}, "referencedDeclaration": 35607, "src": "1735:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}}, {"constant": true, "id": 19997, "mutability": "constant", "name": "_CURVE_CVX_INDEX", "nameLocation": "1783:16:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "1758:45:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 19995, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1758:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31", "id": 19996, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1802:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "visibility": "private"}, {"constant": true, "id": 20000, "mutability": "constant", "name": "_CURVE_ETH_INDEX", "nameLocation": "1834:16:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "1809:45:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 19998, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1809:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 19999, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1853:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "private"}, {"constant": true, "id": 20006, "mutability": "constant", "name": "_BOOSTER", "nameLocation": "1888:8:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "1861:90:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}, "typeName": {"id": 20002, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20001, "name": "IBooster", "nodeType": "IdentifierPath", "referencedDeclaration": 43894, "src": "1861:8:53"}, "referencedDeclaration": 43894, "src": "1861:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}, "value": {"arguments": [{"hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331", "id": 20004, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1908:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20003, "name": "IBooster", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43894, "src": "1899:8:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBooster_$43894_$", "typeString": "type(contract IBooster)"}}, "id": 20005, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1899:52:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}, "visibility": "internal"}, {"constant": true, "id": 20012, "mutability": "constant", "name": "_CURVE_REGISTRY", "nameLocation": "2017:15:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "1984:117:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}, "typeName": {"id": 20008, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20007, "name": "ICurveRegistry", "nodeType": "IdentifierPath", "referencedDeclaration": 44168, "src": "1984:14:53"}, "referencedDeclaration": 44168, "src": "1984:14:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}}, "value": {"arguments": [{"hexValue": "307839304530304143653134386361336232334163316243384332343043326137446439633264376635", "id": 20010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2058:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x90E00ACe148ca3b23Ac1bC8C240C2a7Dd9c2d7f5"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20009, "name": "ICurveRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44168, "src": "2043:14:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveRegistry_$44168_$", "typeString": "type(contract ICurveRegistry)"}}, "id": 20011, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2043:58:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}}, "visibility": "internal"}, {"constant": true, "id": 20018, "mutability": "constant", "name": "_CVX", "nameLocation": "2159:4:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2134:82:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20014, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20013, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "2134:6:53"}, "referencedDeclaration": 38094, "src": "2134:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "value": {"arguments": [{"hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242", "id": 20016, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2173:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20015, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "2166:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20017, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2166:50:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": true, "id": 20024, "mutability": "constant", "name": "_WETH", "nameLocation": "2254:5:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2229:83:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20020, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20019, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "2229:6:53"}, "referencedDeclaration": 38094, "src": "2229:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "value": {"arguments": [{"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332", "id": 20022, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2269:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20021, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "2262:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20023, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2262:50:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": true, "id": 20030, "mutability": "constant", "name": "_CRV", "nameLocation": "2351:4:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2326:82:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20026, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20025, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "2326:6:53"}, "referencedDeclaration": 38094, "src": "2326:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "value": {"arguments": [{"hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532", "id": 20028, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2365:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20027, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "2358:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20029, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2358:50:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": true, "id": 20036, "mutability": "constant", "name": "_SUSHISWAP", "nameLocation": "2455:10:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2421:114:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "typeName": {"id": 20032, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20031, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "2421:15:53"}, "referencedDeclaration": 44025, "src": "2421:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "value": {"arguments": [{"hexValue": "307864396531634531376632363431663234614538333633376162363661326363613943333738423946", "id": 20034, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2492:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20033, "name": "UniswapRouter02", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44025, "src": "2476:15:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_UniswapRouter02_$44025_$", "typeString": "type(contract UniswapRouter02)"}}, "id": 20035, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2476:59:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "visibility": "internal"}, {"constant": true, "id": 20042, "mutability": "constant", "name": "_UNISWAP", "nameLocation": "2605:8:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2571:112:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "typeName": {"id": 20038, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20037, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "2571:15:53"}, "referencedDeclaration": 44025, "src": "2571:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "value": {"arguments": [{"hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844", "id": 20040, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2640:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20039, "name": "UniswapRouter02", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44025, "src": "2624:15:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_UniswapRouter02_$44025_$", "typeString": "type(contract UniswapRouter02)"}}, "id": 20041, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2624:59:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "visibility": "internal"}, {"constant": true, "id": 20048, "mutability": "constant", "name": "_CVX_ETH_CURVE_POOL", "nameLocation": "2749:19:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2717:119:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}, "typeName": {"id": 20044, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20043, "name": "ICurveSwapEth", "nodeType": "IdentifierPath", "referencedDeclaration": 44158, "src": "2717:13:53"}, "referencedDeclaration": 44158, "src": "2717:13:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}}, "value": {"arguments": [{"hexValue": "307842353736343931463145366535453632663164384632363036324565383232423430423045306434", "id": 20046, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2793:42:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xB576491F1E6e5E62f1d8F26062Ee822B40B0E0d4"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20045, "name": "ICurveSwapEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44158, "src": "2779:13:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwapEth_$44158_$", "typeString": "type(contract ICurveSwapEth)"}}, "id": 20047, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2779:57:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}}, "visibility": "internal"}, {"constant": false, "id": 20051, "mutability": "immutable", "name": "_addressProvider", "nameLocation": "2901:16:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2865:52:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}, "typeName": {"id": 20050, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20049, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 35607, "src": "2865:16:53"}, "referencedDeclaration": 35607, "src": "2865:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "fbfa77cf", "id": 20053, "mutability": "immutable", "name": "vault", "nameLocation": "3001:5:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "2976:30:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20052, "name": "address", "nodeType": "ElementaryTypeName", "src": "2976:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "6f307dc3", "id": 20056, "mutability": "immutable", "name": "underlying", "nameLocation": "3051:10:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3027:34:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20055, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20054, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "3027:6:53"}, "referencedDeclaration": 38094, "src": "3027:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "283f3b56", "id": 20059, "mutability": "immutable", "name": "curveHopPool", "nameLocation": "3118:12:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3090:40:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}, "typeName": {"id": 20058, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20057, "name": "ICurveSwap", "nodeType": "IdentifierPath", "referencedDeclaration": 38503, "src": "3090:10:53"}, "referencedDeclaration": 38503, "src": "3090:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "visibility": "public"}, {"constant": false, "functionSelector": "44d32ee9", "id": 20062, "mutability": "immutable", "name": "hopLp", "nameLocation": "3190:5:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3166:29:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20061, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20060, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "3166:6:53"}, "referencedDeclaration": 38094, "src": "3166:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "69cbb00d", "id": 20064, "mutability": "immutable", "name": "curveHopIndex", "nameLocation": "3253:13:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3228:38:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20063, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3228:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "3082538f", "id": 20066, "mutability": "immutable", "name": "decimalMultiplier", "nameLocation": "3331:17:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3306:42:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20065, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3306:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "218751b2", "id": 20069, "mutability": "mutable", "name": "curvePool", "nameLocation": "3422:9:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3404:27:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}, "typeName": {"id": 20068, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20067, "name": "ICurveSwap", "nodeType": "IdentifierPath", "referencedDeclaration": 38503, "src": "3404:10:53"}, "referencedDeclaration": 38503, "src": "3404:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "visibility": "public"}, {"constant": false, "functionSelector": "86993bef", "id": 20071, "mutability": "mutable", "name": "convexPid", "nameLocation": "3466:9:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3451:24:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20070, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3451:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "7bdcdaff", "id": 20073, "mutability": "mutable", "name": "curveIndex", "nameLocation": "3540:10:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3525:25:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3525:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "313c06a0", "id": 20076, "mutability": "mutable", "name": "lp", "nameLocation": "3604:2:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3590:16:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 20075, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20074, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "3590:6:53"}, "referencedDeclaration": 38094, "src": "3590:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "9ec5a894", "id": 20079, "mutability": "mutable", "name": "rewards", "nameLocation": "3657:7:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3635:29:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}, "typeName": {"id": 20078, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20077, "name": "IRewardStaking", "nodeType": "IdentifierPath", "referencedDeclaration": 38714, "src": "3635:14:53"}, "referencedDeclaration": 38714, "src": "3635:14:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "visibility": "public"}, {"constant": false, "functionSelector": "56be5f71", "id": 20081, "mutability": "mutable", "name": "imbalanceToleranceIn", "nameLocation": "3733:20:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3718:35:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20080, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3718:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1a55820d", "id": 20083, "mutability": "mutable", "name": "imbalanceToleranceOut", "nameLocation": "3843:21:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3828:36:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3828:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "b6ed67a8", "id": 20085, "mutability": "mutable", "name": "hopImbalanceToleranceIn", "nameLocation": "3955:23:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "3940:38:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3940:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "fdc0bfca", "id": 20087, "mutability": "mutable", "name": "hopImbalanceToleranceOut", "nameLocation": "4072:24:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4057:39:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20086, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4057:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "621e8fe1", "id": 20089, "mutability": "mutable", "name": "communityReserve", "nameLocation": "4191:16:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4176:31:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20088, "name": "address", "nodeType": "ElementaryTypeName", "src": "4176:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "9b61a924", "id": 20091, "mutability": "mutable", "name": "cvxCommunityReserveShare", "nameLocation": "4285:24:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4270:39:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20090, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4270:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ff0af85b", "id": 20093, "mutability": "mutable", "name": "crvCommunityReserveShare", "nameLocation": "4372:24:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4357:39:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20092, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4357:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"baseFunctions": [43826], "constant": false, "functionSelector": "1fe4a686", "id": 20096, "mutability": "mutable", "name": "strategist", "nameLocation": "4468:10:53", "nodeType": "VariableDeclaration", "overrides": {"id": 20095, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4459:8:53"}, "scope": 22260, "src": "4444:34:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20094, "name": "address", "nodeType": "ElementaryTypeName", "src": "4444:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "bf86d690", "id": 20098, "mutability": "mutable", "name": "isShutdown", "nameLocation": "4531:10:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4519:22:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20097, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4519:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"constant": false, "functionSelector": "9851bf38", "id": 20103, "mutability": "mutable", "name": "tokenDex", "nameLocation": "4641:8:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4598:51:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}, "typeName": {"id": 20102, "keyType": {"id": 20099, "name": "address", "nodeType": "ElementaryTypeName", "src": "4606:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "4598:35:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}, "valueType": {"id": 20101, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20100, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "4617:15:53"}, "referencedDeclaration": 44025, "src": "4617:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}}, "visibility": "public"}, {"constant": false, "id": 20106, "mutability": "mutable", "name": "_rewardTokens", "nameLocation": "4734:13:53", "nodeType": "VariableDeclaration", "scope": 22260, "src": "4701:46:53", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 20105, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20104, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 41311, "src": "4701:24:53"}, "referencedDeclaration": 41311, "src": "4701:24:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "private"}, {"anonymous": false, "id": 20110, "name": "Deposit", "nameLocation": "4828:7:53", "nodeType": "EventDefinition", "parameters": {"id": 20109, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20108, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "4844:6:53", "nodeType": "VariableDeclaration", "scope": 20110, "src": "4836:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20107, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4836:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4835:16:53"}, "src": "4822:30:53"}, {"anonymous": false, "id": 20114, "name": "Withdraw", "nameLocation": "4902:8:53", "nodeType": "EventDefinition", "parameters": {"id": 20113, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20112, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "4919:6:53", "nodeType": "VariableDeclaration", "scope": 20114, "src": "4911:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4911:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4910:16:53"}, "src": "4896:31:53"}, {"anonymous": false, "id": 20118, "name": "WithdrawAll", "nameLocation": "4979:11:53", "nodeType": "EventDefinition", "parameters": {"id": 20117, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20116, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "4999:6:53", "nodeType": "VariableDeclaration", "scope": 20118, "src": "4991:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20115, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4991:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4990:16:53"}, "src": "4973:34:53"}, {"anonymous": false, "id": 20122, "name": "Harvest", "nameLocation": "5064:7:53", "nodeType": "EventDefinition", "parameters": {"id": 20121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20120, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "5080:6:53", "nodeType": "VariableDeclaration", "scope": 20122, "src": "5072:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20119, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5072:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5071:16:53"}, "src": "5058:30:53"}, {"anonymous": false, "id": 20124, "name": "Shutdown", "nameLocation": "5137:8:53", "nodeType": "EventDefinition", "parameters": {"id": 20123, "nodeType": "ParameterList", "parameters": [], "src": "5145:2:53"}, "src": "5131:17:53"}, {"anonymous": false, "id": 20128, "name": "SetCommunityReserve", "nameLocation": "5198:19:53", "nodeType": "EventDefinition", "parameters": {"id": 20127, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20126, "indexed": false, "mutability": "mutable", "name": "reserve", "nameLocation": "5226:7:53", "nodeType": "VariableDeclaration", "scope": 20128, "src": "5218:15:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20125, "name": "address", "nodeType": "ElementaryTypeName", "src": "5218:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5217:17:53"}, "src": "5192:43:53"}, {"anonymous": false, "id": 20132, "name": "SetCrvCommunityReserveShare", "nameLocation": "5296:27:53", "nodeType": "EventDefinition", "parameters": {"id": 20131, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20130, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5332:5:53", "nodeType": "VariableDeclaration", "scope": 20132, "src": "5324:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20129, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5324:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5323:15:53"}, "src": "5290:49:53"}, {"anonymous": false, "id": 20136, "name": "SetCvxCommunityReserveShare", "nameLocation": "5420:27:53", "nodeType": "EventDefinition", "parameters": {"id": 20135, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20134, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5456:5:53", "nodeType": "VariableDeclaration", "scope": 20136, "src": "5448:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20133, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5448:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5447:15:53"}, "src": "5414:49:53"}, {"anonymous": false, "id": 20140, "name": "SetImbalanceToleranceIn", "nameLocation": "5544:23:53", "nodeType": "EventDefinition", "parameters": {"id": 20139, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20138, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5576:5:53", "nodeType": "VariableDeclaration", "scope": 20140, "src": "5568:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20137, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5568:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5567:15:53"}, "src": "5538:45:53"}, {"anonymous": false, "id": 20144, "name": "SetImbalanceToleranceOut", "nameLocation": "5659:24:53", "nodeType": "EventDefinition", "parameters": {"id": 20143, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20142, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5692:5:53", "nodeType": "VariableDeclaration", "scope": 20144, "src": "5684:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5684:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5683:15:53"}, "src": "5653:46:53"}, {"anonymous": false, "id": 20148, "name": "SetHopImbalanceToleranceIn", "nameLocation": "5776:26:53", "nodeType": "EventDefinition", "parameters": {"id": 20147, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20146, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5811:5:53", "nodeType": "VariableDeclaration", "scope": 20148, "src": "5803:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20145, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5803:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5802:15:53"}, "src": "5770:48:53"}, {"anonymous": false, "id": 20152, "name": "SetHopImbalanceToleranceOut", "nameLocation": "5898:27:53", "nodeType": "EventDefinition", "parameters": {"id": 20151, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20150, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "5934:5:53", "nodeType": "VariableDeclaration", "scope": 20152, "src": "5926:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5926:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5925:15:53"}, "src": "5892:49:53"}, {"anonymous": false, "id": 20156, "name": "SetStrategist", "nameLocation": "6022:13:53", "nodeType": "EventDefinition", "parameters": {"id": 20155, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20154, "indexed": false, "mutability": "mutable", "name": "strategist", "nameLocation": "6044:10:53", "nodeType": "VariableDeclaration", "scope": 20156, "src": "6036:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20153, "name": "address", "nodeType": "ElementaryTypeName", "src": "6036:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6035:20:53"}, "src": "6016:40:53"}, {"anonymous": false, "id": 20160, "name": "AddRewardToken", "nameLocation": "6120:14:53", "nodeType": "EventDefinition", "parameters": {"id": 20159, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20158, "indexed": false, "mutability": "mutable", "name": "token", "nameLocation": "6143:5:53", "nodeType": "VariableDeclaration", "scope": 20160, "src": "6135:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20157, "name": "address", "nodeType": "ElementaryTypeName", "src": "6135:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6134:15:53"}, "src": "6114:36:53"}, {"anonymous": false, "id": 20164, "name": "RemoveRewardToken", "nameLocation": "6217:17:53", "nodeType": "EventDefinition", "parameters": {"id": 20163, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20162, "indexed": false, "mutability": "mutable", "name": "token", "nameLocation": "6243:5:53", "nodeType": "VariableDeclaration", "scope": 20164, "src": "6235:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20161, "name": "address", "nodeType": "ElementaryTypeName", "src": "6235:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6234:15:53"}, "src": "6211:39:53"}, {"anonymous": false, "id": 20170, "name": "SwapDex", "nameLocation": "6315:7:53", "nodeType": "EventDefinition", "parameters": {"id": 20169, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20166, "indexed": false, "mutability": "mutable", "name": "token", "nameLocation": "6331:5:53", "nodeType": "VariableDeclaration", "scope": 20170, "src": "6323:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20165, "name": "address", "nodeType": "ElementaryTypeName", "src": "6323:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20168, "indexed": false, "mutability": "mutable", "name": "newDex", "nameLocation": "6346:6:53", "nodeType": "VariableDeclaration", "scope": 20170, "src": "6338:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20167, "name": "address", "nodeType": "ElementaryTypeName", "src": "6338:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6322:31:53"}, "src": "6309:45:53"}, {"body": {"id": 20182, "nodeType": "Block", "src": "6433:83:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20173, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6451:3:53", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6451:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 20175, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "6465:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6451:19:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20177, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "6472:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNAUTHORIZED_ACCESS", "nodeType": "MemberAccess", "referencedDeclaration": 38825, "src": "6472:25:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20172, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6443:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6443:55:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20180, "nodeType": "ExpressionStatement", "src": "6443:55:53"}, {"id": 20181, "nodeType": "PlaceholderStatement", "src": "6508:1:53"}]}, "id": 20183, "name": "onlyVault", "nameLocation": "6421:9:53", "nodeType": "ModifierDefinition", "parameters": {"id": 20171, "nodeType": "ParameterList", "parameters": [], "src": "6430:2:53"}, "src": "6412:104:53", "virtual": false, "visibility": "internal"}, {"body": {"id": 20456, "nodeType": "Block", "src": "6778:1903:53", "statements": [{"assignments": [20205, null, null, 20207, null, null], "declarations": [{"constant": false, "id": 20205, "mutability": "mutable", "name": "lp_", "nameLocation": "6847:3:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "6839:11:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20204, "name": "address", "nodeType": "ElementaryTypeName", "src": "6839:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null, {"constant": false, "id": 20207, "mutability": "mutable", "name": "rewards_", "nameLocation": "6864:8:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "6856:16:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20206, "name": "address", "nodeType": "ElementaryTypeName", "src": "6856:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null], "id": 20212, "initialValue": {"arguments": [{"id": 20210, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20189, "src": "6898:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20208, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "6880:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}, "id": 20209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolInfo", "nodeType": "MemberAccess", "referencedDeclaration": 43856, "src": "6880:17:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "function (uint256) external returns (address,address,address,address,address,bool)"}}, "id": 20211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6880:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "tuple(address,address,address,address,address,bool)"}}, "nodeType": "VariableDeclarationStatement", "src": "6838:71:53"}, {"expression": {"id": 20217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20213, "name": "lp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20076, "src": "6919:2:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20215, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20205, "src": "6931:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20214, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "6924:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20216, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6924:11:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "src": "6919:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20218, "nodeType": "ExpressionStatement", "src": "6919:16:53"}, {"expression": {"id": 20223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20219, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "6945:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20221, "name": "rewards_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20207, "src": "6970:8:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20220, "name": "IRewardStaking", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38714, "src": "6955:14:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRewardStaking_$38714_$", "typeString": "type(contract IRewardStaking)"}}, "id": 20222, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6955:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "src": "6945:34:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 20224, "nodeType": "ExpressionStatement", "src": "6945:34:53"}, {"assignments": [20226], "declarations": [{"constant": false, "id": 20226, "mutability": "mutable", "name": "curvePool_", "nameLocation": "6997:10:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "6989:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20225, "name": "address", "nodeType": "ElementaryTypeName", "src": "6989:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20231, "initialValue": {"arguments": [{"id": 20229, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20205, "src": "7049:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20227, "name": "_CURVE_REGISTRY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20012, "src": "7010:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}}, "id": 20228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_pool_from_lp_token", "nodeType": "MemberAccess", "referencedDeclaration": 44167, "src": "7010:38:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$", "typeString": "function (address) external returns (address)"}}, "id": 20230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7010:43:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "6989:64:53"}, {"expression": {"id": 20236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20232, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "7063:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20234, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20226, "src": "7086:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20233, "name": "ICurveSwap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38503, "src": "7075:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwap_$38503_$", "typeString": "type(contract ICurveSwap)"}}, "id": 20235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7075:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "src": "7063:34:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20237, "nodeType": "ExpressionStatement", "src": "7063:34:53"}, {"assignments": [20239], "declarations": [{"constant": false, "id": 20239, "mutability": "mutable", "name": "hopLp_", "nameLocation": "7115:6:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "7107:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20238, "name": "address", "nodeType": "ElementaryTypeName", "src": "7107:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20246, "initialValue": {"arguments": [{"id": 20244, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20191, "src": "7153:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20241, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20226, "src": "7135:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20240, "name": "ICurveSwap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38503, "src": "7124:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwap_$38503_$", "typeString": "type(contract ICurveSwap)"}}, "id": 20242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7124:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 38440, "src": "7124:28:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 20245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7124:41:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7107:58:53"}, {"expression": {"id": 20251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20247, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20062, "src": "7175:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20249, "name": "hopLp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20239, "src": "7190:6:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20248, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "7183:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20250, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7183:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "src": "7175:22:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20252, "nodeType": "ExpressionStatement", "src": "7175:22:53"}, {"assignments": [20254], "declarations": [{"constant": false, "id": 20254, "mutability": "mutable", "name": "curveHopPool_", "nameLocation": "7215:13:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "7207:21:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20253, "name": "address", "nodeType": "ElementaryTypeName", "src": "7207:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20259, "initialValue": {"arguments": [{"id": 20257, "name": "hopLp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20239, "src": "7270:6:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20255, "name": "_CURVE_REGISTRY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20012, "src": "7231:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}}, "id": 20256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_pool_from_lp_token", "nodeType": "MemberAccess", "referencedDeclaration": 44167, "src": "7231:38:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$", "typeString": "function (address) external returns (address)"}}, "id": 20258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7231:46:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7207:70:53"}, {"expression": {"id": 20264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20260, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "7287:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20262, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20254, "src": "7313:13:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20261, "name": "ICurveSwap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38503, "src": "7302:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwap_$38503_$", "typeString": "type(contract ICurveSwap)"}}, "id": 20263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7302:25:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "src": "7287:40:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20265, "nodeType": "ExpressionStatement", "src": "7287:40:53"}, {"assignments": [20267], "declarations": [{"constant": false, "id": 20267, "mutability": "mutable", "name": "underlying_", "nameLocation": "7345:11:53", "nodeType": "VariableDeclaration", "scope": 20456, "src": "7337:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20266, "name": "address", "nodeType": "ElementaryTypeName", "src": "7337:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20274, "initialValue": {"arguments": [{"id": 20272, "name": "curveHopIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20193, "src": "7391:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20269, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20254, "src": "7370:13:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20268, "name": "ICurveSwap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38503, "src": "7359:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwap_$38503_$", "typeString": "type(contract ICurveSwap)"}}, "id": 20270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7359:25:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 38440, "src": "7359:31:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 20273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7359:47:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7337:69:53"}, {"expression": {"id": 20279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20275, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "7416:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20277, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "7436:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20276, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "7429:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7429:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "src": "7416:32:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20280, "nodeType": "ExpressionStatement", "src": "7416:32:53"}, {"expression": {"id": 20292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20281, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20066, "src": "7458:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 20282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7478:2:53", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 20289, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3138", "id": 20283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7483:2:53", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 20285, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "7499:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20284, "name": "IERC20Full", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39770, "src": "7488:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20Full_$39770_$", "typeString": "type(contract IERC20Full)"}}, "id": 20286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7488:23:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20Full_$39770", "typeString": "contract IERC20Full"}}, "id": 20287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 39769, "src": "7488:32:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)"}}, "id": 20288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7488:34:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "7483:39:53", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "id": 20290, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7482:41:53", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "7478:45:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7458:65:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20293, "nodeType": "ExpressionStatement", "src": "7458:65:53"}, {"expression": {"id": 20296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20294, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "7560:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20295, "name": "vault_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20185, "src": "7568:6:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7560:14:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20297, "nodeType": "ExpressionStatement", "src": "7560:14:53"}, {"expression": {"id": 20300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20298, "name": "strategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20096, "src": "7584:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20299, "name": "strategist_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20187, "src": "7597:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7584:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20301, "nodeType": "ExpressionStatement", "src": "7584:24:53"}, {"expression": {"id": 20304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20302, "name": "convexPid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20071, "src": "7618:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20303, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20189, "src": "7630:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7618:22:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20305, "nodeType": "ExpressionStatement", "src": "7618:22:53"}, {"expression": {"id": 20308, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20306, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20073, "src": "7650:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20307, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20191, "src": "7663:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7650:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20309, "nodeType": "ExpressionStatement", "src": "7650:24:53"}, {"expression": {"id": 20312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20310, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20064, "src": "7684:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20311, "name": "curveHopIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20193, "src": "7700:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7684:30:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20313, "nodeType": "ExpressionStatement", "src": "7684:30:53"}, {"expression": {"id": 20318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20314, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20051, "src": "7724:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20316, "name": "addressProvider_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20196, "src": "7760:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}], "id": 20315, "name": "IAddressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35607, "src": "7743:16:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IAddressProvider_$35607_$", "typeString": "type(contract IAddressProvider)"}}, "id": 20317, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7743:34:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "src": "7724:53:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "id": 20319, "nodeType": "ExpressionStatement", "src": "7724:53:53"}, {"expression": {"id": 20322, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20320, "name": "imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20081, "src": "7822:20:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303031653138", "id": 20321, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7845:8:53", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000_by_1", "typeString": "int_const 1000000000000000"}, "value": "0.001e18"}, "src": "7822:31:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20323, "nodeType": "ExpressionStatement", "src": "7822:31:53"}, {"expression": {"id": 20326, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20324, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20083, "src": "7863:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303438653138", "id": 20325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7887:8:53", "typeDescriptions": {"typeIdentifier": "t_rational_48000000000000000_by_1", "typeString": "int_const 48000000000000000"}, "value": "0.048e18"}, "src": "7863:32:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20327, "nodeType": "ExpressionStatement", "src": "7863:32:53"}, {"expression": {"id": 20330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20328, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20085, "src": "7905:23:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303031653138", "id": 20329, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7931:8:53", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000_by_1", "typeString": "int_const 1000000000000000"}, "value": "0.001e18"}, "src": "7905:34:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20331, "nodeType": "ExpressionStatement", "src": "7905:34:53"}, {"expression": {"id": 20334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20332, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20087, "src": "7949:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e30303135653138", "id": 20333, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7976:9:53", "typeDescriptions": {"typeIdentifier": "t_rational_1500000000000000_by_1", "typeString": "int_const 1500000000000000"}, "value": "0.0015e18"}, "src": "7949:36:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20335, "nodeType": "ExpressionStatement", "src": "7949:36:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20339, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "8037:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20338, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8029:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20337, "name": "address", "nodeType": "ElementaryTypeName", "src": "8029:7:53", "typeDescriptions": {}}}, "id": 20340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8029:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20341, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8044:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20336, "name": "_setDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21354, "src": "8021:7:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_UniswapRouter02_$44025_$returns$__$", "typeString": "function (address,contract UniswapRouter02)"}}, "id": 20342, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8021:34:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20343, "nodeType": "ExpressionStatement", "src": "8021:34:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20347, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "8081:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20346, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8073:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20345, "name": "address", "nodeType": "ElementaryTypeName", "src": "8073:7:53", "typeDescriptions": {}}}, "id": 20348, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8073:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20349, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8088:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20344, "name": "_setDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21354, "src": "8065:7:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_UniswapRouter02_$44025_$returns$__$", "typeString": "function (address,contract UniswapRouter02)"}}, "id": 20350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8065:34:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20351, "nodeType": "ExpressionStatement", "src": "8065:34:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20355, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "8125:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20354, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8117:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20353, "name": "address", "nodeType": "ElementaryTypeName", "src": "8117:7:53", "typeDescriptions": {}}}, "id": 20356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8117:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20357, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8139:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20352, "name": "_setDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21354, "src": "8109:7:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_UniswapRouter02_$44025_$returns$__$", "typeString": "function (address,contract UniswapRouter02)"}}, "id": 20358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8109:41:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20359, "nodeType": "ExpressionStatement", "src": "8109:41:53"}, {"expression": {"arguments": [{"id": 20364, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20254, "src": "8214:13:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20367, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8234:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20366, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8234:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20365, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8229:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20368, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8229:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20369, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8229:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20361, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "8189:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20360, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "8182:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8182:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20363, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8182:31:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20370, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8182:65:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20371, "nodeType": "ExpressionStatement", "src": "8182:65:53"}, {"expression": {"arguments": [{"id": 20376, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20226, "src": "8284:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20379, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8301:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20378, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8301:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20377, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8296:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20380, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8296:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20381, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8296:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20373, "name": "hopLp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20239, "src": "8264:6:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20372, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "8257:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8257:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8257:26:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8257:57:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20383, "nodeType": "ExpressionStatement", "src": "8257:57:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20390, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "8356:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}], "id": 20389, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8348:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20388, "name": "address", "nodeType": "ElementaryTypeName", "src": "8348:7:53", "typeDescriptions": {}}}, "id": 20391, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8348:17:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20394, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8372:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20393, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8372:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20392, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8367:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20395, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8367:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20396, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8367:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20385, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20205, "src": "8331:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20384, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "8324:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8324:11:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8324:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8324:61:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20398, "nodeType": "ExpressionStatement", "src": "8324:61:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20405, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8435:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20404, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8427:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20403, "name": "address", "nodeType": "ElementaryTypeName", "src": "8427:7:53", "typeDescriptions": {}}}, "id": 20406, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8427:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20409, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8453:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8453:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20407, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8448:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20410, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8448:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20411, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8448:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20400, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "8402:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20399, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "8395:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8395:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8395:31:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20412, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8395:71:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20413, "nodeType": "ExpressionStatement", "src": "8395:71:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20419, "name": "_CVX_ETH_CURVE_POOL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20048, "src": "8501:19:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}], "id": 20418, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8493:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20417, "name": "address", "nodeType": "ElementaryTypeName", "src": "8493:7:53", "typeDescriptions": {}}}, "id": 20420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8493:28:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20423, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8528:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8528:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20421, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8523:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8523:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20425, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8523:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20414, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "8476:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8476:16:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8476:65:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20427, "nodeType": "ExpressionStatement", "src": "8476:65:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20433, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8576:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20432, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8568:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20431, "name": "address", "nodeType": "ElementaryTypeName", "src": "8568:7:53", "typeDescriptions": {}}}, "id": 20434, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8568:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20437, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8594:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20436, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8594:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20435, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8589:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20438, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8589:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20439, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8589:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20428, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "8551:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8551:16:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20440, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8551:56:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20441, "nodeType": "ExpressionStatement", "src": "8551:56:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20447, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "8643:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20446, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8635:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20445, "name": "address", "nodeType": "ElementaryTypeName", "src": "8635:7:53", "typeDescriptions": {}}}, "id": 20448, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8635:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20451, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8661:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8661:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20449, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "8656:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8656:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20453, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "8656:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20442, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "8617:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "8617:17:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20454, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8617:57:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20455, "nodeType": "ExpressionStatement", "src": "8617:57:53"}]}, "id": 20457, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20199, "name": "addressProvider_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20196, "src": "6743:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "id": 20200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRoleManager", "nodeType": "MemberAccess", "referencedDeclaration": 37996, "src": "6743:31:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$35607_$returns$_t_contract$_IRoleManager_$40999_$bound_to$_t_contract$_IAddressProvider_$35607_$", "typeString": "function (contract IAddressProvider) view returns (contract IRoleManager)"}}, "id": 20201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6743:33:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRoleManager_$40999", "typeString": "contract IRoleManager"}}], "id": 20202, "kind": "baseConstructorSpecifier", "modifierName": {"id": 20198, "name": "SlippageTolerance", "nodeType": "IdentifierPath", "referencedDeclaration": 32416, "src": "6725:17:53"}, "nodeType": "ModifierInvocation", "src": "6725:52:53"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 20197, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20185, "mutability": "mutable", "name": "vault_", "nameLocation": "6551:6:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6543:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20184, "name": "address", "nodeType": "ElementaryTypeName", "src": "6543:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20187, "mutability": "mutable", "name": "strategist_", "nameLocation": "6575:11:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6567:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20186, "name": "address", "nodeType": "ElementaryTypeName", "src": "6567:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20189, "mutability": "mutable", "name": "convexPid_", "nameLocation": "6604:10:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6596:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20188, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6596:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20191, "mutability": "mutable", "name": "curveIndex_", "nameLocation": "6632:11:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6624:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20190, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6624:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20193, "mutability": "mutable", "name": "curveHopIndex_", "nameLocation": "6661:14:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6653:22:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6653:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20196, "mutability": "mutable", "name": "addressProvider_", "nameLocation": "6702:16:53", "nodeType": "VariableDeclaration", "scope": 20457, "src": "6685:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}, "typeName": {"id": 20195, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20194, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 35607, "src": "6685:16:53"}, "referencedDeclaration": 35607, "src": "6685:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "visibility": "internal"}], "src": "6533:191:53"}, "returnParameters": {"id": 20203, "nodeType": "ParameterList", "parameters": [], "src": "6778:0:53"}, "scope": 22260, "src": "6522:2159:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [43806], "body": {"id": 20591, "nodeType": "Block", "src": "9061:1438:53", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20468, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "9075:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 20469, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9085:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9075:11:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20473, "nodeType": "IfStatement", "src": "9071:29:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 20471, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9095:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 20467, "id": 20472, "nodeType": "Return", "src": "9088:12:53"}}, {"assignments": [20475], "declarations": [{"constant": false, "id": 20475, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "9171:17:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9163:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9163:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20478, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 20476, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "9191:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 20477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9191:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9163:48:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20479, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20475, "src": "9225:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 20480, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "9246:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9225:27:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20496, "nodeType": "IfStatement", "src": "9221:156:53", "trueBody": {"id": 20495, "nodeType": "Block", "src": "9254:123:53", "statements": [{"expression": {"arguments": [{"id": 20485, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "9292:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20486, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "9299:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20482, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "9268:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 38125, "src": "9268:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9268:38:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20488, "nodeType": "ExpressionStatement", "src": "9268:38:53"}, {"eventCall": {"arguments": [{"id": 20490, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "9334:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20489, "name": "Withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20114, "src": "9325:8:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20491, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9325:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20492, "nodeType": "EmitStatement", "src": "9320:21:53"}, {"expression": {"hexValue": "74727565", "id": 20493, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9362:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20467, "id": 20494, "nodeType": "Return", "src": "9355:11:53"}]}}, {"assignments": [20498], "declarations": [{"constant": false, "id": 20498, "mutability": "mutable", "name": "requiredUnderlyingAmount", "nameLocation": "9450:24:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9442:32:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9442:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20502, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20499, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "9477:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 20500, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20475, "src": "9486:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9477:26:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9442:61:53"}, {"assignments": [20504], "declarations": [{"constant": false, "id": 20504, "mutability": "mutable", "name": "maxHopLpBurned", "nameLocation": "9521:14:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9513:22:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20503, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9513:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20508, "initialValue": {"arguments": [{"id": 20506, "name": "requiredUnderlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20498, "src": "9554:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20505, "name": "_maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21937, "src": "9538:15:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 20507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9538:41:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9513:66:53"}, {"assignments": [20510], "declarations": [{"constant": false, "id": 20510, "mutability": "mutable", "name": "requiredHopLpAmount", "nameLocation": "9597:19:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9589:27:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20509, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9589:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20515, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20514, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20511, "name": "maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20504, "src": "9619:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20512, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21686, "src": "9636:13:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 20513, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9636:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9619:32:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9589:62:53"}, {"assignments": [20517], "declarations": [{"constant": false, "id": 20517, "mutability": "mutable", "name": "maxLpBurned", "nameLocation": "9669:11:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9661:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20516, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9661:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20521, "initialValue": {"arguments": [{"id": 20519, "name": "requiredHopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9696:19:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20518, "name": "_maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21880, "src": "9683:12:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 20520, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9683:33:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9661:55:53"}, {"assignments": [20523], "declarations": [{"constant": false, "id": 20523, "mutability": "mutable", "name": "requiredLpAmount", "nameLocation": "9734:16:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9726:24:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20522, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9726:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20528, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20524, "name": "maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20517, "src": "9753:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20525, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21701, "src": "9767:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 20526, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9767:12:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9753:26:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9726:53:53"}, {"condition": {"id": 20534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9844:51:53", "subExpression": {"arguments": [{"id": 20531, "name": "requiredLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20523, "src": "9871:16:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 20532, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9889:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 20529, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "9845:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 20530, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "withdrawAndUnwrap", "nodeType": "MemberAccess", "referencedDeclaration": 38672, "src": "9845:25:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 20533, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9845:50:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20537, "nodeType": "IfStatement", "src": "9840:69:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 20535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9904:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 20467, "id": 20536, "nodeType": "Return", "src": "9897:12:53"}}, {"assignments": [20543], "declarations": [{"constant": false, "id": 20543, "mutability": "mutable", "name": "amounts", "nameLocation": "9991:7:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9973:25:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 20541, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9973:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20542, "length": {"hexValue": "32", "id": 20540, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9981:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "9973:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 20544, "nodeType": "VariableDeclarationStatement", "src": "9973:25:53"}, {"expression": {"id": 20549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 20545, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20543, "src": "10008:7:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 20547, "indexExpression": {"id": 20546, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20073, "src": "10016:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10008:19:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20548, "name": "requiredHopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "10030:19:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10008:41:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20550, "nodeType": "ExpressionStatement", "src": "10008:41:53"}, {"expression": {"arguments": [{"id": 20554, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20543, "src": "10096:7:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 20555, "name": "maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20517, "src": "10105:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20551, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "10059:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_imbalance", "nodeType": "MemberAccess", "referencedDeclaration": 38413, "src": "10059:36:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[2] memory,uint256) external"}}, "id": 20556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10059:58:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20557, "nodeType": "ExpressionStatement", "src": "10059:58:53"}, {"assignments": [20563], "declarations": [{"constant": false, "id": 20563, "mutability": "mutable", "name": "hopAmounts", "nameLocation": "10203:10:53", "nodeType": "VariableDeclaration", "scope": 20591, "src": "10185:28:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3]"}, "typeName": {"baseType": {"id": 20561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10185:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20562, "length": {"hexValue": "33", "id": 20560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10193:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "nodeType": "ArrayTypeName", "src": "10185:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr", "typeString": "uint256[3]"}}, "visibility": "internal"}], "id": 20564, "nodeType": "VariableDeclarationStatement", "src": "10185:28:53"}, {"expression": {"id": 20569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 20565, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "10223:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, "id": 20567, "indexExpression": {"id": 20566, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20064, "src": "10234:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10223:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20568, "name": "requiredUnderlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20498, "src": "10251:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10223:52:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20570, "nodeType": "ExpressionStatement", "src": "10223:52:53"}, {"expression": {"arguments": [{"id": 20574, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "10325:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, {"id": 20575, "name": "maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20504, "src": "10337:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20571, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "10285:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 20573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_imbalance", "nodeType": "MemberAccess", "referencedDeclaration": 38404, "src": "10285:39:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[3] memory,uint256) external"}}, "id": 20576, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10285:67:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20577, "nodeType": "ExpressionStatement", "src": "10285:67:53"}, {"expression": {"arguments": [{"id": 20581, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "10426:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20582, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "10433:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20578, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "10402:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 38125, "src": "10402:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10402:38:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20584, "nodeType": "ExpressionStatement", "src": "10402:38:53"}, {"eventCall": {"arguments": [{"id": 20586, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20460, "src": "10464:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20585, "name": "Withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20114, "src": "10455:8:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20587, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10455:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20588, "nodeType": "EmitStatement", "src": "10450:21:53"}, {"expression": {"hexValue": "74727565", "id": 20589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10488:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20467, "id": 20590, "nodeType": "Return", "src": "10481:11:53"}]}, "documentation": {"id": 20458, "nodeType": "StructuredDocumentation", "src": "8687:292:53", "text": " @notice Withdraw an amount of underlying to the vault.\n @dev This can only be called by the vault.\n      If the amount is not available, it will be made liquid.\n @param amount Amount of underlying to withdraw.\n @return True if successful withdrawal."}, "functionSelector": "2e1a7d4d", "id": 20592, "implemented": true, "kind": "function", "modifiers": [{"id": 20464, "kind": "modifierInvocation", "modifierName": {"id": 20463, "name": "onlyVault", "nodeType": "IdentifierPath", "referencedDeclaration": 20183, "src": "9036:9:53"}, "nodeType": "ModifierInvocation", "src": "9036:9:53"}], "name": "withdraw", "nameLocation": "8993:8:53", "nodeType": "FunctionDefinition", "overrides": {"id": 20462, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9027:8:53"}, "parameters": {"id": 20461, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20460, "mutability": "mutable", "name": "amount", "nameLocation": "9010:6:53", "nodeType": "VariableDeclaration", "scope": 20592, "src": "9002:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20459, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9002:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9001:16:53"}, "returnParameters": {"id": 20467, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20466, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20592, "src": "9055:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20465, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9055:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9054:6:53"}, "scope": 22260, "src": "8984:1515:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [43831], "body": {"id": 20614, "nodeType": "Block", "src": "10697:118:53", "statements": [{"condition": {"id": 20601, "name": "isShutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20098, "src": "10711:10:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20604, "nodeType": "IfStatement", "src": "10707:28:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 20602, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10730:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 20600, "id": 20603, "nodeType": "Return", "src": "10723:12:53"}}, {"expression": {"id": 20607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20605, "name": "isShutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20098, "src": "10745:10:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10758:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "10745:17:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20608, "nodeType": "ExpressionStatement", "src": "10745:17:53"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 20609, "name": "Shutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20124, "src": "10777:8:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 20610, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10777:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20611, "nodeType": "EmitStatement", "src": "10772:15:53"}, {"expression": {"hexValue": "74727565", "id": 20612, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10804:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20600, "id": 20613, "nodeType": "Return", "src": "10797:11:53"}]}, "documentation": {"id": 20593, "nodeType": "StructuredDocumentation", "src": "10505:124:53", "text": " @notice Shuts down the strategy, disabling deposits.\n @return True if reserve was successfully set."}, "functionSelector": "fc0e74d1", "id": 20615, "implemented": true, "kind": "function", "modifiers": [{"id": 20597, "kind": "modifierInvocation", "modifierName": {"id": 20596, "name": "onlyVault", "nodeType": "IdentifierPath", "referencedDeclaration": 20183, "src": "10672:9:53"}, "nodeType": "ModifierInvocation", "src": "10672:9:53"}], "name": "shutdown", "nameLocation": "10643:8:53", "nodeType": "FunctionDefinition", "overrides": {"id": 20595, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10663:8:53"}, "parameters": {"id": 20594, "nodeType": "ParameterList", "parameters": [], "src": "10651:2:53"}, "returnParameters": {"id": 20600, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20599, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20615, "src": "10691:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20598, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10691:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "10690:6:53"}, "scope": 22260, "src": "10634:181:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20635, "nodeType": "Block", "src": "11220:127:53", "statements": [{"expression": {"id": 20627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20625, "name": "communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20089, "src": "11230:16:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20626, "name": "_communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20618, "src": "11249:17:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11230:36:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20628, "nodeType": "ExpressionStatement", "src": "11230:36:53"}, {"eventCall": {"arguments": [{"id": 20630, "name": "_communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20618, "src": "11301:17:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20629, "name": "SetCommunityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20128, "src": "11281:19:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11281:38:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20632, "nodeType": "EmitStatement", "src": "11276:43:53"}, {"expression": {"hexValue": "74727565", "id": 20633, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "11336:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20624, "id": 20634, "nodeType": "Return", "src": "11329:11:53"}]}, "documentation": {"id": 20616, "nodeType": "StructuredDocumentation", "src": "10821:299:53", "text": " @notice Set the address of the communit reserve.\n @dev CRV & CVX will be taxed and allocated to the reserve,\n      such that Backd can participate in governance.\n @param _communityReserve Address of the community reserve.\n @return True if successfully set."}, "functionSelector": "c2bddf31", "id": 20636, "implemented": true, "kind": "function", "modifiers": [{"id": 20621, "kind": "modifierInvocation", "modifierName": {"id": 20620, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "11190:14:53"}, "nodeType": "ModifierInvocation", "src": "11190:14:53"}], "name": "setCommunityReserve", "nameLocation": "11134:19:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20619, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20618, "mutability": "mutable", "name": "_communityReserve", "nameLocation": "11162:17:53", "nodeType": "VariableDeclaration", "scope": 20636, "src": "11154:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20617, "name": "address", "nodeType": "ElementaryTypeName", "src": "11154:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "11153:27:53"}, "returnParameters": {"id": 20624, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20623, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20636, "src": "11214:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20622, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11214:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11213:6:53"}, "scope": 22260, "src": "11125:222:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20675, "nodeType": "Block", "src": "11706:325:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20647, "name": "crvCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "11724:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 20648, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "11753:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 20649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "11753:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11724:43:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20651, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "11769:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20652, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_AMOUNT", "nodeType": "MemberAccess", "referencedDeclaration": 38762, "src": "11769:20:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20646, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11716:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20653, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11716:74:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20654, "nodeType": "ExpressionStatement", "src": "11716:74:53"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20656, "name": "communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20089, "src": "11808:16:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20659, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11836:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20658, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11828:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20657, "name": "address", "nodeType": "ElementaryTypeName", "src": "11828:7:53", "typeDescriptions": {}}}, "id": 20660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11828:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11808:30:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436f6d6d756e6974792072657365727665206d75737420626520736574", "id": 20662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11840:31:53", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0ebd4c644238c45cd786035ff11392abdda99e8ea6be463073d20ca64e639702", "typeString": "literal_string \"Community reserve must be set\""}, "value": "Community reserve must be set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0ebd4c644238c45cd786035ff11392abdda99e8ea6be463073d20ca64e639702", "typeString": "literal_string \"Community reserve must be set\""}], "id": 20655, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11800:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11800:72:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20664, "nodeType": "ExpressionStatement", "src": "11800:72:53"}, {"expression": {"id": 20667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20665, "name": "crvCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20093, "src": "11882:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20666, "name": "crvCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "11909:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11882:52:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20668, "nodeType": "ExpressionStatement", "src": "11882:52:53"}, {"eventCall": {"arguments": [{"id": 20670, "name": "crvCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "11977:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20669, "name": "SetCrvCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20132, "src": "11949:27:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20671, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11949:54:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20672, "nodeType": "EmitStatement", "src": "11944:59:53"}, {"expression": {"hexValue": "74727565", "id": 20673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "12020:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20645, "id": 20674, "nodeType": "Return", "src": "12013:11:53"}]}, "documentation": {"id": 20637, "nodeType": "StructuredDocumentation", "src": "11353:209:53", "text": " @notice Set the share of CRV to send to the Community Reserve.\n @param crvCommunityReserveShare_ New fee charged on CRV rewards for governance.\n @return True if successfully set."}, "functionSelector": "70aa1726", "id": 20676, "implemented": true, "kind": "function", "modifiers": [{"id": 20642, "kind": "modifierInvocation", "modifierName": {"id": 20641, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "11664:14:53"}, "nodeType": "ModifierInvocation", "src": "11664:14:53"}], "name": "setCrvCommunityReserveShare", "nameLocation": "11576:27:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20640, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20639, "mutability": "mutable", "name": "crvCommunityReserveShare_", "nameLocation": "11612:25:53", "nodeType": "VariableDeclaration", "scope": 20676, "src": "11604:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20638, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11604:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11603:35:53"}, "returnParameters": {"id": 20645, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20644, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20676, "src": "11696:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20643, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11696:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11695:6:53"}, "scope": 22260, "src": "11567:464:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20715, "nodeType": "Block", "src": "12390:325:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20687, "name": "cvxCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20679, "src": "12408:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 20688, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "12437:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 20689, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "12437:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12408:43:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20691, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "12453:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_AMOUNT", "nodeType": "MemberAccess", "referencedDeclaration": 38762, "src": "12453:20:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20686, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12400:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20693, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12400:74:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20694, "nodeType": "ExpressionStatement", "src": "12400:74:53"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20696, "name": "communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20089, "src": "12492:16:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20699, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12520:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20698, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12512:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20697, "name": "address", "nodeType": "ElementaryTypeName", "src": "12512:7:53", "typeDescriptions": {}}}, "id": 20700, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12512:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12492:30:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436f6d6d756e6974792072657365727665206d75737420626520736574", "id": 20702, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12524:31:53", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0ebd4c644238c45cd786035ff11392abdda99e8ea6be463073d20ca64e639702", "typeString": "literal_string \"Community reserve must be set\""}, "value": "Community reserve must be set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0ebd4c644238c45cd786035ff11392abdda99e8ea6be463073d20ca64e639702", "typeString": "literal_string \"Community reserve must be set\""}], "id": 20695, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12484:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12484:72:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20704, "nodeType": "ExpressionStatement", "src": "12484:72:53"}, {"expression": {"id": 20707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20705, "name": "cvxCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20091, "src": "12566:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20706, "name": "cvxCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20679, "src": "12593:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12566:52:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20708, "nodeType": "ExpressionStatement", "src": "12566:52:53"}, {"eventCall": {"arguments": [{"id": 20710, "name": "cvxCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20679, "src": "12661:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20709, "name": "SetCvxCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20136, "src": "12633:27:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20711, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12633:54:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20712, "nodeType": "EmitStatement", "src": "12628:59:53"}, {"expression": {"hexValue": "74727565", "id": 20713, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "12704:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20685, "id": 20714, "nodeType": "Return", "src": "12697:11:53"}]}, "documentation": {"id": 20677, "nodeType": "StructuredDocumentation", "src": "12037:209:53", "text": " @notice Set the share of CVX to send to the Community Reserve.\n @param cvxCommunityReserveShare_ New fee charged on CVX rewards for governance.\n @return True if successfully set."}, "functionSelector": "ecf8db0a", "id": 20716, "implemented": true, "kind": "function", "modifiers": [{"id": 20682, "kind": "modifierInvocation", "modifierName": {"id": 20681, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "12348:14:53"}, "nodeType": "ModifierInvocation", "src": "12348:14:53"}], "name": "setCvxCommunityReserveShare", "nameLocation": "12260:27:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20680, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20679, "mutability": "mutable", "name": "cvxCommunityReserveShare_", "nameLocation": "12296:25:53", "nodeType": "VariableDeclaration", "scope": 20716, "src": "12288:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20678, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12288:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12287:35:53"}, "returnParameters": {"id": 20685, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20684, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20716, "src": "12380:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20683, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12380:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "12379:6:53"}, "scope": 22260, "src": "12251:464:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20736, "nodeType": "Block", "src": "13099:143:53", "statements": [{"expression": {"id": 20728, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20726, "name": "imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20081, "src": "13109:20:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20727, "name": "_imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20719, "src": "13132:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13109:44:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20729, "nodeType": "ExpressionStatement", "src": "13109:44:53"}, {"eventCall": {"arguments": [{"id": 20731, "name": "_imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20719, "src": "13192:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20730, "name": "SetImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20140, "src": "13168:23:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20732, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13168:46:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20733, "nodeType": "EmitStatement", "src": "13163:51:53"}, {"expression": {"hexValue": "74727565", "id": 20734, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "13231:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20725, "id": 20735, "nodeType": "Return", "src": "13224:11:53"}]}, "documentation": {"id": 20717, "nodeType": "StructuredDocumentation", "src": "12721:242:53", "text": " @notice Set imbalance tolerance for Curve Pool deposits.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _imbalanceToleranceIn New imbalance tolarance in.\n @return True if successfully set."}, "functionSelector": "49cabcdf", "id": 20737, "implemented": true, "kind": "function", "modifiers": [{"id": 20722, "kind": "modifierInvocation", "modifierName": {"id": 20721, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "13057:14:53"}, "nodeType": "ModifierInvocation", "src": "13057:14:53"}], "name": "setImbalanceToleranceIn", "nameLocation": "12977:23:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20720, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20719, "mutability": "mutable", "name": "_imbalanceToleranceIn", "nameLocation": "13009:21:53", "nodeType": "VariableDeclaration", "scope": 20737, "src": "13001:29:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20718, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13001:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13000:31:53"}, "returnParameters": {"id": 20725, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20724, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20737, "src": "13089:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20723, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13089:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "13088:6:53"}, "scope": 22260, "src": "12968:274:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20757, "nodeType": "Block", "src": "13633:147:53", "statements": [{"expression": {"id": 20749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20747, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20083, "src": "13643:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20748, "name": "_imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20740, "src": "13667:22:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13643:46:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20750, "nodeType": "ExpressionStatement", "src": "13643:46:53"}, {"eventCall": {"arguments": [{"id": 20752, "name": "_imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20740, "src": "13729:22:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20751, "name": "SetImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20144, "src": "13704:24:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20753, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13704:48:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20754, "nodeType": "EmitStatement", "src": "13699:53:53"}, {"expression": {"hexValue": "74727565", "id": 20755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "13769:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20746, "id": 20756, "nodeType": "Return", "src": "13762:11:53"}]}, "documentation": {"id": 20738, "nodeType": "StructuredDocumentation", "src": "13248:247:53", "text": " @notice Set imbalance tolerance for Curve Pool withdrawals.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _imbalanceToleranceOut New imbalance tolarance out.\n @return True if successfully set."}, "functionSelector": "e9eb5088", "id": 20758, "implemented": true, "kind": "function", "modifiers": [{"id": 20743, "kind": "modifierInvocation", "modifierName": {"id": 20742, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "13591:14:53"}, "nodeType": "ModifierInvocation", "src": "13591:14:53"}], "name": "setImbalanceToleranceOut", "nameLocation": "13509:24:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20741, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20740, "mutability": "mutable", "name": "_imbalanceToleranceOut", "nameLocation": "13542:22:53", "nodeType": "VariableDeclaration", "scope": 20758, "src": "13534:30:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20739, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13534:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13533:32:53"}, "returnParameters": {"id": 20746, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20745, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20758, "src": "13623:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20744, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13623:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "13622:6:53"}, "scope": 22260, "src": "13500:280:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20778, "nodeType": "Block", "src": "14185:155:53", "statements": [{"expression": {"id": 20770, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20768, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20085, "src": "14195:23:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20769, "name": "_hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20761, "src": "14221:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14195:50:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20771, "nodeType": "ExpressionStatement", "src": "14195:50:53"}, {"eventCall": {"arguments": [{"id": 20773, "name": "_hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20761, "src": "14287:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20772, "name": "SetHopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20148, "src": "14260:26:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20774, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14260:52:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20775, "nodeType": "EmitStatement", "src": "14255:57:53"}, {"expression": {"hexValue": "74727565", "id": 20776, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14329:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20767, "id": 20777, "nodeType": "Return", "src": "14322:11:53"}]}, "documentation": {"id": 20759, "nodeType": "StructuredDocumentation", "src": "13786:257:53", "text": " @notice Set hop imbalance tolerance for Curve Hop Pool deposits.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _hopImbalanceToleranceIn New hop imbalance tolarance in.\n @return True if successfully set."}, "functionSelector": "938511a7", "id": 20779, "implemented": true, "kind": "function", "modifiers": [{"id": 20764, "kind": "modifierInvocation", "modifierName": {"id": 20763, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "14143:14:53"}, "nodeType": "ModifierInvocation", "src": "14143:14:53"}], "name": "setHopImbalanceToleranceIn", "nameLocation": "14057:26:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20762, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20761, "mutability": "mutable", "name": "_hopImbalanceToleranceIn", "nameLocation": "14092:24:53", "nodeType": "VariableDeclaration", "scope": 20779, "src": "14084:32:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20760, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14084:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "14083:34:53"}, "returnParameters": {"id": 20767, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20766, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20779, "src": "14175:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20765, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14175:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "14174:6:53"}, "scope": 22260, "src": "14048:292:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20799, "nodeType": "Block", "src": "14752:159:53", "statements": [{"expression": {"id": 20791, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20789, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20087, "src": "14762:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20790, "name": "_hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20782, "src": "14789:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14762:52:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20792, "nodeType": "ExpressionStatement", "src": "14762:52:53"}, {"eventCall": {"arguments": [{"id": 20794, "name": "_hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20782, "src": "14857:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20793, "name": "SetHopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20152, "src": "14829:27:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20795, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14829:54:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20796, "nodeType": "EmitStatement", "src": "14824:59:53"}, {"expression": {"hexValue": "74727565", "id": 20797, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14900:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20788, "id": 20798, "nodeType": "Return", "src": "14893:11:53"}]}, "documentation": {"id": 20780, "nodeType": "StructuredDocumentation", "src": "14346:262:53", "text": " @notice Set hop imbalance tolerance for Curve Hop Pool withdrawals.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _hopImbalanceToleranceOut New hop imbalance tolarance out.\n @return True if successfully set."}, "functionSelector": "aa6a8caf", "id": 20800, "implemented": true, "kind": "function", "modifiers": [{"id": 20785, "kind": "modifierInvocation", "modifierName": {"id": 20784, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "14710:14:53"}, "nodeType": "ModifierInvocation", "src": "14710:14:53"}], "name": "setHopImbalanceToleranceOut", "nameLocation": "14622:27:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20783, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20782, "mutability": "mutable", "name": "_hopImbalanceToleranceOut", "nameLocation": "14658:25:53", "nodeType": "VariableDeclaration", "scope": 20800, "src": "14650:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20781, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14650:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "14649:35:53"}, "returnParameters": {"id": 20788, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20787, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20800, "src": "14742:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20786, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14742:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "14741:6:53"}, "scope": 22260, "src": "14613:298:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20827, "nodeType": "Block", "src": "15177:173:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20812, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20809, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "15195:3:53", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "15195:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 20811, "name": "strategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20096, "src": "15209:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15195:24:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20813, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "15221:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20814, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNAUTHORIZED_ACCESS", "nodeType": "MemberAccess", "referencedDeclaration": 38825, "src": "15221:25:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20808, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "15187:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20815, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15187:60:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20816, "nodeType": "ExpressionStatement", "src": "15187:60:53"}, {"expression": {"id": 20819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20817, "name": "strategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20096, "src": "15257:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20818, "name": "_strategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20803, "src": "15270:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15257:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20820, "nodeType": "ExpressionStatement", "src": "15257:24:53"}, {"eventCall": {"arguments": [{"id": 20822, "name": "_strategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20803, "src": "15310:11:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20821, "name": "SetStrategist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20156, "src": "15296:13:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20823, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15296:26:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20824, "nodeType": "EmitStatement", "src": "15291:31:53"}, {"expression": {"hexValue": "74727565", "id": 20825, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15339:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20807, "id": 20826, "nodeType": "Return", "src": "15332:11:53"}]}, "documentation": {"id": 20801, "nodeType": "StructuredDocumentation", "src": "14917:187:53", "text": " @notice Set strategist.\n @dev Can only be set by current strategist.\n @param _strategist Address of new strategist.\n @return True if successfully set."}, "functionSelector": "c7b9d530", "id": 20828, "implemented": true, "kind": "function", "modifiers": [], "name": "setStrategist", "nameLocation": "15118:13:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20804, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20803, "mutability": "mutable", "name": "_strategist", "nameLocation": "15140:11:53", "nodeType": "VariableDeclaration", "scope": 20828, "src": "15132:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20802, "name": "address", "nodeType": "ElementaryTypeName", "src": "15132:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "15131:21:53"}, "returnParameters": {"id": 20807, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20806, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20828, "src": "15171:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20805, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15171:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "15170:6:53"}, "scope": 22260, "src": "15109:241:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20920, "nodeType": "Block", "src": "15736:561:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 20865, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 20858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 20851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20839, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "15767:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"id": 20842, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "15784:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20841, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15776:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20840, "name": "address", "nodeType": "ElementaryTypeName", "src": "15776:7:53", "typeDescriptions": {}}}, "id": 20843, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15776:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15767:22:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20845, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "15809:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"id": 20848, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "15826:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20847, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15818:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20846, "name": "address", "nodeType": "ElementaryTypeName", "src": "15818:7:53", "typeDescriptions": {}}}, "id": 20849, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15818:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15809:28:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "15767:70:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20852, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "15857:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"id": 20855, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "15874:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20854, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15866:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20853, "name": "address", "nodeType": "ElementaryTypeName", "src": "15866:7:53", "typeDescriptions": {}}}, "id": 20856, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15866:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15857:22:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "15767:112:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20859, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "15899:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"id": 20862, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "15916:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 20861, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15908:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20860, "name": "address", "nodeType": "ElementaryTypeName", "src": "15908:7:53", "typeDescriptions": {}}}, "id": 20863, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15908:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "15899:23:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "15767:155:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20866, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "15936:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_TOKEN_TO_ADD", "nodeType": "MemberAccess", "referencedDeclaration": 38936, "src": "15936:26:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20838, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "15746:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20868, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15746:226:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20869, "nodeType": "ExpressionStatement", "src": "15746:226:53"}, {"condition": {"arguments": [{"id": 20872, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16009:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20870, "name": "_rewardTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "15986:13:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 20871, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 41392, "src": "15986:22:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$41311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$41311_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 20873, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15986:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20876, "nodeType": "IfStatement", "src": "15982:47:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 20874, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16024:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 20837, "id": 20875, "nodeType": "Return", "src": "16017:12:53"}}, {"expression": {"arguments": [{"id": 20880, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16057:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20877, "name": "_rewardTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "16039:13:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 20879, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 41338, "src": "16039:17:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$41311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$41311_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 20881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16039:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20882, "nodeType": "ExpressionStatement", "src": "16039:24:53"}, {"expression": {"arguments": [{"id": 20884, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16081:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20885, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "16088:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20883, "name": "_setDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21354, "src": "16073:7:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_UniswapRouter02_$44025_$returns$__$", "typeString": "function (address,contract UniswapRouter02)"}}, "id": 20886, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16073:26:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20887, "nodeType": "ExpressionStatement", "src": "16073:26:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20894, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "16143:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20893, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16135:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20892, "name": "address", "nodeType": "ElementaryTypeName", "src": "16135:7:53", "typeDescriptions": {}}}, "id": 20895, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16135:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 20896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16156:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 20889, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16116:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20888, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "16109:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16109:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20891, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "16109:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20897, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16109:49:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20898, "nodeType": "ExpressionStatement", "src": "16109:49:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20905, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "16202:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20904, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16194:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20903, "name": "address", "nodeType": "ElementaryTypeName", "src": "16194:7:53", "typeDescriptions": {}}}, "id": 20906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16194:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 20909, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16220:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 20908, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16220:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 20907, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "16215:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 20910, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16215:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 20911, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "16215:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 20900, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16175:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20899, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "16168:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20901, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16168:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20902, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "16168:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 20912, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16168:65:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20913, "nodeType": "ExpressionStatement", "src": "16168:65:53"}, {"eventCall": {"arguments": [{"id": 20915, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20831, "src": "16263:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20914, "name": "AddRewardToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20160, "src": "16248:14:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20916, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16248:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20917, "nodeType": "EmitStatement", "src": "16243:26:53"}, {"expression": {"hexValue": "74727565", "id": 20918, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16286:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20837, "id": 20919, "nodeType": "Return", "src": "16279:11:53"}]}, "documentation": {"id": 20829, "nodeType": "StructuredDocumentation", "src": "15356:297:53", "text": " @notice Add a reward token to list of extra reward tokens.\n @dev These are tokens that are not the main assets of the strategy. For instance, temporary incentives.\n @param token Address of token to add to reward token list.\n @return True if successfully added."}, "functionSelector": "1c03e6cc", "id": 20921, "implemented": true, "kind": "function", "modifiers": [{"id": 20834, "kind": "modifierInvocation", "modifierName": {"id": 20833, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "15706:14:53"}, "nodeType": "ModifierInvocation", "src": "15706:14:53"}], "name": "addRewardToken", "nameLocation": "15667:14:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20832, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20831, "mutability": "mutable", "name": "token", "nameLocation": "15690:5:53", "nodeType": "VariableDeclaration", "scope": 20921, "src": "15682:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20830, "name": "address", "nodeType": "ElementaryTypeName", "src": "15682:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "15681:15:53"}, "returnParameters": {"id": 20837, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20836, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20921, "src": "15730:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20835, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15730:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "15729:6:53"}, "scope": 22260, "src": "15658:639:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20945, "nodeType": "Block", "src": "16554:123:53", "statements": [{"condition": {"id": 20935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "16568:28:53", "subExpression": {"arguments": [{"id": 20933, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20924, "src": "16590:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20931, "name": "_rewardTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "16569:13:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 20932, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 41365, "src": "16569:20:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$41311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$41311_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 20934, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16569:27:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20938, "nodeType": "IfStatement", "src": "16564:46:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 20936, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16605:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 20930, "id": 20937, "nodeType": "Return", "src": "16598:12:53"}}, {"eventCall": {"arguments": [{"id": 20940, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20924, "src": "16643:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20939, "name": "RemoveRewardToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20164, "src": "16625:17:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20941, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16625:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20942, "nodeType": "EmitStatement", "src": "16620:29:53"}, {"expression": {"hexValue": "74727565", "id": 20943, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16666:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20930, "id": 20944, "nodeType": "Return", "src": "16659:11:53"}]}, "documentation": {"id": 20922, "nodeType": "StructuredDocumentation", "src": "16303:165:53", "text": " @notice Remove a reward token.\n @param token Address of token to remove from reward token list.\n @return True if successfully removed."}, "functionSelector": "3d509c97", "id": 20946, "implemented": true, "kind": "function", "modifiers": [{"id": 20927, "kind": "modifierInvocation", "modifierName": {"id": 20926, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "16524:14:53"}, "nodeType": "ModifierInvocation", "src": "16524:14:53"}], "name": "removeRewardToken", "nameLocation": "16482:17:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20925, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20924, "mutability": "mutable", "name": "token", "nameLocation": "16508:5:53", "nodeType": "VariableDeclaration", "scope": 20946, "src": "16500:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20923, "name": "address", "nodeType": "ElementaryTypeName", "src": "16500:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "16499:15:53"}, "returnParameters": {"id": 20930, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20929, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20946, "src": "16548:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20928, "name": "bool", "nodeType": "ElementaryTypeName", "src": "16548:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "16547:6:53"}, "scope": 22260, "src": "16473:204:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 21028, "nodeType": "Block", "src": "17060:439:53", "statements": [{"assignments": [20958], "declarations": [{"constant": false, "id": 20958, "mutability": "mutable", "name": "currentDex", "nameLocation": "17086:10:53", "nodeType": "VariableDeclaration", "scope": 21028, "src": "17070:26:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "typeName": {"id": 20957, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20956, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "17070:15:53"}, "referencedDeclaration": 44025, "src": "17070:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "visibility": "internal"}], "id": 20962, "initialValue": {"baseExpression": {"id": 20959, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "17099:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 20961, "indexExpression": {"id": 20960, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20949, "src": "17108:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17099:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "nodeType": "VariableDeclarationStatement", "src": "17070:44:53"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 20966, "name": "currentDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20958, "src": "17140:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20965, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17132:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20964, "name": "address", "nodeType": "ElementaryTypeName", "src": "17132:7:53", "typeDescriptions": {}}}, "id": 20967, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17132:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20970, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17163:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20969, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17155:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20968, "name": "address", "nodeType": "ElementaryTypeName", "src": "17155:7:53", "typeDescriptions": {}}}, "id": 20971, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17155:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "17132:33:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20973, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "17167:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 20974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NO_DEX_SET", "nodeType": "MemberAccess", "referencedDeclaration": 38957, "src": "17167:16:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20963, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "17124:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20975, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17124:60:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20976, "nodeType": "ExpressionStatement", "src": "17124:60:53"}, {"assignments": [20979], "declarations": [{"constant": false, "id": 20979, "mutability": "mutable", "name": "newDex", "nameLocation": "17210:6:53", "nodeType": "VariableDeclaration", "scope": 21028, "src": "17194:22:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "typeName": {"id": 20978, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20977, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "17194:15:53"}, "referencedDeclaration": 44025, "src": "17194:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "visibility": "internal"}], "id": 20986, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "id": 20982, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20980, "name": "currentDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20958, "src": "17219:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 20981, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "17233:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "src": "17219:24:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 20984, "name": "_SUSHISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20036, "src": "17257:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 20985, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "17219:48:53", "trueExpression": {"id": 20983, "name": "_UNISWAP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20042, "src": "17246:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "nodeType": "VariableDeclarationStatement", "src": "17194:73:53"}, {"expression": {"arguments": [{"id": 20988, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20949, "src": "17285:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20989, "name": "newDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "17292:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20987, "name": "_setDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21354, "src": "17277:7:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_UniswapRouter02_$44025_$returns$__$", "typeString": "function (address,contract UniswapRouter02)"}}, "id": 20990, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17277:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20991, "nodeType": "ExpressionStatement", "src": "17277:22:53"}, {"expression": {"arguments": [{"arguments": [{"id": 20998, "name": "newDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "17343:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 20997, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17335:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20996, "name": "address", "nodeType": "ElementaryTypeName", "src": "17335:7:53", "typeDescriptions": {}}}, "id": 20999, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17335:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 21000, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17352:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 20993, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20949, "src": "17316:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20992, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "17309:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 20994, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17309:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 20995, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "17309:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21001, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17309:45:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21002, "nodeType": "ExpressionStatement", "src": "17309:45:53"}, {"expression": {"arguments": [{"arguments": [{"id": 21009, "name": "newDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "17398:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 21008, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17390:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21007, "name": "address", "nodeType": "ElementaryTypeName", "src": "17390:7:53", "typeDescriptions": {}}}, "id": 21010, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17390:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 21013, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17412:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 21012, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17412:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 21011, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "17407:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 21014, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17407:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 21015, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "17407:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21004, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20949, "src": "17371:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21003, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "17364:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21005, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17364:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21006, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "17364:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17364:61:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21017, "nodeType": "ExpressionStatement", "src": "17364:61:53"}, {"eventCall": {"arguments": [{"id": 21019, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20949, "src": "17448:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 21022, "name": "newDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "17463:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}], "id": 21021, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17455:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21020, "name": "address", "nodeType": "ElementaryTypeName", "src": "17455:7:53", "typeDescriptions": {}}}, "id": 21023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17455:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 21018, "name": "SwapDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20170, "src": "17440:7:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 21024, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17440:31:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21025, "nodeType": "EmitStatement", "src": "17435:36:53"}, {"expression": {"hexValue": "74727565", "id": 21026, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17488:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 20955, "id": 21027, "nodeType": "Return", "src": "17481:11:53"}]}, "documentation": {"id": 20947, "nodeType": "StructuredDocumentation", "src": "16683:301:53", "text": " @notice Set the DEX that should be used for swapping for a specific coin.\n         If Uniswap is active, it will switch to SushiSwap and vice versa.\n @dev Only SushiSwap and Uniswap are supported.\n @param token Address of token for which the DEX should be updated."}, "functionSelector": "469656a2", "id": 21029, "implemented": true, "kind": "function", "modifiers": [{"id": 20952, "kind": "modifierInvocation", "modifierName": {"id": 20951, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "17030:14:53"}, "nodeType": "ModifierInvocation", "src": "17030:14:53"}], "name": "swapDex", "nameLocation": "16998:7:53", "nodeType": "FunctionDefinition", "parameters": {"id": 20950, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20949, "mutability": "mutable", "name": "token", "nameLocation": "17014:5:53", "nodeType": "VariableDeclaration", "scope": 21029, "src": "17006:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20948, "name": "address", "nodeType": "ElementaryTypeName", "src": "17006:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "17005:15:53"}, "returnParameters": {"id": 20955, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20954, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21029, "src": "17054:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20953, "name": "bool", "nodeType": "ElementaryTypeName", "src": "17054:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "17053:6:53"}, "scope": 22260, "src": "16989:510:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 21140, "nodeType": "Block", "src": "17950:686:53", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21039, "name": "_harvest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22259, "src": "17960:8:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$", "typeString": "function () returns (uint256)"}}, "id": 21040, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17960:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21041, "nodeType": "ExpressionStatement", "src": "17960:10:53"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21042, "name": "_withdrawAllToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22193, "src": "17980:19:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 21043, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17980:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21044, "nodeType": "ExpressionStatement", "src": "17980:21:53"}, {"expression": {"id": 21047, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21045, "name": "convexPid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20071, "src": "18011:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21046, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21032, "src": "18023:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18011:22:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21048, "nodeType": "ExpressionStatement", "src": "18011:22:53"}, {"expression": {"id": 21051, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21049, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20073, "src": "18043:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21050, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21034, "src": "18056:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18043:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21052, "nodeType": "ExpressionStatement", "src": "18043:24:53"}, {"assignments": [21054, null, null, 21056, null, null], "declarations": [{"constant": false, "id": 21054, "mutability": "mutable", "name": "lp_", "nameLocation": "18086:3:53", "nodeType": "VariableDeclaration", "scope": 21140, "src": "18078:11:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21053, "name": "address", "nodeType": "ElementaryTypeName", "src": "18078:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null, {"constant": false, "id": 21056, "mutability": "mutable", "name": "rewards_", "nameLocation": "18103:8:53", "nodeType": "VariableDeclaration", "scope": 21140, "src": "18095:16:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21055, "name": "address", "nodeType": "ElementaryTypeName", "src": "18095:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null], "id": 21061, "initialValue": {"arguments": [{"id": 21059, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21032, "src": "18137:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21057, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "18119:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}, "id": 21058, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolInfo", "nodeType": "MemberAccess", "referencedDeclaration": 43856, "src": "18119:17:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "function (uint256) external returns (address,address,address,address,address,bool)"}}, "id": 21060, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18119:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "tuple(address,address,address,address,address,bool)"}}, "nodeType": "VariableDeclarationStatement", "src": "18077:71:53"}, {"expression": {"id": 21066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21062, "name": "lp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20076, "src": "18158:2:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21064, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21054, "src": "18170:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21063, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "18163:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21065, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18163:11:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "src": "18158:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21067, "nodeType": "ExpressionStatement", "src": "18158:16:53"}, {"expression": {"id": 21072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21068, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "18184:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21070, "name": "rewards_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21056, "src": "18209:8:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21069, "name": "IRewardStaking", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38714, "src": "18194:14:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRewardStaking_$38714_$", "typeString": "type(contract IRewardStaking)"}}, "id": 21071, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18194:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "src": "18184:34:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 21073, "nodeType": "ExpressionStatement", "src": "18184:34:53"}, {"assignments": [21075], "declarations": [{"constant": false, "id": 21075, "mutability": "mutable", "name": "curvePool_", "nameLocation": "18236:10:53", "nodeType": "VariableDeclaration", "scope": 21140, "src": "18228:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21074, "name": "address", "nodeType": "ElementaryTypeName", "src": "18228:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 21080, "initialValue": {"arguments": [{"id": 21078, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21054, "src": "18288:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21076, "name": "_CURVE_REGISTRY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20012, "src": "18249:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistry_$44168", "typeString": "contract ICurveRegistry"}}, "id": 21077, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_pool_from_lp_token", "nodeType": "MemberAccess", "referencedDeclaration": 44167, "src": "18249:38:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$", "typeString": "function (address) external returns (address)"}}, "id": 21079, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18249:43:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "18228:64:53"}, {"expression": {"id": 21085, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21081, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "18302:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21083, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21075, "src": "18325:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21082, "name": "ICurveSwap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38503, "src": "18314:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwap_$38503_$", "typeString": "type(contract ICurveSwap)"}}, "id": 21084, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18314:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "src": "18302:34:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 21086, "nodeType": "ExpressionStatement", "src": "18302:34:53"}, {"expression": {"arguments": [{"id": 21091, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21075, "src": "18372:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 21092, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18384:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 21088, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20062, "src": "18353:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21087, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "18346:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21089, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18346:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21090, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "18346:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21093, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18346:40:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21094, "nodeType": "ExpressionStatement", "src": "18346:40:53"}, {"expression": {"arguments": [{"id": 21099, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21075, "src": "18422:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 21102, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18439:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 21101, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18439:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 21100, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "18434:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 21103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18434:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 21104, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "18434:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21096, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20062, "src": "18403:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21095, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "18396:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21097, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18396:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "18396:25:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18396:56:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21106, "nodeType": "ExpressionStatement", "src": "18396:56:53"}, {"expression": {"arguments": [{"arguments": [{"id": 21113, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "18494:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}], "id": 21112, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18486:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21111, "name": "address", "nodeType": "ElementaryTypeName", "src": "18486:7:53", "typeDescriptions": {}}}, "id": 21114, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18486:17:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 21115, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18505:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 21108, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21054, "src": "18469:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21107, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "18462:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18462:11:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "18462:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21116, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18462:45:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21117, "nodeType": "ExpressionStatement", "src": "18462:45:53"}, {"expression": {"arguments": [{"arguments": [{"id": 21124, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "18549:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}], "id": 21123, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18541:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21122, "name": "address", "nodeType": "ElementaryTypeName", "src": "18541:7:53", "typeDescriptions": {}}}, "id": 21125, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18541:17:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 21128, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18565:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 21127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18565:7:53", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 21126, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "18560:4:53", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 21129, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18560:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 21130, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "18560:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21119, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21054, "src": "18524:3:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21118, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "18517:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 21120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18517:11:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 38195, "src": "18517:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18517:61:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21132, "nodeType": "ExpressionStatement", "src": "18517:61:53"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 21134, "name": "_deposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22145, "src": "18596:8:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$", "typeString": "function () returns (bool)"}}, "id": 21135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18596:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 21136, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "18608:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 21137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "DEPOSIT_FAILED", "nodeType": "MemberAccess", "referencedDeclaration": 38927, "src": "18608:20:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 21133, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "18588:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21138, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18588:41:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21139, "nodeType": "ExpressionStatement", "src": "18588:41:53"}]}, "documentation": {"id": 21030, "nodeType": "StructuredDocumentation", "src": "17505:349:53", "text": " @notice Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.\n @dev First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.\n @param convexPid_ The PID for the new Convex Pool.\n @param curveIndex_ The index of the new Convex Pool Token in the new Curve Pool."}, "functionSelector": "94ef5785", "id": 21141, "implemented": true, "kind": "function", "modifiers": [{"id": 21037, "kind": "modifierInvocation", "modifierName": {"id": 21036, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 4183, "src": "17935:14:53"}, "nodeType": "ModifierInvocation", "src": "17935:14:53"}], "name": "changeConvexPool", "nameLocation": "17868:16:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21035, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21032, "mutability": "mutable", "name": "convexPid_", "nameLocation": "17893:10:53", "nodeType": "VariableDeclaration", "scope": 21141, "src": "17885:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21031, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17885:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 21034, "mutability": "mutable", "name": "curveIndex_", "nameLocation": "17913:11:53", "nodeType": "VariableDeclaration", "scope": 21141, "src": "17905:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17905:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "17884:41:53"}, "returnParameters": {"id": 21038, "nodeType": "ParameterList", "parameters": [], "src": "17950:0:53"}, "scope": 22260, "src": "17859:777:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [43789], "body": {"id": 21150, "nodeType": "Block", "src": "18811:38:53", "statements": [{"expression": {"hexValue": "426b64547269486f70437678", "id": 21148, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18828:14:53", "typeDescriptions": {"typeIdentifier": "t_stringliteral_21fcc56ed244948aad86fff181cc48ce232d3cebfbc84fe7865f03ad087df5f7", "typeString": "literal_string \"BkdTriHopCvx\""}, "value": "BkdTriHopCvx"}, "functionReturnParameters": 21147, "id": 21149, "nodeType": "Return", "src": "18821:21:53"}]}, "documentation": {"id": 21142, "nodeType": "StructuredDocumentation", "src": "18642:101:53", "text": " @notice Returns the name of the strategy.\n @return The name of the strategy."}, "functionSelector": "06fdde03", "id": 21151, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "18757:4:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21144, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18778:8:53"}, "parameters": {"id": 21143, "nodeType": "ParameterList", "parameters": [], "src": "18761:2:53"}, "returnParameters": {"id": 21147, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21146, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21151, "src": "18796:13:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 21145, "name": "string", "nodeType": "ElementaryTypeName", "src": "18796:6:53", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "18795:15:53"}, "scope": 22260, "src": "18748:101:53", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [43816], "body": {"id": 21198, "nodeType": "Block", "src": "19121:442:53", "statements": [{"assignments": [21159], "declarations": [{"constant": false, "id": 21159, "mutability": "mutable", "name": "crvAmount_", "nameLocation": "19139:10:53", "nodeType": "VariableDeclaration", "scope": 21198, "src": "19131:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21158, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19131:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21167, "initialValue": {"arguments": [{"arguments": [{"id": 21164, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "19175:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21163, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19167:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21162, "name": "address", "nodeType": "ElementaryTypeName", "src": "19167:7:53", "typeDescriptions": {}}}, "id": 21165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19167:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21160, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "19152:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 21161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "earned", "nodeType": "MemberAccess", "referencedDeclaration": 38679, "src": "19152:14:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19152:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19131:50:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21170, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21168, "name": "crvAmount_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21159, "src": "19195:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21169, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19209:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "19195:15:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21173, "nodeType": "IfStatement", "src": "19191:29:53", "trueBody": {"expression": {"hexValue": "30", "id": 21171, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19219:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 21157, "id": 21172, "nodeType": "Return", "src": "19212:8:53"}}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 21175, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "19287:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21178, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "19330:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "19330:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21180, "name": "crvCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20093, "src": "19347:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19330:41:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21176, "name": "crvAmount_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21159, "src": "19309:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21177, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "19309:20:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19309:63:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21174, "name": "_underlyingAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21842, "src": "19249:20:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$38094_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 21183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19249:137:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"id": 21185, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "19439:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21190, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "19500:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "19500:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21192, "name": "cvxCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20091, "src": "19517:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19500:41:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21187, "name": "crvAmount_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21159, "src": "19478:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21186, "name": "getCvxMintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31837, "src": "19461:16:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19461:28:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "19461:38:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21194, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19461:81:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21184, "name": "_underlyingAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21842, "src": "19401:20:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$38094_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 21195, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19401:155:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19249:307:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21157, "id": 21197, "nodeType": "Return", "src": "19230:326:53"}]}, "documentation": {"id": 21152, "nodeType": "StructuredDocumentation", "src": "18855:197:53", "text": " @notice Amount of rewards that can be harvested in the underlying.\n @dev Includes rewards for CRV & CVX.\n @return Estimated amount of underlying available to harvest."}, "functionSelector": "dbbd47d4", "id": 21199, "implemented": true, "kind": "function", "modifiers": [], "name": "harvestable", "nameLocation": "19066:11:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21154, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19094:8:53"}, "parameters": {"id": 21153, "nodeType": "ParameterList", "parameters": [], "src": "19077:2:53"}, "returnParameters": {"id": 21157, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21156, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21199, "src": "19112:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21155, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19112:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "19111:9:53"}, "scope": 22260, "src": "19057:506:53", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [43836], "body": {"id": 21208, "nodeType": "Block", "src": "19694:29:53", "statements": [{"expression": {"hexValue": "66616c7365", "id": 21206, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19711:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 21205, "id": 21207, "nodeType": "Return", "src": "19704:12:53"}]}, "documentation": {"id": 21200, "nodeType": "StructuredDocumentation", "src": "19569:55:53", "text": " @dev Contract does not stash tokens."}, "functionSelector": "61240eea", "id": 21209, "implemented": true, "kind": "function", "modifiers": [], "name": "hasPendingFunds", "nameLocation": "19638:15:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21202, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19670:8:53"}, "parameters": {"id": 21201, "nodeType": "ParameterList", "parameters": [], "src": "19653:2:53"}, "returnParameters": {"id": 21205, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21204, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21209, "src": "19688:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 21203, "name": "bool", "nodeType": "ElementaryTypeName", "src": "19688:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "19687:6:53"}, "scope": 22260, "src": "19629:94:53", "stateMutability": "pure", "virtual": false, "visibility": "external"}, {"baseFunctions": [43794], "body": {"id": 21221, "nodeType": "Block", "src": "20079:34:53", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21218, "name": "_deposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22145, "src": "20096:8:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$", "typeString": "function () returns (bool)"}}, "id": 21219, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20096:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 21217, "id": 21220, "nodeType": "Return", "src": "20089:17:53"}]}, "documentation": {"id": 21210, "nodeType": "StructuredDocumentation", "src": "19729:277:53", "text": " @notice Deposit all available underlying into Convex pool.\n @dev Liquidity is added to Curve Pool then Curve LP tokens are deposited\n \t\tinto Convex and Convex LP tokens are staked for rewards by default.\n @return True if successful deposit."}, "functionSelector": "d0e30db0", "id": 21222, "implemented": true, "kind": "function", "modifiers": [{"id": 21214, "kind": "modifierInvocation", "modifierName": {"id": 21213, "name": "onlyVault", "nodeType": "IdentifierPath", "referencedDeclaration": 20183, "src": "20054:9:53"}, "nodeType": "ModifierInvocation", "src": "20054:9:53"}], "name": "deposit", "nameLocation": "20020:7:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21212, "nodeType": "OverrideSpecifier", "overrides": [], "src": "20045:8:53"}, "parameters": {"id": 21211, "nodeType": "ParameterList", "parameters": [], "src": "20027:2:53"}, "returnParameters": {"id": 21217, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21216, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21222, "src": "20073:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 21215, "name": "bool", "nodeType": "ElementaryTypeName", "src": "20073:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "20072:6:53"}, "scope": 22260, "src": "20011:102:53", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"baseFunctions": [43811], "body": {"id": 21300, "nodeType": "Block", "src": "20413:890:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 21242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21230, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "20444:3:53", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 21231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "20444:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 21232, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "20458:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20444:19:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"expression": {"id": 21237, "name": "Roles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37271, "src": "20490:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Roles_$37271_$", "typeString": "type(library Roles)"}}, "id": 21238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GOVERNANCE", "nodeType": "MemberAccess", "referencedDeclaration": 37246, "src": "20490:16:53", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 21239, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "20508:3:53", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 21240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "20508:10:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21234, "name": "_roleManager", "nodeType": "Identifier", "overloadedDeclarations": [4139], "referencedDeclaration": 4139, "src": "20467:12:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IRoleManager_$40999_$", "typeString": "function () view returns (contract IRoleManager)"}}, "id": 21235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20467:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRoleManager_$40999", "typeString": "contract IRoleManager"}}, "id": 21236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "hasRole", "nodeType": "MemberAccess", "referencedDeclaration": 40948, "src": "20467:22:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$", "typeString": "function (bytes32,address) view external returns (bool)"}}, "id": 21241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20467:52:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "20444:75:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 21243, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "20533:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 21244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNAUTHORIZED_ACCESS", "nodeType": "MemberAccess", "referencedDeclaration": 38825, "src": "20533:25:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 21229, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "20423:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20423:145:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21246, "nodeType": "ExpressionStatement", "src": "20423:145:53"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21247, "name": "_withdrawAllToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22193, "src": "20649:19:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 21248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20649:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21249, "nodeType": "ExpressionStatement", "src": "20649:21:53"}, {"assignments": [21251], "declarations": [{"constant": false, "id": 21251, "mutability": "mutable", "name": "hopLpBalance", "nameLocation": "20739:12:53", "nodeType": "VariableDeclaration", "scope": 21300, "src": "20731:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21250, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20731:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21254, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 21252, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21686, "src": "20754:13:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21253, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20754:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "20731:38:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21257, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21255, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21251, "src": "20783:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 21256, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20798:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "20783:16:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21275, "nodeType": "IfStatement", "src": "20779:231:53", "trueBody": {"id": 21274, "nodeType": "Block", "src": "20801:209:53", "statements": [{"expression": {"arguments": [{"id": 21261, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21251, "src": "20871:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 21266, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20064, "src": "20916:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21265, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20908:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 21264, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "20908:7:53", "typeDescriptions": {}}}, "id": 21267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20908:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 21263, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20901:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_int128_$", "typeString": "type(int128)"}, "typeName": {"id": 21262, "name": "int128", "nodeType": "ElementaryTypeName", "src": "20901:6:53", "typeDescriptions": {}}}, "id": 21268, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20901:30:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, {"arguments": [{"id": 21270, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21251, "src": "20972:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21269, "name": "_minUnderlyingAccepted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21956, "src": "20949:22:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20949:36:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int128", "typeString": "int128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21258, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "20815:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 21260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_one_coin", "nodeType": "MemberAccess", "referencedDeclaration": 38502, "src": "20815:38:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int128_$_t_uint256_$returns$__$", "typeString": "function (uint256,int128,uint256) external"}}, "id": 21272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20815:184:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21273, "nodeType": "ExpressionStatement", "src": "20815:184:53"}]}}, {"assignments": [21277], "declarations": [{"constant": false, "id": 21277, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "21072:17:53", "nodeType": "VariableDeclaration", "scope": 21300, "src": "21064:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21276, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21064:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21280, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 21278, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "21092:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21279, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21092:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21064:48:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21281, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21277, "src": "21126:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21147:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21126:22:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21286, "nodeType": "IfStatement", "src": "21122:36:53", "trueBody": {"expression": {"hexValue": "30", "id": 21284, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21157:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 21228, "id": 21285, "nodeType": "Return", "src": "21150:8:53"}}, {"expression": {"arguments": [{"id": 21290, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20053, "src": "21192:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 21291, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21277, "src": "21199:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21287, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "21168:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21289, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 38125, "src": "21168:23:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21168:49:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21293, "nodeType": "ExpressionStatement", "src": "21168:49:53"}, {"eventCall": {"arguments": [{"id": 21295, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21277, "src": "21244:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21294, "name": "WithdrawAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20118, "src": "21232:11:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 21296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21232:30:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21297, "nodeType": "EmitStatement", "src": "21227:35:53"}, {"expression": {"id": 21298, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21277, "src": "21279:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21228, "id": 21299, "nodeType": "Return", "src": "21272:24:53"}]}, "documentation": {"id": 21223, "nodeType": "StructuredDocumentation", "src": "20119:232:53", "text": " @notice Withdraw all underlying.\n @dev This does not liquidate reward tokens and only considers\n      idle underlying, idle lp tokens and staked lp tokens.\n @return Amount of underlying withdrawn"}, "functionSelector": "853828b6", "id": 21301, "implemented": true, "kind": "function", "modifiers": [], "name": "withdrawAll", "nameLocation": "20365:11:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21225, "nodeType": "OverrideSpecifier", "overrides": [], "src": "20386:8:53"}, "parameters": {"id": 21224, "nodeType": "ParameterList", "parameters": [], "src": "20376:2:53"}, "returnParameters": {"id": 21228, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21227, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21301, "src": "20404:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21226, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20404:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "20403:9:53"}, "scope": 22260, "src": "20356:947:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [43821], "body": {"id": 21313, "nodeType": "Block", "src": "21581:34:53", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21310, "name": "_harvest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22259, "src": "21598:8:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$", "typeString": "function () returns (uint256)"}}, "id": 21311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21598:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21309, "id": 21312, "nodeType": "Return", "src": "21591:17:53"}]}, "documentation": {"id": 21302, "nodeType": "StructuredDocumentation", "src": "21309:204:53", "text": " @notice Harvests reward tokens and sells these for the underlying.\n @dev Any underlying harvested is not redeposited by this method.\n @return Amount of underlying harvested."}, "functionSelector": "4641257d", "id": 21314, "implemented": true, "kind": "function", "modifiers": [{"id": 21306, "kind": "modifierInvocation", "modifierName": {"id": 21305, "name": "onlyVault", "nodeType": "IdentifierPath", "referencedDeclaration": 20183, "src": "21553:9:53"}, "nodeType": "ModifierInvocation", "src": "21553:9:53"}], "name": "harvest", "nameLocation": "21527:7:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21304, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21544:8:53"}, "parameters": {"id": 21303, "nodeType": "ParameterList", "parameters": [], "src": "21534:2:53"}, "returnParameters": {"id": 21309, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21308, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21314, "src": "21572:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21572:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "21571:9:53"}, "scope": 22260, "src": "21518:97:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [43799], "body": {"id": 21337, "nodeType": "Block", "src": "21886:152:53", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21321, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "21915:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21322, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21915:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21325, "name": "_stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21716, "src": "21980:14:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21326, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21980:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21327, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21701, "src": "21999:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21328, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21999:12:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21980:31:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21324, "name": "_lpToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22015, "src": "21969:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21969:43:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 21331, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21686, "src": "22015:13:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 21332, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22015:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21969:61:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21323, "name": "_hopLpToUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21994, "src": "21950:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21950:81:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21915:116:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21320, "id": 21336, "nodeType": "Return", "src": "21896:135:53"}]}, "documentation": {"id": 21315, "nodeType": "StructuredDocumentation", "src": "21621:202:53", "text": " @notice Get the total underlying balance of the strategy.\n @dev This includes idle underlying, idle LP and LP deposited on Convex.\n @return Underlying balance of strategy."}, "functionSelector": "b69ef8a8", "id": 21338, "implemented": true, "kind": "function", "modifiers": [], "name": "balance", "nameLocation": "21837:7:53", "nodeType": "FunctionDefinition", "overrides": {"id": 21317, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21859:8:53"}, "parameters": {"id": 21316, "nodeType": "ParameterList", "parameters": [], "src": "21844:2:53"}, "returnParameters": {"id": 21320, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21319, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21338, "src": "21877:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21318, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21877:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "21876:9:53"}, "scope": 22260, "src": "21828:210:53", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 21353, "nodeType": "Block", "src": "22279:38:53", "statements": [{"expression": {"id": 21351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21347, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "22289:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 21349, "indexExpression": {"id": 21348, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21341, "src": "22298:5:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22289:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21350, "name": "dex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21344, "src": "22307:3:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "src": "22289:21:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 21352, "nodeType": "ExpressionStatement", "src": "22289:21:53"}]}, "documentation": {"id": 21339, "nodeType": "StructuredDocumentation", "src": "22044:168:53", "text": " @dev Set the dex to use for a token.\n @param token Address of token to set the dex for.\n @param dex Dex to use for swaps with that token."}, "id": 21354, "implemented": true, "kind": "function", "modifiers": [], "name": "_setDex", "nameLocation": "22226:7:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21345, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21341, "mutability": "mutable", "name": "token", "nameLocation": "22242:5:53", "nodeType": "VariableDeclaration", "scope": 21354, "src": "22234:13:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21340, "name": "address", "nodeType": "ElementaryTypeName", "src": "22234:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 21344, "mutability": "mutable", "name": "dex", "nameLocation": "22265:3:53", "nodeType": "VariableDeclaration", "scope": 21354, "src": "22249:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}, "typeName": {"id": 21343, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21342, "name": "UniswapRouter02", "nodeType": "IdentifierPath", "referencedDeclaration": 44025, "src": "22249:15:53"}, "referencedDeclaration": 44025, "src": "22249:15:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "visibility": "internal"}], "src": "22233:36:53"}, "returnParameters": {"id": 21346, "nodeType": "ParameterList", "parameters": [], "src": "22279:0:53"}, "scope": 22260, "src": "22217:100:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21376, "nodeType": "Block", "src": "22500:108:53", "statements": [{"assignments": [21362], "declarations": [{"constant": false, "id": 21362, "mutability": "mutable", "name": "amount", "nameLocation": "22518:6:53", "nodeType": "VariableDeclaration", "scope": 21376, "src": "22510:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22510:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21370, "initialValue": {"arguments": [{"arguments": [{"id": 21367, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "22551:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21366, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22543:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21365, "name": "address", "nodeType": "ElementaryTypeName", "src": "22543:7:53", "typeDescriptions": {}}}, "id": 21368, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22543:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21363, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21358, "src": "22527:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "22527:15:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22527:30:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "22510:47:53"}, {"expression": {"arguments": [{"id": 21372, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21358, "src": "22587:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, {"id": 21373, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21362, "src": "22594:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21371, "name": "_swapForWeth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21488, "src": "22574:12:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_uint256_$returns$__$", "typeString": "function (contract IERC20,uint256)"}}, "id": 21374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22574:27:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "functionReturnParameters": 21360, "id": 21375, "nodeType": "Return", "src": "22567:34:53"}]}, "documentation": {"id": 21355, "nodeType": "StructuredDocumentation", "src": "22323:124:53", "text": " @notice Swaps all balance of a token for WETH.\n @param token Address of the token to swap for WETH."}, "id": 21377, "implemented": true, "kind": "function", "modifiers": [], "name": "_swapAllForWeth", "nameLocation": "22461:15:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21359, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21358, "mutability": "mutable", "name": "token", "nameLocation": "22484:5:53", "nodeType": "VariableDeclaration", "scope": 21377, "src": "22477:12:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 21357, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21356, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "22477:6:53"}, "referencedDeclaration": 38094, "src": "22477:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "22476:14:53"}, "returnParameters": {"id": 21360, "nodeType": "ParameterList", "parameters": [], "src": "22500:0:53"}, "scope": 22260, "src": "22452:156:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21487, "nodeType": "Block", "src": "22848:939:53", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21386, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "22862:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21387, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22872:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "22862:11:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21390, "nodeType": "IfStatement", "src": "22858:24:53", "trueBody": {"functionReturnParameters": 21385, "id": 21389, "nodeType": "Return", "src": "22875:7:53"}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 21393, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21381, "src": "22934:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21392, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22926:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21391, "name": "address", "nodeType": "ElementaryTypeName", "src": "22926:7:53", "typeDescriptions": {}}}, "id": 21394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22926:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 21397, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "22952:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21396, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22944:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21395, "name": "address", "nodeType": "ElementaryTypeName", "src": "22944:7:53", "typeDescriptions": {}}}, "id": 21398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22944:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "22926:31:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21425, "nodeType": "IfStatement", "src": "22922:386:53", "trueBody": {"id": 21424, "nodeType": "Block", "src": "22959:349:53", "statements": [{"expression": {"arguments": [{"id": 21403, "name": "_CURVE_CVX_INDEX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19997, "src": "23019:16:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21404, "name": "_CURVE_ETH_INDEX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20000, "src": "23053:16:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21405, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "23087:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 21419, "name": "slippageTolerance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32359, "src": "23245:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"arguments": [{"id": 21414, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "23206:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21413, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23198:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21412, "name": "address", "nodeType": "ElementaryTypeName", "src": "23198:7:53", "typeDescriptions": {}}}, "id": 21415, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23198:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21408, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20051, "src": "23149:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "id": 21409, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOracleProvider", "nodeType": "MemberAccess", "referencedDeclaration": 37961, "src": "23149:34:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$35607_$returns$_t_contract$_IOracleProvider_$35881_$bound_to$_t_contract$_IAddressProvider_$35607_$", "typeString": "function (contract IAddressProvider) view returns (contract IOracleProvider)"}}, "id": 21410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23149:36:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IOracleProvider_$35881", "typeString": "contract IOracleProvider"}}, "id": 21411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPriceETH", "nodeType": "MemberAccess", "referencedDeclaration": 35880, "src": "23149:48:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23149:63:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21406, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "23111:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21407, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "23111:37:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21417, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23111:102:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "23111:133:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21420, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23111:152:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21400, "name": "_CVX_ETH_CURVE_POOL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20048, "src": "22973:19:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}}, "id": 21402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exchange", "nodeType": "MemberAccess", "referencedDeclaration": 44099, "src": "22973:28:53", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256) payable external"}}, "id": 21421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22973:304:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21422, "nodeType": "ExpressionStatement", "src": "22973:304:53"}, {"functionReturnParameters": 21385, "id": 21423, "nodeType": "Return", "src": "23291:7:53"}]}}, {"assignments": [21430], "declarations": [{"constant": false, "id": 21430, "mutability": "mutable", "name": "path", "nameLocation": "23367:4:53", "nodeType": "VariableDeclaration", "scope": 21487, "src": "23350:21:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 21428, "name": "address", "nodeType": "ElementaryTypeName", "src": "23350:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21429, "nodeType": "ArrayTypeName", "src": "23350:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 21436, "initialValue": {"arguments": [{"hexValue": "32", "id": 21434, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23388:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 21433, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "23374:13:53", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 21431, "name": "address", "nodeType": "ElementaryTypeName", "src": "23378:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21432, "nodeType": "ArrayTypeName", "src": "23378:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 21435, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23374:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "23350:40:53"}, {"expression": {"id": 21444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21437, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21430, "src": "23400:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21439, "indexExpression": {"hexValue": "30", "id": 21438, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23405:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "23400:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21442, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21381, "src": "23418:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21441, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23410:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21440, "name": "address", "nodeType": "ElementaryTypeName", "src": "23410:7:53", "typeDescriptions": {}}}, "id": 21443, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23410:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "23400:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21445, "nodeType": "ExpressionStatement", "src": "23400:24:53"}, {"expression": {"id": 21453, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21446, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21430, "src": "23434:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21448, "indexExpression": {"hexValue": "31", "id": 21447, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23439:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "23434:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21451, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "23452:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21450, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23444:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21449, "name": "address", "nodeType": "ElementaryTypeName", "src": "23444:7:53", "typeDescriptions": {}}}, "id": 21452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23444:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "23434:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21454, "nodeType": "ExpressionStatement", "src": "23434:24:53"}, {"expression": {"arguments": [{"id": 21462, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "23531:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 21476, "name": "slippageTolerance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32359, "src": "23678:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"arguments": [{"id": 21471, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21381, "src": "23642:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21470, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23634:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21469, "name": "address", "nodeType": "ElementaryTypeName", "src": "23634:7:53", "typeDescriptions": {}}}, "id": 21472, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23634:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21465, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20051, "src": "23585:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "id": 21466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOracleProvider", "nodeType": "MemberAccess", "referencedDeclaration": 37961, "src": "23585:34:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$35607_$returns$_t_contract$_IOracleProvider_$35881_$bound_to$_t_contract$_IAddressProvider_$35607_$", "typeString": "function (contract IAddressProvider) view returns (contract IOracleProvider)"}}, "id": 21467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23585:36:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IOracleProvider_$35881", "typeString": "contract IOracleProvider"}}, "id": 21468, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPriceETH", "nodeType": "MemberAccess", "referencedDeclaration": 35880, "src": "23585:48:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23585:64:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21463, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "23551:6:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "23551:33:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23551:99:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "23551:126:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23551:145:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21478, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21430, "src": "23710:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"arguments": [{"id": 21481, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "23736:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21480, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23728:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21479, "name": "address", "nodeType": "ElementaryTypeName", "src": "23728:7:53", "typeDescriptions": {}}}, "id": 21482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23728:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 21483, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "23755:5:53", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 21484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "23755:15:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 21455, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "23468:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 21460, "indexExpression": {"arguments": [{"id": 21458, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21381, "src": "23485:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21457, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23477:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21456, "name": "address", "nodeType": "ElementaryTypeName", "src": "23477:7:53", "typeDescriptions": {}}}, "id": 21459, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23477:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23468:24:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 21461, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "swapExactTokensForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 43930, "src": "23468:49:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}}, "id": 21485, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23468:312:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 21486, "nodeType": "ExpressionStatement", "src": "23468:312:53"}]}, "documentation": {"id": 21378, "nodeType": "StructuredDocumentation", "src": "22614:168:53", "text": " @notice Swaps a token for WETH.\n @param token Address of the token to swap for WETH.\n @param amount Amount of the token to swap for WETH."}, "id": 21488, "implemented": true, "kind": "function", "modifiers": [], "name": "_swapForWeth", "nameLocation": "22796:12:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21384, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21381, "mutability": "mutable", "name": "token", "nameLocation": "22816:5:53", "nodeType": "VariableDeclaration", "scope": 21488, "src": "22809:12:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 21380, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21379, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "22809:6:53"}, "referencedDeclaration": 38094, "src": "22809:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 21383, "mutability": "mutable", "name": "amount", "nameLocation": "22831:6:53", "nodeType": "VariableDeclaration", "scope": 21488, "src": "22823:14:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21382, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22823:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "22808:30:53"}, "returnParameters": {"id": 21385, "nodeType": "ParameterList", "parameters": [], "src": "22848:0:53"}, "scope": 22260, "src": "22787:1000:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21570, "nodeType": "Block", "src": "23908:592:53", "statements": [{"assignments": [21493], "declarations": [{"constant": false, "id": 21493, "mutability": "mutable", "name": "wethBalance", "nameLocation": "23926:11:53", "nodeType": "VariableDeclaration", "scope": 21570, "src": "23918:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21492, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23918:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21501, "initialValue": {"arguments": [{"arguments": [{"id": 21498, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "23964:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21497, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23956:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21496, "name": "address", "nodeType": "ElementaryTypeName", "src": "23956:7:53", "typeDescriptions": {}}}, "id": 21499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23956:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21494, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "23940:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "23940:15:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23940:30:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23918:52:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21504, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21502, "name": "wethBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21493, "src": "23984:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23999:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "23984:16:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21506, "nodeType": "IfStatement", "src": "23980:29:53", "trueBody": {"functionReturnParameters": 21491, "id": 21505, "nodeType": "Return", "src": "24002:7:53"}}, {"assignments": [21511], "declarations": [{"constant": false, "id": 21511, "mutability": "mutable", "name": "path", "nameLocation": "24035:4:53", "nodeType": "VariableDeclaration", "scope": 21570, "src": "24018:21:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 21509, "name": "address", "nodeType": "ElementaryTypeName", "src": "24018:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21510, "nodeType": "ArrayTypeName", "src": "24018:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 21517, "initialValue": {"arguments": [{"hexValue": "32", "id": 21515, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24056:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 21514, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "24042:13:53", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 21512, "name": "address", "nodeType": "ElementaryTypeName", "src": "24046:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21513, "nodeType": "ArrayTypeName", "src": "24046:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 21516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24042:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "24018:40:53"}, {"expression": {"id": 21525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21518, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21511, "src": "24068:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21520, "indexExpression": {"hexValue": "30", "id": 21519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24073:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "24068:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21523, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "24086:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21522, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24078:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21521, "name": "address", "nodeType": "ElementaryTypeName", "src": "24078:7:53", "typeDescriptions": {}}}, "id": 21524, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24078:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "24068:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21526, "nodeType": "ExpressionStatement", "src": "24068:24:53"}, {"expression": {"id": 21534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21527, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21511, "src": "24102:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21529, "indexExpression": {"hexValue": "31", "id": 21528, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24107:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "24102:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21532, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "24120:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21531, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24112:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21530, "name": "address", "nodeType": "ElementaryTypeName", "src": "24112:7:53", "typeDescriptions": {}}}, "id": 21533, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24112:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "24102:29:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21535, "nodeType": "ExpressionStatement", "src": "24102:29:53"}, {"expression": {"arguments": [{"id": 21543, "name": "wethBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21493, "src": "24209:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 21557, "name": "slippageTolerance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32359, "src": "24371:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"arguments": [{"id": 21552, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "24330:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21551, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24322:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21550, "name": "address", "nodeType": "ElementaryTypeName", "src": "24322:7:53", "typeDescriptions": {}}}, "id": 21553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24322:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21546, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20051, "src": "24273:16:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$35607", "typeString": "contract IAddressProvider"}}, "id": 21547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOracleProvider", "nodeType": "MemberAccess", "referencedDeclaration": 37961, "src": "24273:34:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$35607_$returns$_t_contract$_IOracleProvider_$35881_$bound_to$_t_contract$_IAddressProvider_$35607_$", "typeString": "function (contract IAddressProvider) view returns (contract IOracleProvider)"}}, "id": 21548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24273:36:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IOracleProvider_$35881", "typeString": "contract IOracleProvider"}}, "id": 21549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPriceETH", "nodeType": "MemberAccess", "referencedDeclaration": 35880, "src": "24273:48:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24273:69:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21544, "name": "wethBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21493, "src": "24234:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 39705, "src": "24234:38:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24234:109:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "24234:136:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21558, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24234:155:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 21559, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20066, "src": "24392:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24234:175:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21561, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21511, "src": "24423:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"arguments": [{"id": 21564, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "24449:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21563, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24441:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21562, "name": "address", "nodeType": "ElementaryTypeName", "src": "24441:7:53", "typeDescriptions": {}}}, "id": 21565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24441:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 21566, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "24468:5:53", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 21567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "24468:15:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 21536, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "24141:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 21541, "indexExpression": {"arguments": [{"id": 21539, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "24158:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21538, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24150:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21537, "name": "address", "nodeType": "ElementaryTypeName", "src": "24150:7:53", "typeDescriptions": {}}}, "id": 21540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24150:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24141:29:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 21542, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "swapExactTokensForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 43930, "src": "24141:54:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}}, "id": 21568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24141:352:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 21569, "nodeType": "ExpressionStatement", "src": "24141:352:53"}]}, "documentation": {"id": 21489, "nodeType": "StructuredDocumentation", "src": "23793:67:53", "text": " @notice Swaps all available WETH for underlying."}, "id": 21571, "implemented": true, "kind": "function", "modifiers": [], "name": "_swapWethForUnderlying", "nameLocation": "23874:22:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21490, "nodeType": "ParameterList", "parameters": [], "src": "23896:2:53"}, "returnParameters": {"id": 21491, "nodeType": "ParameterList", "parameters": [], "src": "23908:0:53"}, "scope": 22260, "src": "23865:635:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21655, "nodeType": "Block", "src": "24662:916:53", "statements": [{"assignments": [21576], "declarations": [{"constant": false, "id": 21576, "mutability": "mutable", "name": "communityReserve_", "nameLocation": "24680:17:53", "nodeType": "VariableDeclaration", "scope": 21655, "src": "24672:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21575, "name": "address", "nodeType": "ElementaryTypeName", "src": "24672:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 21578, "initialValue": {"id": 21577, "name": "communityReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20089, "src": "24700:16:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "24672:44:53"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21579, "name": "communityReserve_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21576, "src": "24730:17:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 21582, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24759:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 21581, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24751:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21580, "name": "address", "nodeType": "ElementaryTypeName", "src": "24751:7:53", "typeDescriptions": {}}}, "id": 21583, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24751:10:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "24730:31:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21586, "nodeType": "IfStatement", "src": "24726:44:53", "trueBody": {"functionReturnParameters": 21574, "id": 21585, "nodeType": "Return", "src": "24763:7:53"}}, {"assignments": [21588], "declarations": [{"constant": false, "id": 21588, "mutability": "mutable", "name": "cvxCommunityReserveShare_", "nameLocation": "24787:25:53", "nodeType": "VariableDeclaration", "scope": 21655, "src": "24779:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21587, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24779:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21590, "initialValue": {"id": 21589, "name": "cvxCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20091, "src": "24815:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24779:60:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21591, "name": "cvxCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21588, "src": "24853:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 21592, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24881:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24853:29:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21620, "nodeType": "IfStatement", "src": "24849:322:53", "trueBody": {"id": 21619, "nodeType": "Block", "src": "24884:287:53", "statements": [{"assignments": [21595], "declarations": [{"constant": false, "id": 21595, "mutability": "mutable", "name": "cvxBalance_", "nameLocation": "24906:11:53", "nodeType": "VariableDeclaration", "scope": 21619, "src": "24898:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21594, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24898:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21603, "initialValue": {"arguments": [{"arguments": [{"id": 21600, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "24943:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21599, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24935:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21598, "name": "address", "nodeType": "ElementaryTypeName", "src": "24935:7:53", "typeDescriptions": {}}}, "id": 21601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24935:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21596, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "24920:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "24920:14:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24920:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24898:51:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21604, "name": "cvxBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21595, "src": "24967:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 21605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24981:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24967:15:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21618, "nodeType": "IfStatement", "src": "24963:198:53", "trueBody": {"id": 21617, "nodeType": "Block", "src": "24984:177:53", "statements": [{"expression": {"arguments": [{"id": 21610, "name": "communityReserve_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21576, "src": "25041:17:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 21613, "name": "cvxCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21588, "src": "25102:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21611, "name": "cvxBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21595, "src": "25080:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "25080:21:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25080:48:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21607, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "25002:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 38125, "src": "25002:17:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21615, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25002:144:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21616, "nodeType": "ExpressionStatement", "src": "25002:144:53"}]}}]}}, {"assignments": [21622], "declarations": [{"constant": false, "id": 21622, "mutability": "mutable", "name": "crvCommunityReserveShare_", "nameLocation": "25188:25:53", "nodeType": "VariableDeclaration", "scope": 21655, "src": "25180:33:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21621, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25180:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21624, "initialValue": {"id": 21623, "name": "crvCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20093, "src": "25216:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25180:60:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21625, "name": "crvCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21622, "src": "25254:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 21626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25282:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25254:29:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21654, "nodeType": "IfStatement", "src": "25250:322:53", "trueBody": {"id": 21653, "nodeType": "Block", "src": "25285:287:53", "statements": [{"assignments": [21629], "declarations": [{"constant": false, "id": 21629, "mutability": "mutable", "name": "crvBalance_", "nameLocation": "25307:11:53", "nodeType": "VariableDeclaration", "scope": 21653, "src": "25299:19:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25299:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21637, "initialValue": {"arguments": [{"arguments": [{"id": 21634, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "25344:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21633, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "25336:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21632, "name": "address", "nodeType": "ElementaryTypeName", "src": "25336:7:53", "typeDescriptions": {}}}, "id": 21635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25336:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21630, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "25321:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "25321:14:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21636, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25321:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25299:51:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21638, "name": "crvBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21629, "src": "25368:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 21639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25382:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25368:15:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21652, "nodeType": "IfStatement", "src": "25364:198:53", "trueBody": {"id": 21651, "nodeType": "Block", "src": "25385:177:53", "statements": [{"expression": {"arguments": [{"id": 21644, "name": "communityReserve_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21576, "src": "25442:17:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 21647, "name": "crvCommunityReserveShare_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21622, "src": "25503:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21645, "name": "crvBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21629, "src": "25481:11:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "25481:21:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25481:48:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21641, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "25403:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 38125, "src": "25403:17:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$38094_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 21649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25403:144:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21650, "nodeType": "ExpressionStatement", "src": "25403:144:53"}]}}]}}]}, "documentation": {"id": 21572, "nodeType": "StructuredDocumentation", "src": "24506:104:53", "text": " @notice Sends a share of the current balance of CRV and CVX to the Community Reserve."}, "id": 21656, "implemented": true, "kind": "function", "modifiers": [], "name": "_sendCommunityReserveShare", "nameLocation": "24624:26:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21573, "nodeType": "ParameterList", "parameters": [], "src": "24650:2:53"}, "returnParameters": {"id": 21574, "nodeType": "ParameterList", "parameters": [], "src": "24662:0:53"}, "scope": 22260, "src": "24615:963:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21670, "nodeType": "Block", "src": "25709:59:53", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 21666, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "25755:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21665, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "25747:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21664, "name": "address", "nodeType": "ElementaryTypeName", "src": "25747:7:53", "typeDescriptions": {}}}, "id": 21667, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25747:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21662, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "25726:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "25726:20:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25726:35:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21661, "id": 21669, "nodeType": "Return", "src": "25719:42:53"}]}, "documentation": {"id": 21657, "nodeType": "StructuredDocumentation", "src": "25584:58:53", "text": " @dev Get the balance of the underlying."}, "id": 21671, "implemented": true, "kind": "function", "modifiers": [], "name": "_underlyingBalance", "nameLocation": "25656:18:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21658, "nodeType": "ParameterList", "parameters": [], "src": "25674:2:53"}, "returnParameters": {"id": 21661, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21660, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21671, "src": "25700:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21659, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25700:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25699:9:53"}, "scope": 22260, "src": "25647:121:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21685, "nodeType": "Block", "src": "25890:54:53", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 21681, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "25931:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21680, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "25923:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21679, "name": "address", "nodeType": "ElementaryTypeName", "src": "25923:7:53", "typeDescriptions": {}}}, "id": 21682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25923:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21677, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20062, "src": "25907:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "25907:15:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21683, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25907:30:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21676, "id": 21684, "nodeType": "Return", "src": "25900:37:53"}]}, "documentation": {"id": 21672, "nodeType": "StructuredDocumentation", "src": "25774:54:53", "text": " @dev Get the balance of the hop lp."}, "id": 21686, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpBalance", "nameLocation": "25842:13:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21673, "nodeType": "ParameterList", "parameters": [], "src": "25855:2:53"}, "returnParameters": {"id": 21676, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21675, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21686, "src": "25881:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21674, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25881:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25880:9:53"}, "scope": 22260, "src": "25833:111:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21700, "nodeType": "Block", "src": "26059:51:53", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 21696, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "26097:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21695, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26089:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21694, "name": "address", "nodeType": "ElementaryTypeName", "src": "26089:7:53", "typeDescriptions": {}}}, "id": 21697, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26089:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21692, "name": "lp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20076, "src": "26076:2:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "id": 21693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38033, "src": "26076:12:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21698, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26076:27:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21691, "id": 21699, "nodeType": "Return", "src": "26069:34:53"}]}, "documentation": {"id": 21687, "nodeType": "StructuredDocumentation", "src": "25950:50:53", "text": " @dev Get the balance of the lp."}, "id": 21701, "implemented": true, "kind": "function", "modifiers": [], "name": "_lpBalance", "nameLocation": "26014:10:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21688, "nodeType": "ParameterList", "parameters": [], "src": "26024:2:53"}, "returnParameters": {"id": 21691, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21690, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21701, "src": "26050:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21689, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26050:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26049:9:53"}, "scope": 22260, "src": "26005:105:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21715, "nodeType": "Block", "src": "26262:56:53", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 21711, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "26305:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BkdTriHopCvx_$22260", "typeString": "contract BkdTriHopCvx"}], "id": 21710, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26297:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21709, "name": "address", "nodeType": "ElementaryTypeName", "src": "26297:7:53", "typeDescriptions": {}}}, "id": 21712, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26297:13:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 21707, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "26279:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 21708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 38713, "src": "26279:17:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21713, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26279:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21706, "id": 21714, "nodeType": "Return", "src": "26272:39:53"}]}, "documentation": {"id": 21702, "nodeType": "StructuredDocumentation", "src": "26116:83:53", "text": " @dev Get the balance of the underlying staked in the Curve pool."}, "id": 21716, "implemented": true, "kind": "function", "modifiers": [], "name": "_stakedBalance", "nameLocation": "26213:14:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21703, "nodeType": "ParameterList", "parameters": [], "src": "26227:2:53"}, "returnParameters": {"id": 21706, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21705, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21716, "src": "26253:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21704, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26253:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26252:9:53"}, "scope": 22260, "src": "26204:114:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21841, "nodeType": "Block", "src": "26633:714:53", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21727, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21722, "src": "26647:8:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21728, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26659:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26647:13:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21732, "nodeType": "IfStatement", "src": "26643:27:53", "trueBody": {"expression": {"hexValue": "30", "id": 21730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26669:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 21726, "id": 21731, "nodeType": "Return", "src": "26662:8:53"}}, {"assignments": [21737], "declarations": [{"constant": false, "id": 21737, "mutability": "mutable", "name": "path", "nameLocation": "26697:4:53", "nodeType": "VariableDeclaration", "scope": 21841, "src": "26680:21:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 21735, "name": "address", "nodeType": "ElementaryTypeName", "src": "26680:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21736, "nodeType": "ArrayTypeName", "src": "26680:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 21738, "nodeType": "VariableDeclarationStatement", "src": "26680:21:53"}, {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "id": 21741, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21739, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21720, "src": "26715:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 21740, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "26724:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "src": "26715:13:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21792, "nodeType": "IfStatement", "src": "26711:416:53", "trueBody": {"id": 21791, "nodeType": "Block", "src": "26730:397:53", "statements": [{"assignments": [21744], "declarations": [{"constant": false, "id": 21744, "mutability": "mutable", "name": "underlying_", "nameLocation": "26751:11:53", "nodeType": "VariableDeclaration", "scope": 21791, "src": "26744:18:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 21743, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21742, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "26744:6:53"}, "referencedDeclaration": 38094, "src": "26744:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 21746, "initialValue": {"id": 21745, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "26765:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "26744:31:53"}, {"expression": {"id": 21753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21747, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "26789:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 21751, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26810:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 21750, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "26796:13:53", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 21748, "name": "address", "nodeType": "ElementaryTypeName", "src": "26800:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21749, "nodeType": "ArrayTypeName", "src": "26800:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 21752, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26796:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "src": "26789:23:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21754, "nodeType": "ExpressionStatement", "src": "26789:23:53"}, {"expression": {"id": 21762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21755, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "26826:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21757, "indexExpression": {"hexValue": "30", "id": 21756, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26831:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "26826:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21760, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "26844:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21759, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26836:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21758, "name": "address", "nodeType": "ElementaryTypeName", "src": "26836:7:53", "typeDescriptions": {}}}, "id": 21761, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26836:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26826:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21763, "nodeType": "ExpressionStatement", "src": "26826:24:53"}, {"expression": {"id": 21771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21764, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "26864:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21766, "indexExpression": {"hexValue": "31", "id": 21765, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26869:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "26864:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21769, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21744, "src": "26882:11:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21768, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26874:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21767, "name": "address", "nodeType": "ElementaryTypeName", "src": "26874:7:53", "typeDescriptions": {}}}, "id": 21770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26874:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26864:30:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21772, "nodeType": "ExpressionStatement", "src": "26864:30:53"}, {"expression": {"baseExpression": {"arguments": [{"arguments": [{"id": 21782, "name": "_CURVE_CVX_INDEX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19997, "src": "27024:16:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21783, "name": "_CURVE_ETH_INDEX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20000, "src": "27042:16:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21784, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21722, "src": "27060:8:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21780, "name": "_CVX_ETH_CURVE_POOL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20048, "src": "26997:19:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$44158", "typeString": "contract ICurveSwapEth"}}, "id": 21781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_dy", "nodeType": "MemberAccess", "referencedDeclaration": 44117, "src": "26997:26:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) view external returns (uint256)"}}, "id": 21785, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26997:72:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21786, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27091:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}], "expression": {"baseExpression": {"id": 21773, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "26931:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 21778, "indexExpression": {"arguments": [{"id": 21776, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21744, "src": "26948:11:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21775, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26940:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21774, "name": "address", "nodeType": "ElementaryTypeName", "src": "26940:7:53", "typeDescriptions": {}}}, "id": 21777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26940:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26931:30:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 21779, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAmountsOut", "nodeType": "MemberAccess", "referencedDeclaration": 44006, "src": "26931:44:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"}}, "id": 21787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26931:182:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 21789, "indexExpression": {"hexValue": "31", "id": 21788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27114:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26931:185:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21726, "id": 21790, "nodeType": "Return", "src": "26908:208:53"}]}}, {"expression": {"id": 21799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21793, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27136:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "33", "id": 21797, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27157:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 21796, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "27143:13:53", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 21794, "name": "address", "nodeType": "ElementaryTypeName", "src": "27147:7:53", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21795, "nodeType": "ArrayTypeName", "src": "27147:9:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 21798, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27143:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "src": "27136:23:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21800, "nodeType": "ExpressionStatement", "src": "27136:23:53"}, {"expression": {"id": 21808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21801, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27169:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21803, "indexExpression": {"hexValue": "30", "id": 21802, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27174:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "27169:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21806, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21720, "src": "27187:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21805, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27179:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21804, "name": "address", "nodeType": "ElementaryTypeName", "src": "27179:7:53", "typeDescriptions": {}}}, "id": 21807, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27179:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "27169:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21809, "nodeType": "ExpressionStatement", "src": "27169:24:53"}, {"expression": {"id": 21817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21810, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27203:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21812, "indexExpression": {"hexValue": "31", "id": 21811, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27208:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "27203:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21815, "name": "_WETH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "27221:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21814, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27213:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21813, "name": "address", "nodeType": "ElementaryTypeName", "src": "27213:7:53", "typeDescriptions": {}}}, "id": 21816, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27213:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "27203:24:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21818, "nodeType": "ExpressionStatement", "src": "27203:24:53"}, {"expression": {"id": 21826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21819, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27237:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21821, "indexExpression": {"hexValue": "32", "id": 21820, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27242:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "27237:7:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21824, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20056, "src": "27255:10:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21823, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27247:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21822, "name": "address", "nodeType": "ElementaryTypeName", "src": "27247:7:53", "typeDescriptions": {}}}, "id": 21825, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27247:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "27237:29:53", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21827, "nodeType": "ExpressionStatement", "src": "27237:29:53"}, {"expression": {"baseExpression": {"arguments": [{"id": 21835, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21722, "src": "27322:8:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21836, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21737, "src": "27332:4:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}], "expression": {"baseExpression": {"id": 21828, "name": "tokenDex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20103, "src": "27283:8:53", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_contract$_UniswapRouter02_$44025_$", "typeString": "mapping(address => contract UniswapRouter02)"}}, "id": 21833, "indexExpression": {"arguments": [{"id": 21831, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21720, "src": "27300:5:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 21830, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27292:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21829, "name": "address", "nodeType": "ElementaryTypeName", "src": "27292:7:53", "typeDescriptions": {}}}, "id": 21832, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27292:14:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27283:24:53", "typeDescriptions": {"typeIdentifier": "t_contract$_UniswapRouter02_$44025", "typeString": "contract UniswapRouter02"}}, "id": 21834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAmountsOut", "nodeType": "MemberAccess", "referencedDeclaration": 44006, "src": "27283:38:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"}}, "id": 21837, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27283:54:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 21839, "indexExpression": {"hexValue": "32", "id": 21838, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27338:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27283:57:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21726, "id": 21840, "nodeType": "Return", "src": "27276:64:53"}]}, "documentation": {"id": 21717, "nodeType": "StructuredDocumentation", "src": "26324:210:53", "text": " @notice Gets the amount of underlying that would be received by selling the token.\n @dev Uses WETH as intermediate in swap path.\n @return Underlying amount that would be received."}, "id": 21842, "implemented": true, "kind": "function", "modifiers": [], "name": "_underlyingAmountOut", "nameLocation": "26548:20:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21723, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21720, "mutability": "mutable", "name": "token", "nameLocation": "26576:5:53", "nodeType": "VariableDeclaration", "scope": 21842, "src": "26569:12:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}, "typeName": {"id": 21719, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21718, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 38094, "src": "26569:6:53"}, "referencedDeclaration": 38094, "src": "26569:6:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 21722, "mutability": "mutable", "name": "amountIn", "nameLocation": "26591:8:53", "nodeType": "VariableDeclaration", "scope": 21842, "src": "26583:16:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21721, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26583:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26568:32:53"}, "returnParameters": {"id": 21726, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21725, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21842, "src": "26624:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21724, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26624:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26623:9:53"}, "scope": 22260, "src": "26539:808:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21860, "nodeType": "Block", "src": "27676:97:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21854, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "27728:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21855, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "27728:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21856, "name": "imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20081, "src": "27745:20:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27728:37:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21851, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21845, "src": "27704:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21850, "name": "_hopLpToLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22036, "src": "27693:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21852, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27693:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21853, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "27693:34:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21858, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27693:73:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21849, "id": 21859, "nodeType": "Return", "src": "27686:80:53"}]}, "documentation": {"id": 21843, "nodeType": "StructuredDocumentation", "src": "27353:240:53", "text": " @notice Calculates the minimum LP to accept when depositing underlying into Curve Pool.\n @param _hopLpAmount Amount of Hop LP that is being deposited into Curve Pool.\n @return The minimum LP balance to accept."}, "id": 21861, "implemented": true, "kind": "function", "modifiers": [], "name": "_minLpAccepted", "nameLocation": "27607:14:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21846, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21845, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "27630:12:53", "nodeType": "VariableDeclaration", "scope": 21861, "src": "27622:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21844, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27622:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27621:22:53"}, "returnParameters": {"id": 21849, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21848, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21861, "src": "27667:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21847, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27667:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27666:9:53"}, "scope": 22260, "src": "27598:175:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21879, "nodeType": "Block", "src": "28114:98:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21873, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "28166:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "28166:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 21875, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20083, "src": "28183:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "28166:38:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21870, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21864, "src": "28142:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21869, "name": "_hopLpToLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22036, "src": "28131:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28131:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "28131:34:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21877, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28131:74:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21868, "id": 21878, "nodeType": "Return", "src": "28124:81:53"}]}, "documentation": {"id": 21862, "nodeType": "StructuredDocumentation", "src": "27779:254:53", "text": " @notice Calculates the maximum LP to accept burning when withdrawing amount from Curve Pool.\n @param _hopLpAmount Amount of Hop LP that is being widthdrawn from Curve Pool.\n @return The maximum LP balance to accept burning."}, "id": 21880, "implemented": true, "kind": "function", "modifiers": [], "name": "_maxLpBurned", "nameLocation": "28047:12:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21865, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21864, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "28068:12:53", "nodeType": "VariableDeclaration", "scope": 21880, "src": "28060:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21863, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28060:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28059:22:53"}, "returnParameters": {"id": 21868, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21867, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21880, "src": "28105:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21866, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28105:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28104:9:53"}, "scope": 22260, "src": "28038:174:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21898, "nodeType": "Block", "src": "28570:95:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21892, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "28619:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21893, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "28619:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21894, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20083, "src": "28636:21:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "28619:38:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21889, "name": "_lpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21883, "src": "28598:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21888, "name": "_lpToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22015, "src": "28587:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28587:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21891, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "28587:31:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21896, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28587:71:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21887, "id": 21897, "nodeType": "Return", "src": "28580:78:53"}]}, "documentation": {"id": 21881, "nodeType": "StructuredDocumentation", "src": "28218:257:53", "text": " @notice Calculates the minimum Hop LP to accept when burning LP tokens to withdraw from Curve Pool.\n @param _lpAmount Amount of LP tokens being burned to withdraw from Curve Pool.\n @return The mininum Hop LP balance to accept."}, "id": 21899, "implemented": true, "kind": "function", "modifiers": [], "name": "_minHopLpAcceptedFromWithdraw", "nameLocation": "28489:29:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21884, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21883, "mutability": "mutable", "name": "_lpAmount", "nameLocation": "28527:9:53", "nodeType": "VariableDeclaration", "scope": 21899, "src": "28519:17:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21882, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28519:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28518:19:53"}, "returnParameters": {"id": 21887, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21886, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21899, "src": "28561:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21885, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28561:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28560:9:53"}, "scope": 22260, "src": "28480:185:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21917, "nodeType": "Block", "src": "29066:155:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21914, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21911, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "29160:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "29160:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21913, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20085, "src": "29177:23:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29160:40:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21908, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21902, "src": "29114:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21907, "name": "_underlyingToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21975, "src": "29095:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21909, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29095:37:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21910, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "29095:47:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29095:119:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21906, "id": 21916, "nodeType": "Return", "src": "29076:138:53"}]}, "documentation": {"id": 21900, "nodeType": "StructuredDocumentation", "src": "28671:265:53", "text": " @notice Calculates the minimum Hop LP to accept when depositing underlying into Curve Hop Pool.\n @param _underlyingAmount Amount of underlying that is being deposited into Curve Hop Pool.\n @return The minimum Hop LP balance to accept."}, "id": 21918, "implemented": true, "kind": "function", "modifiers": [], "name": "_minHopLpAcceptedFromDeposit", "nameLocation": "28950:28:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21903, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21902, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "28987:17:53", "nodeType": "VariableDeclaration", "scope": 21918, "src": "28979:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21901, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28979:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28978:27:53"}, "returnParameters": {"id": 21906, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21905, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21918, "src": "29053:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29053:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29052:9:53"}, "scope": 22260, "src": "28941:280:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21936, "nodeType": "Block", "src": "29595:156:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21933, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21930, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "29689:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21931, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "29689:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 21932, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20087, "src": "29706:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29689:41:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21927, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21921, "src": "29643:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21926, "name": "_underlyingToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21975, "src": "29624:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21928, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29624:37:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "29624:47:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21934, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29624:120:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21925, "id": 21935, "nodeType": "Return", "src": "29605:139:53"}]}, "documentation": {"id": 21919, "nodeType": "StructuredDocumentation", "src": "29227:279:53", "text": " @notice Calculates the maximum Hop LP to accept burning when withdrawing amount from Curve Hop Pool.\n @param _underlyingAmount Amount of underlying that is being widthdrawn from Curve Hop Pool.\n @return The maximum Hop LP balance to accept burning."}, "id": 21937, "implemented": true, "kind": "function", "modifiers": [], "name": "_maxHopLpBurned", "nameLocation": "29520:15:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21922, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21921, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "29544:17:53", "nodeType": "VariableDeclaration", "scope": 21937, "src": "29536:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21920, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29536:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29535:27:53"}, "returnParameters": {"id": 21925, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21924, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21937, "src": "29586:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21923, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29586:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29585:9:53"}, "scope": 22260, "src": "29511:240:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21955, "nodeType": "Block", "src": "30132:121:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21952, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21949, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39748, "src": "30204:10:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$39748_$", "typeString": "type(library ScaledMath)"}}, "id": 21950, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 39669, "src": "30204:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 21951, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20087, "src": "30221:24:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30204:41:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 21946, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21940, "src": "30180:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21945, "name": "_hopLpToUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21994, "src": "30161:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 21947, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30161:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21948, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "30161:42:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21953, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30161:85:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21944, "id": 21954, "nodeType": "Return", "src": "30142:104:53"}]}, "documentation": {"id": 21938, "nodeType": "StructuredDocumentation", "src": "29757:284:53", "text": " @notice Calculates the minimum underlying to accept when burning Hop LP tokens to withdraw from Curve Hop Pool.\n @param _hopLpAmount Amount of Hop LP tokens being burned to withdraw from Curve Hop Pool.\n @return The mininum underlying balance to accept."}, "id": 21956, "implemented": true, "kind": "function", "modifiers": [], "name": "_minUnderlyingAccepted", "nameLocation": "30055:22:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21941, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21940, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "30086:12:53", "nodeType": "VariableDeclaration", "scope": 21956, "src": "30078:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30078:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30077:22:53"}, "returnParameters": {"id": 21944, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21943, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21956, "src": "30123:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21942, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30123:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30122:9:53"}, "scope": 22260, "src": "30046:207:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21974, "nodeType": "Block", "src": "30703:107:53", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21969, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "30770:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 21970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "30770:30:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 21971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30770:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21964, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21959, "src": "30721:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 21965, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20066, "src": "30741:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30721:37:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 21967, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "30720:39:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 39705, "src": "30720:49:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21972, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30720:83:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21963, "id": 21973, "nodeType": "Return", "src": "30713:90:53"}]}, "documentation": {"id": 21957, "nodeType": "StructuredDocumentation", "src": "30259:352:53", "text": " @notice Converts an amount of underlying into their estimated Hop LP value.\n @dev Uses get_virtual_price which is less suceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _underlyingAmount Amount of underlying to convert.\n @return The estimated value in the Hop LP."}, "id": 21975, "implemented": true, "kind": "function", "modifiers": [], "name": "_underlyingToHopLp", "nameLocation": "30625:18:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21960, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21959, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "30652:17:53", "nodeType": "VariableDeclaration", "scope": 21975, "src": "30644:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21958, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30644:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30643:27:53"}, "returnParameters": {"id": 21963, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21962, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21975, "src": "30694:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21961, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30694:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30693:9:53"}, "scope": 22260, "src": "30616:194:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 21993, "nodeType": "Block", "src": "31250:102:53", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21988, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "31312:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 21989, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "31312:30:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 21990, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31312:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21985, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21983, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21978, "src": "31268:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 21984, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20066, "src": "31283:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31268:32:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 21986, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "31267:34:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "31267:44:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21991, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31267:78:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21982, "id": 21992, "nodeType": "Return", "src": "31260:85:53"}]}, "documentation": {"id": 21976, "nodeType": "StructuredDocumentation", "src": "30816:347:53", "text": " @notice Converts an amount of Hop LP into their estimated underlying value.\n @dev Uses get_virtual_price which is less suceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _hopLpAmount Amount of Hop LP to convert.\n @return The estimated value in the underlying."}, "id": 21994, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpToUnderlying", "nameLocation": "31177:18:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21979, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21978, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "31204:12:53", "nodeType": "VariableDeclaration", "scope": 21994, "src": "31196:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21977, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31196:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31195:22:53"}, "returnParameters": {"id": 21982, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21981, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21994, "src": "31241:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21980, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31241:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31240:9:53"}, "scope": 22260, "src": "31168:184:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 22014, "nodeType": "Block", "src": "31770:160:53", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22009, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "31877:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22010, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "31877:30:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31877:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22004, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "31819:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22005, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "31819:27:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22006, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31819:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22002, "name": "_lpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21997, "src": "31799:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "31799:19:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22007, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31799:50:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22008, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 39705, "src": "31799:60:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22012, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31799:124:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 22001, "id": 22013, "nodeType": "Return", "src": "31780:143:53"}]}, "documentation": {"id": 21995, "nodeType": "StructuredDocumentation", "src": "31358:336:53", "text": " @notice Converts an amount of LP into their estimated Hop LP value.\n @dev Uses get_virtual_price which is less suceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _lpAmount Amount of underlying to convert.\n @return The estimated value in the Hop LP."}, "id": 22015, "implemented": true, "kind": "function", "modifiers": [], "name": "_lpToHopLp", "nameLocation": "31708:10:53", "nodeType": "FunctionDefinition", "parameters": {"id": 21998, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21997, "mutability": "mutable", "name": "_lpAmount", "nameLocation": "31727:9:53", "nodeType": "VariableDeclaration", "scope": 22015, "src": "31719:17:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21996, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31719:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31718:19:53"}, "returnParameters": {"id": 22001, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22000, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 22015, "src": "31761:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31761:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31760:9:53"}, "scope": 22260, "src": "31699:231:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 22035, "nodeType": "Block", "src": "32346:163:53", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22030, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "32459:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22031, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "32459:27:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32459:29:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22025, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "32398:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 38377, "src": "32398:30:53", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22027, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32398:32:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22023, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22018, "src": "32375:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22024, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 39687, "src": "32375:22:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32375:56:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22029, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 39705, "src": "32375:66:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32375:127:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 22022, "id": 22034, "nodeType": "Return", "src": "32356:146:53"}]}, "documentation": {"id": 22016, "nodeType": "StructuredDocumentation", "src": "31936:331:53", "text": " @notice Converts an amount of Hop LP into their estimated LP value.\n @dev Uses get_virtual_price which is less suceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _hopLpAmount Amount of Hop LP to convert.\n @return The estimated value in the LP."}, "id": 22036, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpToLp", "nameLocation": "32281:10:53", "nodeType": "FunctionDefinition", "parameters": {"id": 22019, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22018, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "32300:12:53", "nodeType": "VariableDeclaration", "scope": 22036, "src": "32292:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22017, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32292:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "32291:22:53"}, "returnParameters": {"id": 22022, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22021, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 22036, "src": "32337:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22020, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32337:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "32336:9:53"}, "scope": 22260, "src": "32272:237:53", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 22144, "nodeType": "Block", "src": "32680:978:53", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22043, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "32698:3:53", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "32698:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 22045, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "32711:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "32698:14:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 22047, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "32714:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 22048, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_VALUE", "nodeType": "MemberAccess", "referencedDeclaration": 38768, "src": "32714:19:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 22042, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32690:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32690:44:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22050, "nodeType": "ExpressionStatement", "src": "32690:44:53"}, {"expression": {"arguments": [{"id": 22053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "32752:11:53", "subExpression": {"id": 22052, "name": "isShutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20098, "src": "32753:10:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 22054, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39003, "src": "32765:5:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$39003_$", "typeString": "type(library Error)"}}, "id": 22055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "STRATEGY_SHUT_DOWN", "nodeType": "MemberAccess", "referencedDeclaration": 38948, "src": "32765:24:53", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 22051, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32744:7:53", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22056, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32744:46:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22057, "nodeType": "ExpressionStatement", "src": "32744:46:53"}, {"assignments": [22059], "declarations": [{"constant": false, "id": 22059, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "32851:17:53", "nodeType": "VariableDeclaration", "scope": 22144, "src": "32843:25:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22058, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32843:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22062, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22060, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "32871:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22061, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32871:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "32843:48:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22063, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22059, "src": "32905:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 22064, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "32925:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "32905:21:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22089, "nodeType": "IfStatement", "src": "32901:240:53", "trueBody": {"id": 22088, "nodeType": "Block", "src": "32928:213:53", "statements": [{"assignments": [22071], "declarations": [{"constant": false, "id": 22071, "mutability": "mutable", "name": "hopAmounts", "nameLocation": "32960:10:53", "nodeType": "VariableDeclaration", "scope": 22088, "src": "32942:28:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3]"}, "typeName": {"baseType": {"id": 22069, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32942:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22070, "length": {"hexValue": "33", "id": 22068, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "32950:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "nodeType": "ArrayTypeName", "src": "32942:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr", "typeString": "uint256[3]"}}, "visibility": "internal"}], "id": 22072, "nodeType": "VariableDeclarationStatement", "src": "32942:28:53"}, {"expression": {"id": 22077, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 22073, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22071, "src": "32984:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, "id": 22075, "indexExpression": {"id": 22074, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20064, "src": "32995:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "32984:25:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 22076, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22059, "src": "33012:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "32984:45:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22078, "nodeType": "ExpressionStatement", "src": "32984:45:53"}, {"expression": {"arguments": [{"id": 22082, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22071, "src": "33070:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, {"arguments": [{"id": 22084, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22059, "src": "33111:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22083, "name": "_minHopLpAcceptedFromDeposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21918, "src": "33082:28:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 22085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33082:47:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22079, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20059, "src": "33043:12:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22081, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add_liquidity", "nodeType": "MemberAccess", "referencedDeclaration": 38386, "src": "33043:26:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[3] memory,uint256) external"}}, "id": 22086, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33043:87:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22087, "nodeType": "ExpressionStatement", "src": "33043:87:53"}]}}, {"assignments": [22091], "declarations": [{"constant": false, "id": 22091, "mutability": "mutable", "name": "hopLpBalance", "nameLocation": "33197:12:53", "nodeType": "VariableDeclaration", "scope": 22144, "src": "33189:20:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22090, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33189:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22094, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22092, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21686, "src": "33212:13:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22093, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33212:15:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "33189:38:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22095, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22091, "src": "33241:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 22096, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33256:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "33241:16:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22121, "nodeType": "IfStatement", "src": "33237:196:53", "trueBody": {"id": 22120, "nodeType": "Block", "src": "33259:174:53", "statements": [{"assignments": [22103], "declarations": [{"constant": false, "id": 22103, "mutability": "mutable", "name": "amounts", "nameLocation": "33291:7:53", "nodeType": "VariableDeclaration", "scope": 22120, "src": "33273:25:53", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 22101, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33273:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22102, "length": {"hexValue": "32", "id": 22100, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33281:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "33273:10:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 22104, "nodeType": "VariableDeclarationStatement", "src": "33273:25:53"}, {"expression": {"id": 22109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 22105, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22103, "src": "33312:7:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 22107, "indexExpression": {"id": 22106, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20073, "src": "33320:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "33312:19:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 22108, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22091, "src": "33334:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "33312:34:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22110, "nodeType": "ExpressionStatement", "src": "33312:34:53"}, {"expression": {"arguments": [{"id": 22114, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22103, "src": "33384:7:53", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"arguments": [{"id": 22116, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22091, "src": "33408:12:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22115, "name": "_minLpAccepted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21861, "src": "33393:14:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 22117, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33393:28:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22111, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "33360:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add_liquidity", "nodeType": "MemberAccess", "referencedDeclaration": 38395, "src": "33360:23:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[2] memory,uint256) external"}}, "id": 22118, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33360:62:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22119, "nodeType": "ExpressionStatement", "src": "33360:62:53"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 22122, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21701, "src": "33493:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22123, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33493:12:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 22124, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33509:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "33493:17:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22128, "nodeType": "IfStatement", "src": "33489:35:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 22126, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "33519:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 22041, "id": 22127, "nodeType": "Return", "src": "33512:12:53"}}, {"condition": {"id": 22134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "33538:37:53", "subExpression": {"arguments": [{"id": 22131, "name": "convexPid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20071, "src": "33559:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 22132, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "33570:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 22129, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20006, "src": "33539:8:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$43894", "typeString": "contract IBooster"}}, "id": 22130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "depositAll", "nodeType": "MemberAccess", "referencedDeclaration": 43893, "src": "33539:19:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 22133, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33539:36:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22137, "nodeType": "IfStatement", "src": "33534:55:53", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 22135, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "33584:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 22041, "id": 22136, "nodeType": "Return", "src": "33577:12:53"}}, {"eventCall": {"arguments": [{"id": 22139, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22059, "src": "33612:17:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22138, "name": "Deposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20110, "src": "33604:7:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 22140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33604:26:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22141, "nodeType": "EmitStatement", "src": "33599:31:53"}, {"expression": {"hexValue": "74727565", "id": 22142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "33647:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 22041, "id": 22143, "nodeType": "Return", "src": "33640:11:53"}]}, "documentation": {"id": 22037, "nodeType": "StructuredDocumentation", "src": "32515:117:53", "text": " @dev Deposit all available underlying into Convex pool.\n @return True if successful deposit."}, "id": 22145, "implemented": true, "kind": "function", "modifiers": [], "name": "_deposit", "nameLocation": "32646:8:53", "nodeType": "FunctionDefinition", "parameters": {"id": 22038, "nodeType": "ParameterList", "parameters": [], "src": "32654:2:53"}, "returnParameters": {"id": 22041, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22040, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 22145, "src": "32674:4:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 22039, "name": "bool", "nodeType": "ElementaryTypeName", "src": "32674:4:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "32673:6:53"}, "scope": 22260, "src": "32637:1021:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 22192, "nodeType": "Block", "src": "33788:536:53", "statements": [{"assignments": [22150], "declarations": [{"constant": false, "id": 22150, "mutability": "mutable", "name": "stakedBalance", "nameLocation": "33860:13:53", "nodeType": "VariableDeclaration", "scope": 22192, "src": "33852:21:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33852:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22153, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22151, "name": "_stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21716, "src": "33876:14:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33876:16:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "33852:40:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22154, "name": "stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22150, "src": "33906:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 22155, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33922:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "33906:17:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22165, "nodeType": "IfStatement", "src": "33902:95:53", "trueBody": {"id": 22164, "nodeType": "Block", "src": "33925:72:53", "statements": [{"expression": {"arguments": [{"id": 22160, "name": "stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22150, "src": "33965:13:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 22161, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "33980:5:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 22157, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "33939:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 22159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "withdrawAndUnwrap", "nodeType": "MemberAccess", "referencedDeclaration": 38672, "src": "33939:25:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 22162, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33939:47:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22163, "nodeType": "ExpressionStatement", "src": "33939:47:53"}]}}, {"assignments": [22167], "declarations": [{"constant": false, "id": 22167, "mutability": "mutable", "name": "lpBalance", "nameLocation": "34061:9:53", "nodeType": "VariableDeclaration", "scope": 22192, "src": "34053:17:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22166, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34053:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22170, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22168, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21701, "src": "34073:10:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22169, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34073:12:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "34053:32:53"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22171, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22167, "src": "34099:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 22172, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34111:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "34099:13:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22191, "nodeType": "IfStatement", "src": "34095:223:53", "trueBody": {"id": 22190, "nodeType": "Block", "src": "34114:204:53", "statements": [{"expression": {"arguments": [{"id": 22177, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22167, "src": "34181:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 22182, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20073, "src": "34223:10:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22181, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34215:7:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 22180, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "34215:7:53", "typeDescriptions": {}}}, "id": 22183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34215:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 22179, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34208:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_int128_$", "typeString": "type(int128)"}, "typeName": {"id": 22178, "name": "int128", "nodeType": "ElementaryTypeName", "src": "34208:6:53", "typeDescriptions": {}}}, "id": 22184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34208:27:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, {"arguments": [{"id": 22186, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22167, "src": "34283:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22185, "name": "_minHopLpAcceptedFromWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21899, "src": "34253:29:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 22187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34253:40:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int128", "typeString": "int128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22174, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20069, "src": "34128:9:53", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwap_$38503", "typeString": "contract ICurveSwap"}}, "id": 22176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_one_coin", "nodeType": "MemberAccess", "referencedDeclaration": 38502, "src": "34128:35:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int128_$_t_uint256_$returns$__$", "typeString": "function (uint256,int128,uint256) external"}}, "id": 22188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34128:179:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22189, "nodeType": "ExpressionStatement", "src": "34128:179:53"}]}}]}, "documentation": {"id": 22146, "nodeType": "StructuredDocumentation", "src": "33664:80:53", "text": " @dev Withdraw all underlying and convert to the Hop LP Token."}, "id": 22193, "implemented": true, "kind": "function", "modifiers": [], "name": "_withdrawAllToHopLp", "nameLocation": "33758:19:53", "nodeType": "FunctionDefinition", "parameters": {"id": 22147, "nodeType": "ParameterList", "parameters": [], "src": "33777:2:53"}, "returnParameters": {"id": 22148, "nodeType": "ParameterList", "parameters": [], "src": "33788:0:53"}, "scope": 22260, "src": "33749:575:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 22258, "nodeType": "Block", "src": "34376:700:53", "statements": [{"assignments": [22199], "declarations": [{"constant": false, "id": 22199, "mutability": "mutable", "name": "initialBalance", "nameLocation": "34394:14:53", "nodeType": "VariableDeclaration", "scope": 22258, "src": "34386:22:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22198, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34386:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22202, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22200, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "34411:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34411:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "34386:45:53"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22203, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20079, "src": "34474:7:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$38714", "typeString": "contract IRewardStaking"}}, "id": 22205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getReward", "nodeType": "MemberAccess", "referencedDeclaration": 38682, "src": "34474:17:53", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$__$", "typeString": "function () external"}}, "id": 22206, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34474:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22207, "nodeType": "ExpressionStatement", "src": "34474:19:53"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 22208, "name": "_sendCommunityReserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21656, "src": "34550:26:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 22209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34550:28:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22210, "nodeType": "ExpressionStatement", "src": "34550:28:53"}, {"expression": {"arguments": [{"id": 22212, "name": "_CVX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "34634:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 22211, "name": "_swapAllForWeth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21377, "src": "34618:15:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$returns$__$", "typeString": "function (contract IERC20)"}}, "id": 22213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34618:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22214, "nodeType": "ExpressionStatement", "src": "34618:21:53"}, {"expression": {"arguments": [{"id": 22216, "name": "_CRV", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "34695:4:53", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 22215, "name": "_swapAllForWeth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21377, "src": "34679:15:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$returns$__$", "typeString": "function (contract IERC20)"}}, "id": 22217, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34679:21:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22218, "nodeType": "ExpressionStatement", "src": "34679:21:53"}, {"body": {"id": 22240, "nodeType": "Block", "src": "34803:69:53", "statements": [{"expression": {"arguments": [{"arguments": [{"arguments": [{"id": 22235, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22220, "src": "34857:1:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22233, "name": "_rewardTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "34840:13:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 22234, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 41434, "src": "34840:16:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$41311_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$41311_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 22236, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34840:19:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 22232, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38094, "src": "34833:6:53", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$38094_$", "typeString": "type(contract IERC20)"}}, "id": 22237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34833:27:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$38094", "typeString": "contract IERC20"}], "id": 22231, "name": "_swapAllForWeth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21377, "src": "34817:15:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$38094_$returns$__$", "typeString": "function (contract IERC20)"}}, "id": 22238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34817:44:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22239, "nodeType": "ExpressionStatement", "src": "34817:44:53"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22223, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22220, "src": "34770:1:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 22224, "name": "_rewardTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "34774:13:53", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$41311_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 22225, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 41407, "src": "34774:20:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$41311_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$41311_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 22226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34774:22:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "34770:26:53", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22241, "initializationExpression": {"assignments": [22220], "declarations": [{"constant": false, "id": 22220, "mutability": "mutable", "name": "i", "nameLocation": "34763:1:53", "nodeType": "VariableDeclaration", "scope": 22241, "src": "34755:9:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22219, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34755:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22222, "initialValue": {"hexValue": "30", "id": 22221, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34767:1:53", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "34755:13:53"}, "loopExpression": {"expression": {"id": 22229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "34798:3:53", "subExpression": {"id": 22228, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22220, "src": "34798:1:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22230, "nodeType": "ExpressionStatement", "src": "34798:3:53"}, "nodeType": "ForStatement", "src": "34750:122:53"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 22242, "name": "_swapWethForUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21571, "src": "34918:22:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 22243, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34918:24:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22244, "nodeType": "ExpressionStatement", "src": "34918:24:53"}, {"assignments": [22246], "declarations": [{"constant": false, "id": 22246, "mutability": "mutable", "name": "harvested", "nameLocation": "34961:9:53", "nodeType": "VariableDeclaration", "scope": 22258, "src": "34953:17:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34953:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22251, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 22247, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21671, "src": "34973:18:53", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 22248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34973:20:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 22249, "name": "initialBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22199, "src": "34996:14:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "34973:37:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "34953:57:53"}, {"eventCall": {"arguments": [{"id": 22253, "name": "harvested", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "35033:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22252, "name": "Harvest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20122, "src": "35025:7:53", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 22254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35025:18:53", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22255, "nodeType": "EmitStatement", "src": "35020:23:53"}, {"expression": {"id": 22256, "name": "harvested", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "35060:9:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 22197, "id": 22257, "nodeType": "Return", "src": "35053:16:53"}]}, "id": 22259, "implemented": true, "kind": "function", "modifiers": [], "name": "_harvest", "nameLocation": "34339:8:53", "nodeType": "FunctionDefinition", "parameters": {"id": 22194, "nodeType": "ParameterList", "parameters": [], "src": "34347:2:53"}, "returnParameters": {"id": 22197, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22196, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 22259, "src": "34367:7:53", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22195, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34367:7:53", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "34366:9:53"}, "scope": 22260, "src": "34330:746:53", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 22261, "src": "1507:33571:53", "usedErrors": []}], "src": "45:35034:53"}, "bytecode": "", "bytecodeSha1": "8d68f22380b0c5db81671aea527d126396401215", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.9+commit.e5eed63a"}, "contractName": "BkdTriHopCvx", "coverageMap": {"branches": {"100": {"SlippageTolerance.setSlippageTolerance": {"225": [887, 923, true], "226": [976, 1003, true]}}, "106": {}, "109": {}, "111": {}, "112": {}, "115": {}, "117": {}, "120": {}, "121": {}, "128": {}, "131": {}, "134": {}, "146": {}, "148": {}, "149": {}, "150": {}, "155": {}, "160": {}, "161": {}, "162": {}, "167": {}, "168": {}, "169": {}, "17": {}, "19": {"SafeERC20._callOptionalReturn": {"223": [3735, 3756, false], "224": [3819, 3849, true]}}, "20": {"Address.functionCallWithValue": {"215": [5145, 5175, true]}, "Address.verifyCallResult": {"216": [7735, 7742, false], "217": [7876, 7897, false]}}, "25": {"EnumerableSet._remove": {"221": [2506, 2521, false], "222": [2988, 3014, false]}}, "33": {}, "34": {"Authorization._roleManager": {"218": [665, 717, true]}}, "53": {"BkdTriHopCvx._deposit": {"200": [32698, 32712, true], "201": [32752, 32763, true], "202": [32905, 32926, false], "203": [33241, 33257, false], "204": [33539, 33575, false]}, "BkdTriHopCvx._sendCommunityReserveShare": {"207": [24730, 24761, false], "208": [24853, 24882, false], "209": [24967, 24982, false], "210": [25254, 25283, false], "211": [25368, 25383, false]}, "BkdTriHopCvx._swapForWeth": {"213": [22862, 22873, false], "214": [22926, 22957, false]}, "BkdTriHopCvx._swapWethForUnderlying": {"212": [23984, 24000, false]}, "BkdTriHopCvx._underlyingAmountOut": {"205": [26647, 26660, false], "206": [26715, 26728, false]}, "BkdTriHopCvx._withdrawAllToHopLp": {"198": [33906, 33923, false], "199": [34099, 34112, false]}, "BkdTriHopCvx.addRewardToken": {"177": [15767, 15789, false], "178": [15809, 15837, false], "179": [15857, 15879, false], "180": [15899, 15922, true]}, "BkdTriHopCvx.changeConvexPool": {"192": [18596, 18606, true]}, "BkdTriHopCvx.harvestable": {"194": [19195, 19210, false]}, "BkdTriHopCvx.removeRewardToken": {"184": [16569, 16596, false]}, "BkdTriHopCvx.setCrvCommunityReserveShare": {"187": [11724, 11767, true]}, "BkdTriHopCvx.setCvxCommunityReserveShare": {"195": [12408, 12451, true]}, "BkdTriHopCvx.setStrategist": {"193": [15195, 15219, true]}, "BkdTriHopCvx.shutdown": {"196": [6451, 6470, true], "197": [10711, 10721, false]}, "BkdTriHopCvx.swapDex": {"185": [17132, 17165, true], "186": [17219, 17243, true]}, "BkdTriHopCvx.withdraw": {"181": [9075, 9086, false], "182": [9225, 9252, false], "183": [9845, 9895, false]}, "BkdTriHopCvx.withdrawAll": {"188": [20444, 20463, true], "189": [20467, 20519, true], "190": [20783, 20799, false], "191": [21126, 21148, false]}}, "96": {"CvxMintAmount.getCvxMintAmount": {"219": [844, 872, false], "220": [1266, 1291, false]}}}, "statements": {"100": {"SlippageTolerance.setSlippageTolerance": {"3": [879, 958], "4": [968, 1038], "5": [1048, 1086], "6": [1096, 1141], "7": [1151, 1162]}}, "106": {}, "109": {}, "111": {}, "112": {}, "115": {}, "117": {}, "120": {}, "121": {}, "128": {}, "131": {}, "134": {}, "146": {}, "148": {}, "149": {}, "150": {}, "155": {}, "160": {}, "161": {"AddressProviderHelpers.getOracleProvider": {"176": [1553, 1638]}, "AddressProviderHelpers.getRoleManager": {"89": [2038, 2117]}}, "162": {}, "167": {}, "168": {}, "169": {"ScaledMath.scaledDiv": {"168": [955, 985]}, "ScaledMath.scaledMul": {"126": [751, 781]}}, "17": {}, "19": {"SafeERC20._callOptionalReturn": {"137": [3811, 3896]}, "SafeERC20.safeApprove": {"90": [1746, 1909], "91": [1919, 2009]}, "SafeERC20.safeTransfer": {"96": [813, 899]}}, "20": {"Address.functionCall": {"92": [4018, 4077]}, "Address.functionCallWithValue": {"138": [5137, 5218], "140": [5228, 5288], "141": [5382, 5440]}, "Address.isContract": {"139": [1458, 1488]}, "Address.verifyCallResult": {"169": [7758, 7775], "170": [8202, 8222]}}, "25": {"EnumerableSet._add": {"142": [1818, 1841], "143": [1976, 2016], "144": [2030, 2041], "145": [2072, 2084]}, "EnumerableSet._at": {"175": [4481, 4506]}, "EnumerableSet._contains": {"10": [3827, 3858]}, "EnumerableSet._length": {"159": [4021, 4046]}, "EnumerableSet._remove": {"148": [3176, 3214], "149": [3288, 3324], "150": [3460, 3477], "151": [3545, 3571], "152": [3586, 3597], "153": [3628, 3640]}, "EnumerableSet.add": {"93": [7698, 7755]}, "EnumerableSet.at": {"160": [8963, 9019]}, "EnumerableSet.contains": {"9": [8263, 8325]}, "EnumerableSet.length": {"158": [8495, 8521]}, "EnumerableSet.remove": {"101": [8019, 8079]}}, "33": {"Authorization._roleManager": {"0": [374, 394]}}, "34": {"AuthorizationBase.roleManager": {"2": [1475, 1496]}}, "53": {"BkdTriHopCvx._deposit": {"113": [32690, 32734], "114": [32744, 32790], "115": [32984, 33029], "116": [33043, 33130], "117": [33312, 33346], "118": [33360, 33422], "119": [33512, 33524], "120": [33577, 33589], "121": [33599, 33630], "122": [33640, 33651]}, "BkdTriHopCvx._harvest": {"102": [34474, 34493], "103": [34550, 34578], "104": [34618, 34639], "105": [34679, 34700], "106": [34817, 34861], "107": [34798, 34801], "108": [34918, 34942], "109": [35020, 35043]}, "BkdTriHopCvx._hopLpBalance": {"98": [25900, 25937]}, "BkdTriHopCvx._hopLpToLp": {"147": [32356, 32502]}, "BkdTriHopCvx._hopLpToUnderlying": {"125": [31260, 31345]}, "BkdTriHopCvx._lpBalance": {"100": [26069, 26103]}, "BkdTriHopCvx._lpToHopLp": {"124": [31780, 31923]}, "BkdTriHopCvx._maxHopLpBurned": {"97": [29605, 29744]}, "BkdTriHopCvx._maxLpBurned": {"99": [28124, 28205]}, "BkdTriHopCvx._minHopLpAcceptedFromDeposit": {"166": [29076, 29214]}, "BkdTriHopCvx._minHopLpAcceptedFromWithdraw": {"165": [28580, 28658]}, "BkdTriHopCvx._minLpAccepted": {"167": [27686, 27766]}, "BkdTriHopCvx._minUnderlyingAccepted": {"112": [30142, 30246]}, "BkdTriHopCvx._sendCommunityReserveShare": {"154": [24763, 24770], "155": [25002, 25146], "156": [25403, 25547]}, "BkdTriHopCvx._setDex": {"94": [22289, 22310]}, "BkdTriHopCvx._stakedBalance": {"123": [26272, 26311]}, "BkdTriHopCvx._swapAllForWeth": {"157": [22567, 22601]}, "BkdTriHopCvx._swapForWeth": {"171": [22973, 23277], "172": [23400, 23424], "173": [23434, 23458], "174": [23468, 23780]}, "BkdTriHopCvx._swapWethForUnderlying": {"161": [24002, 24009], "162": [24068, 24092], "163": [24102, 24131], "164": [24141, 24493]}, "BkdTriHopCvx._underlyingAmountOut": {"127": [26662, 26670], "128": [26789, 26812], "129": [26826, 26850], "130": [26864, 26894], "131": [26908, 27116], "132": [27136, 27159], "133": [27169, 27193], "134": [27203, 27227], "135": [27237, 27266], "136": [27276, 27340]}, "BkdTriHopCvx._underlyingBalance": {"95": [25719, 25761]}, "BkdTriHopCvx._underlyingToHopLp": {"146": [30713, 30803]}, "BkdTriHopCvx._withdrawAllToHopLp": {"110": [33939, 33986], "111": [34128, 34307]}, "BkdTriHopCvx.addRewardToken": {"8": [15746, 15972], "11": [16017, 16029], "12": [16039, 16063], "13": [16073, 16099], "14": [16109, 16158], "15": [16168, 16233], "16": [16243, 16269]}, "BkdTriHopCvx.balance": {"70": [21896, 22031]}, "BkdTriHopCvx.changeConvexPool": {"56": [17960, 17970], "57": [17980, 18001], "58": [18011, 18033], "59": [18043, 18067], "60": [18158, 18174], "61": [18184, 18218], "62": [18302, 18336], "63": [18346, 18386], "64": [18396, 18452], "65": [18462, 18507], "66": [18517, 18578], "67": [18588, 18629]}, "BkdTriHopCvx.deposit": {"76": [20089, 20106]}, "BkdTriHopCvx.harvest": {"34": [21591, 21608]}, "BkdTriHopCvx.harvestable": {"77": [19212, 19220], "78": [19230, 19556]}, "BkdTriHopCvx.name": {"1": [18821, 18842]}, "BkdTriHopCvx.removeRewardToken": {"32": [16598, 16610], "33": [16620, 16649]}, "BkdTriHopCvx.setCommunityReserve": {"71": [11230, 11266], "72": [11276, 11319]}, "BkdTriHopCvx.setCrvCommunityReserveShare": {"43": [11716, 11790], "44": [11800, 11872], "45": [11882, 11934], "46": [11944, 12003]}, "BkdTriHopCvx.setCvxCommunityReserveShare": {"81": [12400, 12474], "82": [12484, 12556], "83": [12566, 12618], "84": [12628, 12687]}, "BkdTriHopCvx.setHopImbalanceToleranceIn": {"54": [14195, 14245], "55": [14255, 14312]}, "BkdTriHopCvx.setHopImbalanceToleranceOut": {"68": [14762, 14814], "69": [14824, 14883]}, "BkdTriHopCvx.setImbalanceToleranceIn": {"41": [13109, 13153], "42": [13163, 13214]}, "BkdTriHopCvx.setImbalanceToleranceOut": {"79": [13643, 13689], "80": [13699, 13752]}, "BkdTriHopCvx.setStrategist": {"73": [15187, 15247], "74": [15257, 15281], "75": [15291, 15322]}, "BkdTriHopCvx.shutdown": {"85": [10723, 10735], "86": [10745, 10762], "87": [10772, 10787], "88": [10797, 10808]}, "BkdTriHopCvx.swapDex": {"35": [17124, 17184], "36": [17277, 17299], "37": [17309, 17354], "38": [17364, 17425], "39": [17435, 17471], "40": [17481, 17492]}, "BkdTriHopCvx.withdraw": {"17": [9088, 9100], "18": [9268, 9306], "19": [9320, 9341], "20": [9355, 9366], "21": [9897, 9909], "22": [10008, 10049], "23": [10059, 10117], "24": [10223, 10275], "25": [10285, 10352], "26": [10402, 10440], "27": [10450, 10471], "28": [10481, 10492]}, "BkdTriHopCvx.withdrawAll": {"47": [20423, 20568], "48": [20649, 20670], "49": [20815, 20999], "50": [21150, 21158], "51": [21168, 21217], "52": [21227, 21262], "53": [21272, 21296]}}, "96": {"CvxMintAmount.getCvxMintAmount": {"29": [874, 882], "30": [1293, 1318], "31": [1328, 1344]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Address", "AddressProviderHelpers", "AddressProviderKeys", "Authorization", "AuthorizationBase", "CvxMintAmount", "OpenZeppelin/openzeppelin-contracts@4.5.0/EnumerableSet", "Error", "IAddressProvider", "IBooster", "IController", "ICurveRegistry", "ICurveSwap", "ICurveSwapEth", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "IERC20Full", "IGasBank", "IInflationManager", "ILiquidityPool", "IOracleProvider", "IRewardStaking", "IRoleManager", "IStrategy", "IVault", "IVaultReserve", "Roles", "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20", "ScaledMath", "SlippageTolerance", "UniswapRouter02"], "deployedBytecode": "", "deployedSourceMap": "1507:33571:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:106:34;;;;;;;;;;-1:-1:-1;381:13:33;1397:106:34;;;-1:-1:-1;;;;;200:32:171;;;182:51;;170:2;155:18;1397:106:34;;;;;;;;18748:101:53;;;;;;;;;;-1:-1:-1;18821:21:53;;;;;;;;;;;-1:-1:-1;;;18821:21:53;;;;18748:101;;;;18821:21;18748:101;:::i;744:425:100:-;;;;;;;;;;-1:-1:-1;744:425:100;;;;;:::i;:::-;;:::i;:::-;;;1245:14:171;;1238:22;1220:41;;1208:2;1193:18;744:425:100;1080:187:171;3828:36:53;;;;;;;;;;;;;;;;;;;1418:25:171;;;1406:2;1391:18;3828:36:53;1272:177:171;15658:639:53;;;;;;;;;;-1:-1:-1;15658:639:53;;;;;:::i;:::-;;:::i;4444:34::-;;;;;;;;;;-1:-1:-1;4444:34:53;;;;-1:-1:-1;;;;;4444:34:53;;;3404:27;;;;;;;;;;-1:-1:-1;3404:27:53;;;;-1:-1:-1;;;;;3404:27:53;;;3090:40;;;;;;;;;;;;;;;8984:1515;;;;;;;;;;-1:-1:-1;8984:1515:53;;;;;:::i;:::-;;:::i;3306:42::-;;;;;;;;;;;;;;;3590:16;;;;;;;;;;-1:-1:-1;3590:16:53;;;;-1:-1:-1;;;;;3590:16:53;;;528:823:96;;;;;;;;;;-1:-1:-1;528:823:96;;;;;:::i;:::-;;:::i;16473:204:53:-;;;;;;;;;;-1:-1:-1;16473:204:53;;;;;:::i;:::-;;:::i;3166:29::-;;;;;;;;;;;;;;;21518:97;;;;;;;;;;;;;:::i;16989:510::-;;;;;;;;;;-1:-1:-1;16989:510:53;;;;;:::i;:::-;;:::i;12968:274::-;;;;;;;;;;-1:-1:-1;12968:274:53;;;;;:::i;:::-;;:::i;3718:35::-;;;;;;;;;;;;;;;;19629:94;;;;;;;;;;-1:-1:-1;19688:4:53;19629:94;;4176:31;;;;;;;;;;-1:-1:-1;4176:31:53;;;;-1:-1:-1;;;;;4176:31:53;;;3228:38;;;;;;;;;;;;;;;3027:34;;;;;;;;;;;;;;;11567:464;;;;;;;;;;-1:-1:-1;11567:464:53;;;;;:::i;:::-;;:::i;3525:25::-;;;;;;;;;;;;;;;;20356:947;;;;;;;;;;;;;:::i;3451:24::-;;;;;;;;;;;;;;;;14048:292;;;;;;;;;;-1:-1:-1;14048:292:53;;;;;:::i;:::-;;:::i;17859:777::-;;;;;;;;;;-1:-1:-1;17859:777:53;;;;;:::i;:::-;;:::i;:::-;;4598:51;;;;;;;;;;-1:-1:-1;4598:51:53;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4598:51:53;;;4270:39;;;;;;;;;;;;;;;;3635:29;;;;;;;;;;-1:-1:-1;3635:29:53;;;;-1:-1:-1;;;;;3635:29:53;;;14613:298;;;;;;;;;;-1:-1:-1;14613:298:53;;;;;:::i;:::-;;:::i;21828:210::-;;;;;;;;;;;;;:::i;3940:38::-;;;;;;;;;;;;;;;;4519:22;;;;;;;;;;-1:-1:-1;4519:22:53;;;;-1:-1:-1;;;4519:22:53;;;;;;11125:222;;;;;;;;;;-1:-1:-1;11125:222:53;;;;;:::i;:::-;;:::i;15109:241::-;;;;;;;;;;-1:-1:-1;15109:241:53;;;;;:::i;:::-;;:::i;234:32:100:-;;;;;;;;;;;;;;;;20011:102:53;;;:::i;19057:506::-;;;;;;;;;;;;;:::i;13500:280::-;;;;;;;;;;-1:-1:-1;13500:280:53;;;;;:::i;:::-;;:::i;12251:464::-;;;;;;;;;;-1:-1:-1;12251:464:53;;;;;:::i;:::-;;:::i;2976:30::-;;;;;;;;;;;;;;;10634:181;;;;;;;;;;;;;:::i;4057:39::-;;;;;;;;;;;;;;;;4357;;;;;;;;;;;;;;;;1482:14:34;1475:21;;1397:106;:::o;744:425:100:-;859:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;925:32:100::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;573:4:169::1;887:36:100::0;::::1;;879:79;;;;-1:-1:-1::0;;;879:79:100::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1005:32:100::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;997:6:::1;976:27:::0;::::1;968:70;;;;-1:-1:-1::0;;;968:70:100::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1048:17:100::1;:38:::0;;;1101:40:::1;::::0;1418:25:171;;;1101:40:100::1;::::0;1406:2:171;1391:18;1101:40:100::1;;;;;;;;-1:-1:-1::0;1158:4:100::1;755:1:34;744:425:100::0;;;:::o;15658:639:53:-;15730:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;15767:22:53;::::1;2173:42;15767:22;::::0;::::1;::::0;:70:::1;;;15826:10;-1:-1:-1::0;;;;;15809:28:53::1;:5;-1:-1:-1::0;;;;;15809:28:53::1;;;15767:70;:112;;;;-1:-1:-1::0;;;;;;15857:22:53;::::1;2365:42;15857:22;;15767:112;:155;;;;-1:-1:-1::0;;;;;;15899:23:53;::::1;2269:42;15899:23;;15767:155;15936:26;;;;;;;;;;;;;-1:-1:-1::0;;;15936:26:53::1;;::::0;15746:226:::1;;;;;-1:-1:-1::0;;;15746:226:53::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;8300:23:25;;8247:4;3834:19;;;:12;:19;;;;;;:24;15982:47:53::1;;-1:-1:-1::0;16024:5:53::1;744:425:100::0;;;:::o;15982:47:53:-:1;16039:24;:13;16057:5:::0;16039:17:::1;:24::i;:::-;;16073:26;16081:5;2492:42;16073:7;:26::i;:::-;16109:49;-1:-1:-1::0;;;;;16109:25:53;::::1;2492:42;16156:1;16109:25;:49::i;:::-;16168:65;-1:-1:-1::0;;;;;16168:25:53;::::1;2492:42;-1:-1:-1::0;;16168:25:53::1;:65::i;:::-;16248:21;::::0;-1:-1:-1;;;;;200:32:171;;182:51;;16248:21:53::1;::::0;170:2:171;155:18;16248:21:53::1;14:225:171::0;8984:1515:53;6472:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6472:25:53;;;;9055:4;;6451:10;-1:-1:-1;;;;;6465:5:53;6451:19;;6443:55;;;;-1:-1:-1;;;6443:55:53;;;;;;;;:::i;:::-;-1:-1:-1;9075:11:53;9071:29:::1;;-1:-1:-1::0;9095:5:53::1;744:425:100::0;;;:::o;9071:29:53:-:1;9163:25;9191:20;:18;:20::i;:::-;9163:48;;9246:6;9225:17;:27;9221:156;;9268:38;-1:-1:-1::0;;;;;9268:10:53::1;:23;9292:5;9299:6:::0;9268:23:::1;:38::i;:::-;9325:16;::::0;1418:25:171;;;9325:16:53::1;::::0;1406:2:171;1391:18;9325:16:53::1;;;;;;;-1:-1:-1::0;9362:4:53::1;::::0;744:425:100;-1:-1:-1;;744:425:100:o;9221:156:53:-:1;9442:32;9477:26;9486:17:::0;9477:6;:26:::1;:::i;:::-;9442:61;;9513:22;9538:41;9554:24;9538:15;:41::i;:::-;9513:66;;9589:27;9636:15;:13;:15::i;:::-;9619:32;::::0;:14;:32:::1;:::i;:::-;9589:62;;9661:19;9683:33;9696:19;9683:12;:33::i;:::-;9661:55;;9726:24;9767:12;:10;:12::i;:::-;9753:26;::::0;:11;:26:::1;:::i;:::-;9845:7;::::0;:50:::1;::::0;-1:-1:-1;;;9845:50:53;;::::1;::::0;::::1;4305:25:171::0;;;9845:7:53::1;4346:18:171::0;;;4339:50;9726:53:53;;-1:-1:-1;;;;;;9845:7:53::1;::::0;:25:::1;::::0;4278:18:171;;9845:50:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9840:69;;-1:-1:-1::0;9904:5:53::1;::::0;744:425:100;-1:-1:-1;;;;;;;744:425:100:o;9840:69:53:-:1;9973:25;;:::i;:::-;10030:19;10008:7;10016:10;;10008:19;;;;;;;:::i;:::-;;;;:41:::0;10059:9:::1;::::0;:58:::1;::::0;-1:-1:-1;;;10059:58:53;;-1:-1:-1;;;;;10059:9:53;;::::1;::::0;:36:::1;::::0;:58:::1;::::0;10096:7;;10105:11;;10059:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10185:28;;:::i;:::-;10251:24;10223:10;10234:13;10223:25;;;;;;;:::i;:::-;;;;:52:::0;10285:67:::1;::::0;-1:-1:-1;;;10285:67:53;;-1:-1:-1;;;;;10285:12:53::1;:39;::::0;::::1;::::0;:67:::1;::::0;10325:10;;10337:14;;10285:67:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;10402:38:53::1;::::0;-1:-1:-1;;;;;;;10402:10:53::1;:23;::::0;-1:-1:-1;10426:5:53::1;10433:6:::0;10402:23:::1;:38::i;:::-;10455:16;::::0;1418:25:171;;;10455:16:53::1;::::0;1406:2:171;1391:18;10455:16:53::1;;;;;;;-1:-1:-1::0;10488:4:53::1;::::0;8984:1515;-1:-1:-1;;;;;;;;;8984:1515:53:o;528:823:96:-;594:7;646:22;464:42;-1:-1:-1;;;;;671:22:96;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;646:49;-1:-1:-1;734:20:96;757:28;204:13;646:49;757:28;:::i;:::-;734:51;;296:4;844:12;:28;840:42;;-1:-1:-1;881:1:96;;528:823;-1:-1:-1;;;528:823:96:o;840:42::-;924:17;944:27;959:12;296:4;944:27;:::i;:::-;924:47;-1:-1:-1;1071:17:96;296:4;1092:21;924:47;1092:9;:21;:::i;:::-;1091:38;;;;:::i;:::-;1071:58;-1:-1:-1;1200:21:96;1224:28;1238:14;361:16;1224:28;:::i;:::-;1200:52;;1278:13;1266:9;:25;1262:56;;;1305:13;1293:25;;1262:56;-1:-1:-1;1335:9:96;528:823;-1:-1:-1;;;;;528:823:96:o;16473:204:53:-;16548:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;16569:27:53::1;:13;16590:5:::0;16569:20:::1;:27::i;:::-;16564:46;;-1:-1:-1::0;16605:5:53::1;744:425:100::0;;;:::o;16564:46:53:-:1;16625:24;::::0;-1:-1:-1;;;;;200:32:171;;182:51;;16625:24:53::1;::::0;170:2:171;155:18;16625:24:53::1;14:225:171::0;21518:97:53;6472:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6472:25:53;;;;21572:7;;6451:10;-1:-1:-1;;;;;6465:5:53;6451:19;;6443:55;;;;-1:-1:-1;;;6443:55:53;;;;;;;;:::i;:::-;;21598:10:::1;:8;:10::i;16989:510::-:0;17054:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;17099:15:53;;::::1;17070:26;17099:15:::0;;;:8:::1;:15;::::0;;;;;;;;;17167:16;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;17099:15;;::::1;::::0;17132:33;17124:60:::1;;;;-1:-1:-1::0;;;17124:60:53::1;;;;;;;;:::i;:::-;-1:-1:-1::0;17194:22:53::1;-1:-1:-1::0;;;;;17219:24:53;::::1;2492:42;17219:24;:48;;2492:42;17219:48;;;2640:42;17219:48;17194:73;;17277:22;17285:5;17292:6;17277:7;:22::i;:::-;17309:45;-1:-1:-1::0;;;;;17309:25:53;::::1;17343:6:::0;17352:1:::1;17309:25;:45::i;:::-;17364:61;-1:-1:-1::0;;;;;17364:25:53;::::1;17398:6:::0;-1:-1:-1;;17364:25:53::1;:61::i;:::-;17440:31;::::0;;-1:-1:-1;;;;;6487:15:171;;;6469:34;;6539:15;;6534:2;6519:18;;6512:43;17440:31:53::1;::::0;6404:18:171;17440:31:53::1;;;;;;;-1:-1:-1::0;17488:4:53::1;::::0;16989:510;-1:-1:-1;;;16989:510:53:o;12968:274::-;13089:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;13109:20:53::1;:44:::0;;;13168:46:::1;::::0;1418:25:171;;;13168:46:53::1;::::0;1406:2:171;1391:18;13168:46:53::1;1272:177:171::0;11567:464:53;11696:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;11769:20:53::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;11769:20:53::1;::::0;::::1;::::0;573:4:169::1;11724:43:53::0;::::1;;11716:74;;;;-1:-1:-1::0;;;11716:74:53::1;;;;;;;;:::i;:::-;-1:-1:-1::0;11808:16:53::1;::::0;-1:-1:-1;;;;;11808:16:53::1;11800:72;;;::::0;-1:-1:-1;;;11800:72:53;;6768:2:171;11800:72:53::1;::::0;::::1;6750:21:171::0;6807:2;6787:18;;;6780:30;6846:31;6826:18;;;6819:59;6895:18;;11800:72:53::1;6566:353:171::0;11800:72:53::1;11882:24;:52:::0;;;11949:54:::1;::::0;1418:25:171;;;11949:54:53::1;::::0;1406:2:171;1391:18;11949:54:53::1;1272:177:171::0;20356:947:53;20404:7;20444:10;-1:-1:-1;;;;;20458:5:53;20444:19;;;:75;;-1:-1:-1;381:13:33;20467:52:53;;-1:-1:-1;;;20467:52:53;;-1:-1:-1;;;20467:52:53;;;3394:25:171;20508:10:53;3435:18:171;;;3428:60;-1:-1:-1;;;;;20467:22:53;;;;;;;3367:18:171;;20467:52:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20533:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;20533:25:53;;;20423:145;;;;;-1:-1:-1;;;20423:145:53;;;;;;;;:::i;:::-;;20649:21;:19;:21::i;:::-;20731:20;20754:15;:13;:15::i;:::-;20731:38;-1:-1:-1;20783:16:53;;20779:231;;20815:12;-1:-1:-1;;;;;20815:38:53;;20871:12;20916:13;20949:36;20972:12;20949:22;:36::i;:::-;20815:184;;-1:-1:-1;;;;;;20815:184:53;;;;;;;;;;7124:25:171;;;;7196:2;7185:22;;;;7165:18;;;7158:50;7224:18;;;7217:34;7097:18;;20815:184:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20779:231;21064:25;21092:20;:18;:20::i;:::-;21064:48;-1:-1:-1;21126:22:53;21122:36;;21157:1;21150:8;;;;20356:947;:::o;21122:36::-;21168:49;-1:-1:-1;;;;;21168:10:53;:23;21192:5;21199:17;21168:23;:49::i;:::-;21232:30;;1418:25:171;;;21232:30:53;;1406:2:171;1391:18;21232:30:53;;;;;;;;21279:17;20356:947;-1:-1:-1;;20356:947:53:o;14048:292::-;14175:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;14195:23:53::1;:50:::0;;;14260:52:::1;::::0;1418:25:171;;;14260:52:53::1;::::0;1406:2:171;1391:18;14260:52:53::1;1272:177:171::0;17859:777:53;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;;17960:10:53::1;:8;:10::i;:::-;;17980:21;:19;:21::i;:::-;18011:9;:22:::0;;;18043:10:::1;:24:::0;;;18119:29:::1;::::0;-1:-1:-1;;;18119:29:53;;::::1;::::0;::::1;1418:25:171::0;;;-1:-1:-1;;;;1908:42:53::1;::::0;18119:17:::1;::::0;1391:18:171;;18119:29:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;18158:2:53::1;:16:::0;;-1:-1:-1;;;;;;18158:16:53;;::::1;-1:-1:-1::0;;;;;18158:16:53;;::::1;::::0;;::::1;::::0;;18184:7:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;;18249:43:::1;::::0;-1:-1:-1;;;18249:43:53;;;;::::1;182:51:171::0;18158:16:53;;-1:-1:-1;18184:34:53;-1:-1:-1;;;2058:42:53::1;::::0;-1:-1:-1;18249:38:53::1;::::0;-1:-1:-1;155:18:171;;18249:43:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18302:9;:34:::0;;-1:-1:-1;;;;;;18302:34:53::1;-1:-1:-1::0;;;;;18302:34:53;;::::1;::::0;;;::::1;::::0;;;;;-1:-1:-1;18346:40:53::1;::::0;18353:5:::1;18346:25;18302:34:::0;-1:-1:-1;18346:25:53::1;:40::i;:::-;18396:56;-1:-1:-1::0;;;;;18403:5:53::1;18396:25;18422:10:::0;-1:-1:-1;;18396:25:53::1;:56::i;:::-;18462:45;-1:-1:-1::0;;;;;18462:23:53;::::1;1908:42;18505:1;18462:23;:45::i;:::-;18517:61;-1:-1:-1::0;;;;;18517:23:53;::::1;1908:42;-1:-1:-1::0;;18517:23:53::1;:61::i;:::-;18596:10;:8;:10::i;:::-;18608:20;;;;;;;;;;;;;-1:-1:-1::0;;;18608:20:53::1;;::::0;18588:41:::1;;;;;-1:-1:-1::0;;;18588:41:53::1;;;;;;;;:::i;:::-;;17950:686;;;17859:777:::0;;:::o;14613:298::-;14742:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;14762:24:53::1;:52:::0;;;14829:54:::1;::::0;1418:25:171;;;14829:54:53::1;::::0;1406:2:171;1391:18;14829:54:53::1;1272:177:171::0;21828:210:53;21877:7;21950:81;22015:15;:13;:15::i;:::-;21969:43;21999:12;:10;:12::i;:::-;21980:16;:14;:16::i;:::-;:31;;;;:::i;:::-;21969:10;:43::i;:::-;:61;;;;:::i;:::-;21950:18;:81::i;:::-;21915:20;:18;:20::i;:::-;:116;;;;:::i;11125:222::-;11214:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;11230:16:53::1;:36:::0;;-1:-1:-1;;;;;;11230:36:53::1;-1:-1:-1::0;;;;;11230:36:53;::::1;::::0;;::::1;::::0;;;11281:38:::1;::::0;182:51:171;;;11281:38:53::1;::::0;170:2:171;155:18;11281:38:53::1;14:225:171::0;15109:241:53;15209:10;;15221:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15221:25:53;;;;-1:-1:-1;;;;;;;15209:10:53;15195;:24;15187:60;;;;-1:-1:-1;;;15187:60:53;;;;;;;;:::i;:::-;-1:-1:-1;15257:10:53;:24;;-1:-1:-1;;;;;;15257:24:53;-1:-1:-1;;;;;15257:24:53;;;;;;;;15296:26;;182:51:171;;;15296:26:53;;170:2:171;155:18;15296:26:53;14:225:171;20011:102:53;6472:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6472:25:53;;;;20073:4;;6451:10;-1:-1:-1;;;;;6465:5:53;6451:19;;6443:55;;;;-1:-1:-1;;;6443:55:53;;;;;;;;:::i;:::-;;20096:10:::1;:8;:10::i;19057:506::-:0;19152:7;;:29;;-1:-1:-1;;;19152:29:53;;19175:4;19152:29;;;182:51:171;19112:7:53;;;;-1:-1:-1;;;;;19152:7:53;;;;:14;;155:18:171;;19152:29:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19131:50;-1:-1:-1;19195:15:53;19191:29;;19219:1;19212:8;;;19057:506;:::o;19191:29::-;19401:155;2173:42;19461:81;19517:24;;573:4:169;19500:41:53;;;;:::i;:::-;19461:28;19478:10;19461:16;:28::i;:::-;:38;;:81::i;:::-;19401:20;:155::i;:::-;19249:137;2365:42;19309:63;19347:24;;573:4:169;19330:41:53;;;;:::i;:::-;19309:10;;:20;:63::i;19249:137::-;:307;;;;:::i;:::-;19230:326;;;19057:506;:::o;13500:280::-;13623:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;13643:21:53::1;:46:::0;;;13704:48:::1;::::0;1418:25:171;;;13704:48:53::1;::::0;1406:2:171;1391:18;13704:48:53::1;1272:177:171::0;12251:464:53;12380:4;381:13:33;665:52:34;;-1:-1:-1;;;665:52:34;;-1:-1:-1;;;665:52:34;;;3394:25:171;706:10:34;3435:18:171;;;3428:60;-1:-1:-1;;;;;665:22:34;;;;;;;3367:18:171;;665:52:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;719:25:34;;;657:88;;;;;-1:-1:-1;;;657:88:34;;;;;;;;:::i;:::-;-1:-1:-1;12453:20:53::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;12453:20:53::1;::::0;::::1;::::0;573:4:169::1;12408:43:53::0;::::1;;12400:74;;;;-1:-1:-1::0;;;12400:74:53::1;;;;;;;;:::i;:::-;-1:-1:-1::0;12492:16:53::1;::::0;-1:-1:-1;;;;;12492:16:53::1;12484:72;;;::::0;-1:-1:-1;;;12484:72:53;;6768:2:171;12484:72:53::1;::::0;::::1;6750:21:171::0;6807:2;6787:18;;;6780:30;6846:31;6826:18;;;6819:59;6895:18;;12484:72:53::1;6566:353:171::0;12484:72:53::1;12566:24;:52:::0;;;12633:54:::1;::::0;1418:25:171;;;12633:54:53::1;::::0;1406:2:171;1391:18;12633:54:53::1;1272:177:171::0;10634:181:53;6472:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6472:25:53;;;;10691:4;;6451:10;-1:-1:-1;;;;;6465:5:53;6451:19;;6443:55;;;;-1:-1:-1;;;6443:55:53;;;;;;;;:::i;:::-;-1:-1:-1;10711:10:53::1;::::0;-1:-1:-1;;;10711:10:53;::::1;;;10707:28;;;-1:-1:-1::0;10730:5:53::1;21518:97:::0;:::o;10707:28::-:1;10745:10;:17:::0;;-1:-1:-1;;;;10745:17:53::1;-1:-1:-1::0;;;10745:17:53::1;::::0;;10777:10:::1;::::0;::::1;::::0;10745:17;;10777:10:::1;-1:-1:-1::0;10804:4:53::1;10634:181:::0;:::o;1940:184:161:-;2058:58;;-1:-1:-1;;;2058:58:161;;-1:-1:-1;;;2058:58:161;;;1418:25:171;2014:12:161;;-1:-1:-1;;;;;2058:19:161;;;;;1391:18:171;;2058:58:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2038:79;1940:184;-1:-1:-1;;1940:184:161:o;1413:603:19:-;1768:10;;;1767:62;;-1:-1:-1;1784:39:19;;-1:-1:-1;;;1784:39:19;;1808:4;1784:39;;;6469:34:171;-1:-1:-1;;;;;6539:15:171;;;6519:18;;;6512:43;1784:15:19;;;;;6404:18:171;;1784:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:19;;8909:2:171;1746:163:19;;;8891:21:171;8948:2;8928:18;;;8921:30;8987:34;8967:18;;;8960:62;-1:-1:-1;;;9038:18:171;;;9031:52;9100:19;;1746:163:19;8707:418:171;1746:163:19;1946:62;;-1:-1:-1;;;;;9322:32:171;;1946:62:19;;;9304:51:171;9371:18;;;9364:34;;;1919:90:19;;1939:5;;-1:-1:-1;;;1969:22:19;9277:18:171;;1946:62:19;;;;-1:-1:-1;;1946:62:19;;;;;;;;;;;;;;-1:-1:-1;;;;;1946:62:19;-1:-1:-1;;;;;;1946:62:19;;;;;;;;;;1919:19;:90::i;:::-;1413:603;;;:::o;3861:223:20:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;7612:150:25:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:25;;7705:4;:50::i;22217:100:53:-;-1:-1:-1;;;;;22289:15:53;;;;;;;:8;:15;;;;;:21;;-1:-1:-1;;;;;;22289:21:53;;;;;;;;22217:100::o;25647:121::-;25726:35;;-1:-1:-1;;;25726:35:53;;25755:4;25726:35;;;182:51:171;25700:7:53;;25726:10;-1:-1:-1;;;;;25726:20:53;;;;155:18:171;;25726:35:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;701:205:19:-;840:58;;-1:-1:-1;;;;;9322:32:171;;840:58:19;;;9304:51:171;9371:18;;;9364:34;;;813:86:19;;833:5;;-1:-1:-1;;;863:23:19;9277:18:171;;840:58:19;9130:274:171;29511:240:53;29586:7;29624:120;29706:24;;573:4:169;29689:41:53;;;;:::i;:::-;29624:37;29643:17;29624:18;:37::i;25833:111::-;25907:30;;-1:-1:-1;;;25907:30:53;;25931:4;25907:30;;;182:51:171;25881:7:53;;25907:5;-1:-1:-1;;;;;25907:15:53;;;;155:18:171;;25907:30:53;14:225:171;28038:174:53;28105:7;28131:74;28183:21;;573:4:169;28166:38:53;;;;:::i;:::-;28131:24;28142:12;28131:10;:24::i;26005:105::-;26076:2;;;:27;;-1:-1:-1;;;26076:27:53;;26097:4;26076:27;;;182:51:171;;;;26050:7:53;;-1:-1:-1;;;;;26076:2:53;;;;:12;;155:18:171;;26076:27:53;14:225:171;7930:156:25;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:25;;8026:7;:53::i;34330:746:53:-;34367:7;34386:22;34411:20;:18;:20::i;:::-;34386:45;;34474:7;;;;;;;;;-1:-1:-1;;;;;34474:7:53;-1:-1:-1;;;;;34474:17:53;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34550:28;:26;:28::i;:::-;34618:21;2173:42;34618:15;:21::i;:::-;34679;2365:42;34679:15;:21::i;:::-;34755:9;34750:122;34774:22;:13;:20;:22::i;:::-;34770:1;:26;34750:122;;;34817:44;34840:19;:13;34857:1;34840:16;:19::i;:::-;34817:15;:44::i;:::-;34798:3;;;;:::i;:::-;;;;34750:122;;;;34918:24;:22;:24::i;:::-;34953:17;34996:14;34973:20;:18;:20::i;:::-;:37;;;;:::i;:::-;34953:57;;35025:18;35033:9;35025:18;;;;1418:25:171;;1406:2;1391:18;;1272:177;33749:575:53;33852:21;33876:16;:14;:16::i;:::-;33852:40;-1:-1:-1;33906:17:53;;33902:95;;33939:7;;:47;;-1:-1:-1;;;33939:47:53;;;;;4305:25:171;;;33939:7:53;4346:18:171;;;4339:50;-1:-1:-1;;;;;33939:7:53;;;;:25;;4278:18:171;;33939:47:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;33902:95;34053:17;34073:12;:10;:12::i;:::-;34053:32;-1:-1:-1;34099:13:53;;34095:223;;34128:9;;34223:10;;-1:-1:-1;;;;;34128:9:53;;;;:35;;34181:9;;34253:40;34181:9;34253:29;:40::i;:::-;34128:179;;-1:-1:-1;;;;;;34128:179:53;;;;;;;;;;7124:25:171;;;;7196:2;7185:22;;;;7165:18;;;7158:50;7224:18;;;7217:34;7097:18;;34128:179:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34095:223;33788:536;;33749:575::o;30046:207::-;30123:7;30161:85;30221:24;;573:4:169;30204:41:53;;;;:::i;:::-;30161:32;30180:12;30161:18;:32::i;32637:1021::-;32714:19;;;;;;;;;;;;-1:-1:-1;;;32714:19:53;;;;32674:4;;32698:9;:14;32690:44;;;;-1:-1:-1;;;32690:44:53;;;;;;;;:::i;:::-;-1:-1:-1;32753:10:53;;32765:24;;;;;;;;;;;;-1:-1:-1;;;32765:24:53;;;;;-1:-1:-1;;;32753:10:53;;;;32752:11;32744:46;;;;-1:-1:-1;;;32744:46:53;;;;;;;;:::i;:::-;;32843:25;32871:20;:18;:20::i;:::-;32843:48;-1:-1:-1;32905:21:53;;32901:240;;32942:28;;:::i;:::-;33012:17;32984:10;32995:13;32984:25;;;;;;;:::i;:::-;;;;:45;-1:-1:-1;;;;;33043:12:53;:26;;33070:10;33082:47;33111:17;33082:28;:47::i;:::-;33043:87;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32928:213;32901:240;33189:20;33212:15;:13;:15::i;:::-;33189:38;-1:-1:-1;33241:16:53;;33237:196;;33273:25;;:::i;:::-;33334:12;33312:7;33320:10;;33312:19;;;;;;;:::i;:::-;;;;:34;33360:9;;-1:-1:-1;;;;;33360:9:53;:23;33384:7;33393:28;33408:12;33393:14;:28::i;:::-;33360:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33259:174;33237:196;33493:12;:10;:12::i;:::-;33489:35;;33519:5;33512:12;;;;32637:1021;:::o;33489:35::-;33559:9;;33539:36;;-1:-1:-1;;;33539:36:53;;;;;4305:25:171;;;;33570:4:53;4346:18:171;;;4339:50;1908:42:53;;33539:19;;4278:18:171;;33539:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33534:55;;33584:5;33577:12;;;;32637:1021;:::o;33534:55::-;33604:26;;1418:25:171;;;33604:26:53;;1406:2:171;1391:18;33604:26:53;;;;;;;33647:4;33640:11;;;;32637:1021;:::o;26204:114::-;26279:7;;:32;;-1:-1:-1;;;26279:32:53;;26305:4;26279:32;;;182:51:171;26253:7:53;;-1:-1:-1;;;;;26279:7:53;;:17;;155:18:171;;26279:32:53;14:225:171;31699:231:53;31761:7;31799:124;31877:12;-1:-1:-1;;;;;31877:30:53;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31819:9;;:29;;;-1:-1:-1;;;31819:29:53;;;;31799:50;;-1:-1:-1;;;;;31819:9:53;;:27;;:29;;;;;;;;;;;;;;:9;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;31799:50::-;:60;;:124::i;31168:184::-;31241:7;31267:78;31312:12;-1:-1:-1;;;;;31312:30:53;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31268;31283:17;31268:12;:32;:::i;668:120:169:-;732:7;466:4;759:5;763:1;759;:5;:::i;:::-;758:23;;;;:::i;26539:808:53:-;26624:7;26647:13;26643:27;;-1:-1:-1;26669:1:53;26662:8;;26643:27;26680:21;-1:-1:-1;;;;;26715:13:53;;2173:42;26715:13;26711:416;;;26796:16;;;26810:1;26796:16;;;;;;;;26765:10;;26796:16;;;;;;;;;;-1:-1:-1;26796:16:53;26789:23;;2269:42;26826:4;26831:1;26826:7;;;;;;;;:::i;:::-;;;;;;:24;-1:-1:-1;;;;;26826:24:53;;;-1:-1:-1;;;;;26826:24:53;;;;;26882:11;26864:4;26869:1;26864:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26864:30:53;;;:7;;;;;;;;;;:30;;;;26931;;;;;;;:8;:30;;;;;;;;26997:72;;-1:-1:-1;;;26997:72:53;;26931:30;26997:72;;;9883:25:171;9924:18;;;9917:34;;;;9967:18;;;9960:34;;;26931:30:53;;;;:44;;2793:42;;26997:26;;9856:18:171;;26997:72:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27091:4;26931:182;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26931:182:53;;;;;;;;;;;;:::i;:::-;27114:1;26931:185;;;;;;;;:::i;:::-;;;;;;;26908:208;;;;;;26711:416;27143:16;;;27157:1;27143:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27143:16:53;27136:23;;27187:5;27169:4;27174:1;27169:7;;;;;;;;:::i;:::-;;;;;;:24;-1:-1:-1;;;;;27169:24:53;;;-1:-1:-1;;;;;27169:24:53;;;;;2269:42;27203:4;27208:1;27203:7;;;;;;;;:::i;:::-;;;;;;:24;-1:-1:-1;;;;;27203:24:53;;;-1:-1:-1;;;;;27203:24:53;;;;;27255:10;27237:4;27242:1;27237:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27237:29:53;;;:7;;;;;;;;;;:29;;;;27283:24;;;;;;;:8;:24;;;;;;;;;:54;;-1:-1:-1;;;27283:54:53;;:24;;;:38;;:54;;27322:8;;27332:4;;27283:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27283:54:53;;;;;;;;;;;;:::i;:::-;27338:1;27283:57;;;;;;;;:::i;:::-;;;;;;;27276:64;;;26539:808;;;;:::o;3207:706:19:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:19;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:19;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:19;;12120:2:171;3811:85:19;;;12102:21:171;12159:2;12139:18;;;12132:30;12198:34;12178:18;;;12171:62;-1:-1:-1;;;12249:18:171;;;12242:40;12299:19;;3811:85:19;11918:406:171;4948:499:20;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:20;;12531:2:171;5137:81:20;;;12513:21:171;12570:2;12550:18;;;12543:30;12609:34;12589:18;;;12582:62;-1:-1:-1;;;12660:18:171;;;12653:36;12706:19;;5137:81:20;12329:402:171;5137:81:20;-1:-1:-1;;;;;1465:19:20;;;5228:60;;;;-1:-1:-1;;;5228:60:20;;12938:2:171;5228:60:20;;;12920:21:171;12977:2;12957:18;;;12950:30;13016:31;12996:18;;;12989:59;13065:18;;5228:60:20;12736:353:171;5228:60:20;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:20;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:20:o;1697:404:25:-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:25;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:25;2072:12;;30616:194:53;30694:7;30720:83;30770:12;-1:-1:-1;;;;;30770:30:53;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30721:37;30741:17;30721;:37;:::i;32272:237::-;32337:7;32375:127;32459:9;;;;;;;;;-1:-1:-1;;;;;32459:9:53;-1:-1:-1;;;;;32459:27:53;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32375:56;32398:12;-1:-1:-1;;;;;32398:30:53;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2269:1388:25;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:25;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;24615:963:53;24700:16;;-1:-1:-1;;;;;24700:16:53;24730:31;24726:44;;24763:7;24615:963::o;24726:44::-;24815:24;;24853:29;;24849:322;;24920:29;;-1:-1:-1;;;24920:29:53;;24943:4;24920:29;;;182:51:171;24898:19:53;;2173:42;;24920:14;;155:18:171;;24920:29:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24898:51;-1:-1:-1;24967:15:53;;24963:198;;25002:144;25041:17;25080:48;:11;25102:25;25080:21;:48::i;:::-;2173:42;;25002:144;:17;:144::i;:::-;24884:287;24849:322;25216:24;;25254:29;;25250:322;;25321:29;;-1:-1:-1;;;25321:29:53;;25344:4;25321:29;;;182:51:171;25299:19:53;;2365:42;;25321:14;;155:18:171;;25321:29:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25299:51;-1:-1:-1;25368:15:53;;25364:198;;25403:144;25442:17;25481:48;:11;25503:25;25481:21;:48::i;:::-;2365:42;;25403:144;:17;:144::i;:::-;25285:287;24662:916;;;24615:963::o;22452:156::-;22527:30;;-1:-1:-1;;;22527:30:53;;22551:4;22527:30;;;182:51:171;22510:14:53;;-1:-1:-1;;;;;22527:15:53;;;;;155:18:171;;22527:30:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22510:47;;22574:27;22587:5;22594:6;22574:12;:27::i;8413:115:25:-;8476:7;8502:19;8510:3;4028:18;;3946:107;8870:156;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;23865:635:53:-;23940:30;;-1:-1:-1;;;23940:30:53;;23964:4;23940:30;;;182:51:171;23918:19:53;;2269:42;;23940:15;;155:18:171;;23940:30:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23918:52;-1:-1:-1;23984:16:53;23980:29;;24002:7;23865:635::o;23980:29::-;24042:16;;;24056:1;24042:16;;;;;;;;24018:21;;24042:16;;;;;;;;;;-1:-1:-1;24042:16:53;24018:40;;2269:42;24068:4;24073:1;24068:7;;;;;;;;:::i;:::-;;;;;;:24;-1:-1:-1;;;;;24068:24:53;;;-1:-1:-1;;;;;24068:24:53;;;;;24120:10;24102:4;24107:1;24102:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24102:29:53;;;:7;;;;;;;;;;:29;;;;24158:10;24141:29;;;;;;:8;:29;;;;;;;24371:17;;24141:29;;;;:54;;24209:11;;24392:17;;24234:155;;:109;;24273:36;;:16;:34;;:36::i;:::-;:69;;-1:-1:-1;;;24273:69:53;;-1:-1:-1;;;;;24330:10:53;200:32:171;;24273:69:53;;;182:51:171;24273:48:53;;;;;;;155:18:171;;24273:69:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24234:11;;:38;:109::i;:155::-;:175;;;;:::i;:::-;24423:4;24449;24468:15;24141:352;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24141:352:53;;;;;;;;;;;;:::i;28480:185::-;28561:7;28587:71;28636:21;;573:4:169;28619:38:53;;;;:::i;:::-;28587:21;28598:9;28587:10;:21::i;28941:280::-;29053:7;29095:119;29177:23;;573:4:169;29160:40:53;;;;:::i;27598:175::-;27667:7;27693:73;27745:20;;573:4:169;27728:37:53;;;;:::i;872:120:169:-;936:7;984:1;963:17;466:4;963:1;:17;:::i;7561:692:20:-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:20;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:20;;;;;;;;:::i;22787:1000:53:-;22862:11;22858:24;;22787:1000;;:::o;22858:24::-;-1:-1:-1;;;;;22926:31:53;;2173:42;22926:31;22922:386;;;2793:42;-1:-1:-1;;;;;22973:28:53;;1802:1;1853;23087:6;23111:152;23245:17;;23111:102;23149:36;:16;-1:-1:-1;;;;;23149:34:53;;:36::i;:::-;:63;;-1:-1:-1;;;23149:63:53;;2173:42;23149:63;;;182:51:171;-1:-1:-1;;;;;23149:48:53;;;;;;;155:18:171;;23149:63:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23111:6;;:37;:102::i;:152::-;22973:304;;-1:-1:-1;;;;;;22973:304:53;;;;;;;;;;14315:25:171;;;;14356:18;;;14349:34;;;;14399:18;;;14392:34;14442:18;;;14435:34;14287:19;;22973:304:53;14084:391:171;22922:386:53;23374:16;;;23388:1;23374:16;;;;;;;;23350:21;;23374:16;;;;;;;;;;-1:-1:-1;23374:16:53;23350:40;;23418:5;23400:4;23405:1;23400:7;;;;;;;;:::i;:::-;;;;;;:24;-1:-1:-1;;;;;23400:24:53;;;-1:-1:-1;;;;;23400:24:53;;;;;2269:42;23434:4;23439:1;23434:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;23434:24:53;;;:7;;;;;;;;;;:24;;;;23468;;;;;;;:8;:24;;;;;;;23678:17;;23468:24;;;;:49;;23531:6;;23551:145;;23678:17;23551:99;;23585:36;;:16;:34;;:36::i;:::-;:64;;-1:-1:-1;;;23585:64:53;;-1:-1:-1;;;;;200:32:171;;;23585:64:53;;;182:51:171;23585:48:53;;;;;;;155:18:171;;23585:64:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23551:6;;:33;:99::i;:145::-;23710:4;23736;23755:15;23468:312;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23468:312:53;;;;;;;;;;;;:::i;4395:118:25:-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;;;:::i;:::-;;;;;;;;;4481:25;;4395:118;;;;:::o;1449:196:161:-;1576:61;;-1:-1:-1;;;1576:61:161;;-1:-1:-1;;;1576:61:161;;;1418:25:171;1526:15:161;;-1:-1:-1;;;;;1576:19:161;;;;;1391:18:171;;1576:61:161;1272:177:171;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;244:258:171:-;316:1;326:113;340:6;337:1;334:13;326:113;;;416:11;;;410:18;397:11;;;390:39;362:2;355:10;326:113;;;457:6;454:1;451:13;448:48;;;-1:-1:-1;;492:1:171;474:16;;467:27;244:258::o;507:383::-;656:2;645:9;638:21;619:4;688:6;682:13;731:6;726:2;715:9;711:18;704:34;747:66;806:6;801:2;790:9;786:18;781:2;773:6;769:15;747:66;:::i;:::-;874:2;853:15;-1:-1:-1;;849:29:171;834:45;;;;881:2;830:54;;507:383;-1:-1:-1;;507:383:171:o;895:180::-;954:6;1007:2;995:9;986:7;982:23;978:32;975:52;;;1023:1;1020;1013:12;975:52;-1:-1:-1;1046:23:171;;895:180;-1:-1:-1;895:180:171:o;1454:131::-;-1:-1:-1;;;;;1529:31:171;;1519:42;;1509:70;;1575:1;1572;1565:12;1509:70;1454:131;:::o;1590:247::-;1649:6;1702:2;1690:9;1681:7;1677:23;1673:32;1670:52;;;1718:1;1715;1708:12;1670:52;1757:9;1744:23;1776:31;1801:5;1776:31;:::i;2502:248::-;2570:6;2578;2631:2;2619:9;2610:7;2606:23;2602:32;2599:52;;;2647:1;2644;2637:12;2599:52;-1:-1:-1;;2670:23:171;;;2740:2;2725:18;;;2712:32;;-1:-1:-1;2502:248:171:o;3499:164::-;3575:13;;3624;;3617:21;3607:32;;3597:60;;3653:1;3650;3643:12;3668:202;3735:6;3788:2;3776:9;3767:7;3763:23;3759:32;3756:52;;;3804:1;3801;3794:12;3756:52;3827:37;3854:9;3827:37;:::i;3875:127::-;3936:10;3931:3;3927:20;3924:1;3917:31;3967:4;3964:1;3957:15;3991:4;3988:1;3981:15;4007:125;4047:4;4075:1;4072;4069:8;4066:34;;;4080:18;;:::i;:::-;-1:-1:-1;4117:9:171;;4007:125::o;4400:127::-;4461:10;4456:3;4452:20;4449:1;4442:31;4492:4;4489:1;4482:15;4516:4;4513:1;4506:15;4532:565;4740:2;4725:18;;4729:9;4820:6;4698:4;4854:194;4868:4;4865:1;4862:11;4854:194;;;4927:13;;4915:26;;4964:4;4988:12;;;;5023:15;;;;4888:1;4881:9;4854:194;;;4858:3;;;5084:6;5079:2;5068:9;5064:18;5057:34;4532:565;;;;;:::o;5102:566::-;5310:3;5295:19;;5299:9;5391:6;5268:4;5425:194;5439:4;5436:1;5433:11;5425:194;;;5498:13;;5486:26;;5535:4;5559:12;;;;5594:15;;;;5459:1;5452:9;5425:194;;;5429:3;;;5655:6;5650:2;5639:9;5635:18;5628:34;5102:566;;;;;:::o;5673:184::-;5743:6;5796:2;5784:9;5775:7;5771:23;5767:32;5764:52;;;5812:1;5809;5802:12;5764:52;-1:-1:-1;5835:16:171;;5673:184;-1:-1:-1;5673:184:171:o;5862:217::-;5902:1;5928;5918:132;;5972:10;5967:3;5963:20;5960:1;5953:31;6007:4;6004:1;5997:15;6035:4;6032:1;6025:15;5918:132;-1:-1:-1;6064:9:171;;5862:217::o;6084:168::-;6124:7;6190:1;6186;6182:6;6178:14;6175:1;6172:21;6167:1;6160:9;6153:17;6149:45;6146:71;;;6197:18;;:::i;:::-;-1:-1:-1;6237:9:171;;6084:168::o;7262:869::-;7374:6;7382;7390;7398;7406;7414;7467:3;7455:9;7446:7;7442:23;7438:33;7435:53;;;7484:1;7481;7474:12;7435:53;7516:9;7510:16;7535:31;7560:5;7535:31;:::i;:::-;7635:2;7620:18;;7614:25;7585:5;;-1:-1:-1;7648:33:171;7614:25;7648:33;:::i;:::-;7752:2;7737:18;;7731:25;7700:7;;-1:-1:-1;7765:33:171;7731:25;7765:33;:::i;:::-;7869:2;7854:18;;7848:25;7817:7;;-1:-1:-1;7882:33:171;7848:25;7882:33;:::i;:::-;7986:3;7971:19;;7965:26;7934:7;;-1:-1:-1;8000:33:171;7965:26;8000:33;:::i;:::-;8052:7;-1:-1:-1;8078:47:171;8120:3;8105:19;;8078:47;:::i;:::-;8068:57;;7262:869;;;;;;;;:::o;8136:251::-;8206:6;8259:2;8247:9;8238:7;8234:23;8230:32;8227:52;;;8275:1;8272;8265:12;8227:52;8307:9;8301:16;8326:31;8351:5;8326:31;:::i;8392:128::-;8432:3;8463:1;8459:6;8456:1;8453:13;8450:39;;;8469:18;;:::i;:::-;-1:-1:-1;8505:9:171;;8392:128::o;9409:135::-;9448:3;-1:-1:-1;;9469:17:171;;9466:43;;;9489:18;;:::i;:::-;-1:-1:-1;9536:1:171;9525:13;;9409:135::o;9549:127::-;9610:10;9605:3;9601:20;9598:1;9591:31;9641:4;9638:1;9631:15;9665:4;9662:1;9655:15;10005:461;10058:3;10096:5;10090:12;10123:6;10118:3;10111:19;10149:4;10178:2;10173:3;10169:12;10162:19;;10215:2;10208:5;10204:14;10236:1;10246:195;10260:6;10257:1;10254:13;10246:195;;;10325:13;;-1:-1:-1;;;;;10321:39:171;10309:52;;10381:12;;;;10416:15;;;;10357:1;10275:9;10246:195;;;-1:-1:-1;10457:3:171;;10005:461;-1:-1:-1;;;;;10005:461:171:o;10471:332::-;10678:6;10667:9;10660:25;10721:2;10716;10705:9;10701:18;10694:30;10641:4;10741:56;10793:2;10782:9;10778:18;10770:6;10741:56;:::i;10808:1105::-;10903:6;10934:2;10977;10965:9;10956:7;10952:23;10948:32;10945:52;;;10993:1;10990;10983:12;10945:52;11026:9;11020:16;11055:18;11096:2;11088:6;11085:14;11082:34;;;11112:1;11109;11102:12;11082:34;11150:6;11139:9;11135:22;11125:32;;11195:7;11188:4;11184:2;11180:13;11176:27;11166:55;;11217:1;11214;11207:12;11166:55;11246:2;11240:9;11268:2;11264;11261:10;11258:36;;;11274:18;;:::i;:::-;11320:2;11317:1;11313:10;11352:2;11346:9;11415:2;11411:7;11406:2;11402;11398:11;11394:25;11386:6;11382:38;11470:6;11458:10;11455:22;11450:2;11438:10;11435:18;11432:46;11429:72;;;11481:18;;:::i;:::-;11517:2;11510:22;11567:18;;;11601:15;;;;-1:-1:-1;11643:11:171;;;11639:20;;;11671:19;;;11668:39;;;11703:1;11700;11693:12;11668:39;11727:11;;;;11747:135;11763:6;11758:3;11755:15;11747:135;;;11829:10;;11817:23;;11780:12;;;;11860;;;;11747:135;;;11901:6;10808:1105;-1:-1:-1;;;;;;;;10808:1105:171:o;13094:274::-;13223:3;13261:6;13255:13;13277:53;13323:6;13318:3;13311:4;13303:6;13299:17;13277:53;:::i;:::-;13346:16;;;;;13094:274;-1:-1:-1;;13094:274:171:o;13373:127::-;13434:10;13429:3;13425:20;13422:1;13415:31;13465:4;13462:1;13455:15;13489:4;13486:1;13479:15;13505:574;13796:6;13785:9;13778:25;13839:6;13834:2;13823:9;13819:18;13812:34;13882:3;13877:2;13866:9;13862:18;13855:31;13759:4;13903:57;13955:3;13944:9;13940:19;13932:6;13903:57;:::i;:::-;-1:-1:-1;;;;;13996:32:171;;;;13991:2;13976:18;;13969:60;-1:-1:-1;14060:3:171;14045:19;14038:35;13895:65;13505:574;-1:-1:-1;;;13505:574:171:o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"addRewardToken(address)": {"details": "These are tokens that are not the main assets of the strategy. For instance, temporary incentives.", "notice": "Add a reward token to list of extra reward tokens.", "params": {"token": "Address of token to add to reward token list."}, "returns": {"_0": "True if successfully added."}}, "balance()": {"details": "This includes idle underlying, idle LP and LP deposited on Convex.", "notice": "Get the total underlying balance of the strategy.", "returns": {"_0": "Underlying balance of strategy."}}, "changeConvexPool(uint256,uint256)": {"details": "First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.", "notice": "Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.", "params": {"convexPid_": "The PID for the new Convex Pool.", "curveIndex_": "The index of the new Convex Pool Token in the new Curve Pool."}}, "deposit()": {"details": "Liquidity is added to Curve Pool then Curve LP tokens are deposited \t\tinto Convex and Convex LP tokens are staked for rewards by default.", "notice": "Deposit all available underlying into Convex pool.", "returns": {"_0": "True if successful deposit."}}, "harvest()": {"details": "Any underlying harvested is not redeposited by this method.", "notice": "Harvests reward tokens and sells these for the underlying.", "returns": {"_0": "Amount of underlying harvested."}}, "harvestable()": {"details": "Includes rewards for CRV & CVX.", "notice": "Amount of rewards that can be harvested in the underlying.", "returns": {"_0": "Estimated amount of underlying available to harvest."}}, "hasPendingFunds()": {"details": "Contract does not stash tokens."}, "name()": {"notice": "Returns the name of the strategy.", "returns": {"_0": "The name of the strategy."}}, "removeRewardToken(address)": {"notice": "Remove a reward token.", "params": {"token": "Address of token to remove from reward token list."}, "returns": {"_0": "True if successfully removed."}}, "setCommunityReserve(address)": {"details": "CRV & CVX will be taxed and allocated to the reserve,      such that Backd can participate in governance.", "notice": "Set the address of the communit reserve.", "params": {"_communityReserve": "Address of the community reserve."}, "returns": {"_0": "True if successfully set."}}, "setCrvCommunityReserveShare(uint256)": {"notice": "Set the share of CRV to send to the Community Reserve.", "params": {"crvCommunityReserveShare_": "New fee charged on CRV rewards for governance."}, "returns": {"_0": "True if successfully set."}}, "setCvxCommunityReserveShare(uint256)": {"notice": "Set the share of CVX to send to the Community Reserve.", "params": {"cvxCommunityReserveShare_": "New fee charged on CVX rewards for governance."}, "returns": {"_0": "True if successfully set."}}, "setHopImbalanceToleranceIn(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set hop imbalance tolerance for Curve Hop Pool deposits.", "params": {"_hopImbalanceToleranceIn": "New hop imbalance tolarance in."}, "returns": {"_0": "True if successfully set."}}, "setHopImbalanceToleranceOut(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set hop imbalance tolerance for Curve Hop Pool withdrawals.", "params": {"_hopImbalanceToleranceOut": "New hop imbalance tolarance out."}, "returns": {"_0": "True if successfully set."}}, "setImbalanceToleranceIn(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set imbalance tolerance for Curve Pool deposits.", "params": {"_imbalanceToleranceIn": "New imbalance tolarance in."}, "returns": {"_0": "True if successfully set."}}, "setImbalanceToleranceOut(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set imbalance tolerance for Curve Pool withdrawals.", "params": {"_imbalanceToleranceOut": "New imbalance tolarance out."}, "returns": {"_0": "True if successfully set."}}, "setSlippageTolerance(uint256)": {"details": "Stored as a multiplier, e.g. 2% would be set as 0.98.", "notice": "Set slippage tolerance for reward token swaps.", "params": {"_slippageTolerance": "New imbalance tolarance out."}, "returns": {"_0": "True if successfully set."}}, "setStrategist(address)": {"details": "Can only be set by current strategist.", "notice": "Set strategist.", "params": {"_strategist": "Address of new strategist."}, "returns": {"_0": "True if successfully set."}}, "shutdown()": {"notice": "Shuts down the strategy, disabling deposits.", "returns": {"_0": "True if reserve was successfully set."}}, "swapDex(address)": {"details": "Only SushiSwap and Uniswap are supported.", "notice": "Set the DEX that should be used for swapping for a specific coin.         If Uniswap is active, it will switch to SushiSwap and vice versa.", "params": {"token": "Address of token for which the DEX should be updated."}}, "withdraw(uint256)": {"details": "This can only be called by the vault.      If the amount is not available, it will be made liquid.", "notice": "Withdraw an amount of underlying to the vault.", "params": {"amount": "Amount of underlying to withdraw."}, "returns": {"_0": "True if successful withdrawal."}}, "withdrawAll()": {"details": "This does not liquidate reward tokens and only considers      idle underlying, idle lp tokens and staked lp tokens.", "notice": "Withdraw all underlying.", "returns": {"_0": "Amount of underlying withdrawn"}}}, "notice": "This is the BkdTriHopCvx strategy, which is designed to be used by a Backd ERC20 Vault. The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool. The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool. The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex. Rewards received on Convex (CVX, CRV), are sold in part for the underlying. A share of earned CVX & CRV are retained on behalf of the Backd community to participate in governance.", "version": 1}, "offset": [1507, 35078], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BDCDAFF GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBF86D690 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE9EB5088 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE9EB5088 EQ PUSH2 0x7CD JUMPI DUP1 PUSH4 0xECF8DB0A EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xFDC0BFCA EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xFF0AF85B EQ PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xC2BDDF31 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xD03153AA EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xDBBD47D4 EQ PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9851BF38 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x9851BF38 EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0x9B61A924 EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xAA6A8CAF EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0xB6ED67A8 EQ PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BDCDAFF EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x86993BEF EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x938511A7 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0x94EF5785 EQ PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3778851E GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x56BE5F71 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x56BE5F71 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x61240EEA EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x621E8FE1 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x69CBB00D EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x70AA1726 EQ PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3778851E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x3D509C97 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x44D32EE9 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x469656A2 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x49CABCDF EQ PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE4A686 GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x218751B2 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x283F3B56 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x3082538F EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x313C06A0 EQ PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x435DA5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x117DA1EE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x1A55820D EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x1C03E6CC EQ PUSH2 0x35C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x84D6C8A8E4D290DEE086ECF PUSH1 0xA3 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0xD4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x49F CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x1383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x163B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x328 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x1762 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x1930 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x1BD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x680 PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x4809 JUMP JUMPDEST PUSH2 0x1CF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x21A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH2 0x21F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x47EC JUMP JUMPDEST PUSH2 0x2330 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x23CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x2446 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x7E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x2560 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x47BB JUMP JUMPDEST PUSH2 0x2687 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x2855 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xB1A2BC2EC500000 DUP4 GT PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x0 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE4A7FD2711237E77309A9A16FF636A748DBF956FD91F6E6DA800D9302F441A79 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0xB70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B EQ DUP1 ISZERO SWAP1 PUSH2 0xBD0 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xBF9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC22 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 EQ ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x125B9D985B1A59081D1BDAD95B881D1BC8185919 PUSH1 0x62 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xC94 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9F PUSH1 0xF DUP4 PUSH2 0x2B22 JUMP JUMPDEST POP PUSH2 0xCBE DUP3 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0xCE7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH1 0x0 NOT PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x851BBB4304BF0768ED98B97E429B5BD1DCC1F194B36CD1650F40293E951AE393 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xDB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP DUP2 PUSH2 0xDC6 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD0 PUSH2 0x2B65 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT PUSH2 0xE69 JUMPI PUSH2 0xE2D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP6 PUSH2 0x2C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP3 DUP6 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE82 DUP3 PUSH2 0x2C30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE8E PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0xE98 SWAP1 DUP4 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA5 DUP3 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEB1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xEBB SWAP1 DUP4 PUSH2 0x486C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61973901 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC32E7202 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH2 0xF53 JUMPI POP PUSH1 0x0 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x4720 JUMP JUMPDEST DUP4 DUP2 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 LT PUSH2 0xF70 JUMPI PUSH2 0xF70 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3103273 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3103273 SWAP1 PUSH2 0xFA7 SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x4899 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xFE1 PUSH2 0x473E JUMP JUMPDEST DUP7 DUP2 PUSH32 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1014 JUMPI PUSH2 0x1014 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x27F6BA83 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9FDAEA0C SWAP1 PUSH2 0x1067 SWAP1 DUP5 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x48D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x10EF SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP PUSH32 0x0 DUP13 PUSH2 0x2C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP11 DUP2 MSTORE PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11BA SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11D2 PUSH10 0x152D02C7E14AF6800000 DUP4 PUSH2 0x4922 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 LT PUSH2 0x11E7 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F5 DUP3 PUSH2 0x3E8 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x1206 DUP4 DUP9 PUSH2 0x4944 JUMP JUMPDEST PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x4922 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1229 DUP6 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1237 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F0 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH2 0x133E PUSH1 0xF DUP4 PUSH2 0x2CFD JUMP JUMPDEST PUSH2 0x134A JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x36BD04094FA067BB9471A8FBDB0A6E8A43424A2566AD3A740C88973FA40A3118 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x13F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH2 0x882 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1485 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A9 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x14EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x1D DUP4 MSTORE PUSH32 0x6E6F2064657820686173206265656E2073657420666F7220746F6B656E000000 SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND SWAP1 DUP2 PUSH2 0x1560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F EQ PUSH2 0x15A1 JUMPI PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH2 0x15B7 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D JUMPDEST SWAP1 POP PUSH2 0x15C3 DUP5 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x15D8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x15EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 PUSH1 0x0 NOT PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCAC2DED52B5E76B519F6013BCD694B2426F57750994E28325AE931943A49EAD2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EA SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x172C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4EDE3E4E9F7997FDA6FF4A12D6C43D5C9E1E2055065CBC15F902F504F72DC8C0 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D756E6974792072657365727665206D75737420626520736574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x1A8542DFFA4956932E66916113E6A123E123956172FBC0E2E59DF92B8A87D8E6 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1A11 JUMPI POP PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A11 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH2 0x1A5C PUSH2 0x2E53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A66 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B2A JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A4D01D2 DUP3 PUSH32 0x0 PUSH2 0x1AC8 DUP6 PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH2 0x2B65 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1B44 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x2C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3D5A341DC6A12221FCF31279CEF3771F8FAD757B2D9261F97605CCC17C257424 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C81 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1CC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE6B4374E594CAC6D717F89735F722A01C53AFFE6A4603ED44E09004666B7A6F3 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA6 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1DE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH2 0x1DF1 PUSH2 0x2D12 JUMP JUMPDEST POP PUSH2 0x1DFA PUSH2 0x2E53 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x1526FE27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 SWAP1 PUSH4 0x1526FE27 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E8E SWAP2 SWAP1 PUSH2 0x4963 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0xBDF475C3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP4 SWAP6 POP SWAP4 POP PUSH1 0x0 SWAP3 PUSH20 0x90E00ACE148CA3B23AC1BC8C240C2A7DD9C2D7F5 SWAP3 POP PUSH4 0xBDF475C3 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4A SWAP2 SWAP1 PUSH2 0x49E5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0x1F9B SWAP1 PUSH32 0x0 AND DUP3 PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x1FD1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 PUSH1 0x0 NOT PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x1FFA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x2024 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 PUSH1 0x0 NOT PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x202C PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x19195C1BDCDA5D0819985A5B1959 PUSH1 0x92 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x2071 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2104 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x216A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x8B8AD8032596EF90599A67881AED48DBA49C88DD982CD479440BFCEE796DCF8B SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DE PUSH2 0x21AD PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x21CF PUSH2 0x21B8 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x21C0 PUSH2 0x32B5 JUMP JUMPDEST PUSH2 0x21CA SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH2 0x32E6 JUMP JUMPDEST PUSH2 0x21D9 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH2 0x3400 JUMP JUMPDEST PUSH2 0x21E6 PUSH2 0x2B65 JUMP JUMPDEST PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x227B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229F SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x22E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17D7BA6682F162782054B119192F8E5B98FE7090B4BEC7A55FC7075D9CD859EE SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x46D58E3FA07BF19B1D27240F0E286B27E9F7C1B0D88933333FE833B60EEC5412 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x243D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH2 0x882 PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH3 0x466131 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x248C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24C4 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x24D3 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2518 PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH2 0x2513 PUSH1 0xB SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2504 SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST PUSH2 0x250D DUP6 PUSH2 0x1132 JUMP JUMPDEST SWAP1 PUSH2 0x34C0 JUMP JUMPDEST PUSH2 0x34DF JUMP JUMPDEST PUSH2 0x2550 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH2 0x2513 PUSH1 0xC SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2549 SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x34C0 JUMP JUMPDEST PUSH2 0x255A SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x2651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB2861FED34A4613F8F25F46553A23408A3364EE9DDC4EF6714F0A81D856E41A7 SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2736 SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x2778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x27C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D756E6974792072657365727665206D75737420626520736574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x2C3C7D70A1DFBFAF74447753B8A73E1323AA10B32B9209742DB563671E14B13C SWAP1 PUSH1 0x20 ADD PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x28C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x28DC JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4426AA1FB73E391071491FCFE21A88B5C38A0A0333A1F6E77161470439704CF8 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH11 0x3937B632A6B0B730B3B2B9 PUSH1 0xA9 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x296F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29A7 SWAP2 SWAP1 PUSH2 0x49E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2A36 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A34 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x2AA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2B04 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x38A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B18 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x397B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3AAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2B04 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C4B SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH2 0x250D DUP5 PUSH2 0x3AFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2CBE SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH2 0x250D DUP5 PUSH2 0x3BBB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3CA2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D1D PUSH2 0x2B65 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2D8F PUSH2 0x3D95 JUMP JUMPDEST PUSH2 0x2DAC PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH2 0x3F31 JUMP JUMPDEST PUSH2 0x2DC9 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x2DD6 PUSH1 0xF PUSH2 0x3FB7 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2E02 JUMPI PUSH2 0x2DF0 PUSH2 0x2DEB PUSH1 0xF DUP4 PUSH2 0x3FC1 JUMP JUMPDEST PUSH2 0x3F31 JUMP JUMPDEST DUP1 PUSH2 0x2DFA DUP2 PUSH2 0x4A1A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DCC JUMP JUMPDEST POP PUSH2 0x2E0B PUSH2 0x3FCD JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2E16 PUSH2 0x2B65 JUMP JUMPDEST PUSH2 0x2E20 SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP PUSH32 0x80F97F878E16410266694F134DDF012F2BE424F54F8B5CAFA107ECCC51D00D58 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1BC4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5D PUSH2 0x32B5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2EEC JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61973901 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC32E7202 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EEA SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x2EF6 PUSH2 0x2CC7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A4D01D2 SWAP1 DUP4 SWAP1 PUSH2 0x2F21 DUP3 PUSH2 0x42CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2071 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2F9E SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST PUSH2 0x250D DUP5 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x696E76616C6964206D73672E76616C7565 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLVALUE ISZERO PUSH2 0x2FF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x29BA3930BA32B3BC9034B99039B43ABA103237BBB7 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x304A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3055 PUSH2 0x2B65 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3065 PUSH2 0x473E JUMP JUMPDEST DUP2 DUP2 PUSH32 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x3098 JUMPI PUSH2 0x3098 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x4515CEF3 DUP3 PUSH2 0x30D6 DUP6 PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F3 SWAP3 SWAP2 SWAP1 PUSH2 0x48D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3131 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x31C7 JUMPI PUSH2 0x3141 PUSH2 0x4720 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 LT PUSH2 0x3156 JUMPI PUSH2 0x3156 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4C7E4D DUP3 PUSH2 0x3176 DUP6 PUSH2 0x430C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3193 SWAP3 SWAP2 SWAP1 PUSH2 0x4899 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x31CF PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x31DC JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x303ACFE7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 SWAP1 PUSH4 0x60759FCE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x326C SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH2 0x3279 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4D6CE1E535DBADE1C23DEFBA91E23B8F791CE5EDC0CC320257A2B364E4E38426 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x337C SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x176F717 PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x33FA SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBB7B8B80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2549 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 PUSH2 0x4327 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x345E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3472 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3496 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST PUSH2 0x250D PUSH32 0x0 DUP6 PUSH2 0x4922 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x34D5 DUP4 DUP6 PUSH2 0x4944 JUMP JUMPDEST PUSH2 0x2B1B SWAP2 SWAP1 PUSH2 0x4922 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x34EE JUMPI POP PUSH1 0x0 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B EQ ISZERO PUSH2 0x370E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH32 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x357D JUMPI PUSH2 0x357D PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x35B1 JUMPI PUSH2 0x35B1 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x556D6E9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH20 0xB576491F1E6E5E62F1D8F26062EE822B40B0E0D4 SWAP1 PUSH4 0x556D6E9F SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3655 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3679 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3697 SWAP3 SWAP2 SWAP1 PUSH2 0x4A8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x36EB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x36FD JUMPI PUSH2 0x36FD PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3743 JUMPI PUSH2 0x3743 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x378B JUMPI PUSH2 0x378B PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x37DF JUMPI PUSH2 0x37DF PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x3832 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4A8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x384A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x385E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3886 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3898 JUMPI PUSH2 0x3898 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38FE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2B04 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x391C SWAP2 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH2 0x2B04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x39DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x3A33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3A4F SWAP2 SWAP1 PUSH2 0x4B66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3A8C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3A91 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3AA1 DUP3 DUP3 DUP7 PUSH2 0x433C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3AF3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x29A7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B91 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST PUSH2 0x33FA PUSH32 0x0 DUP6 PUSH2 0x4944 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C46 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST PUSH2 0x33FA PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x3D8B JUMPI PUSH1 0x0 PUSH2 0x3CC6 PUSH1 0x1 DUP4 PUSH2 0x486C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3CDA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3D3F JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3CFA JUMPI PUSH2 0x3CFA PUSH2 0x4883 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3D1D JUMPI PUSH2 0x3D1D PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x3D50 JUMPI PUSH2 0x3D50 PUSH2 0x4B82 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3DA9 JUMPI POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP1 ISZERO PUSH2 0x3E6B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E37 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3E69 JUMPI PUSH2 0x3E69 DUP4 PUSH2 0x3E4D DUP4 DUP6 PUSH2 0x34C0 JUMP JUMPDEST PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP2 SWAP1 PUSH2 0x2C00 JUMP JUMPDEST POP JUMPDEST PUSH1 0xC SLOAD DUP1 ISZERO PUSH2 0x2B04 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EF9 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3F2B JUMPI PUSH2 0x3F2B DUP5 PUSH2 0x3F0F DUP4 DUP6 PUSH2 0x34C0 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP2 SWAP1 PUSH2 0x2C00 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FAB SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F7F DUP3 DUP3 PUSH2 0x4375 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1B DUP4 DUP4 PUSH2 0x46B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x401A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x402E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4052 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x405C JUMPI POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x40A5 JUMPI PUSH2 0x40A5 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x40F9 JUMPI PUSH2 0x40F9 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x38ED1739 SWAP2 DUP6 SWAP2 PUSH32 0x0 SWAP2 PUSH2 0x424A SWAP2 PUSH2 0x250D SWAP1 PUSH2 0x41A8 SWAP1 PUSH32 0x0 AND PUSH2 0x46E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE5EC9DB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE5EC9DB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x420B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4243 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x4327 JUMP JUMPDEST PUSH2 0x4254 SWAP2 SWAP1 PUSH2 0x4922 JUMP JUMPDEST DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4277 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2B04 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x42E8 SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST PUSH2 0x250D DUP5 PUSH2 0x32E6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C4B SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A7 PUSH1 0x6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x2CBE SWAP2 SWAP1 PUSH2 0x486C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x34D5 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x4944 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x434B JUMPI POP DUP2 PUSH2 0x2B1B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x435B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST DUP1 PUSH2 0x437E JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B EQ ISZERO PUSH2 0x44D0 JUMPI PUSH20 0xB576491F1E6E5E62F1D8F26062EE822B40B0E0D4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B41B908 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH2 0x449A PUSH1 0x0 SLOAD PUSH2 0x250D PUSH2 0x4406 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE5EC9DB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE5EC9DB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x446F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4493 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x34C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4505 JUMPI PUSH2 0x4505 PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x454D JUMPI PUSH2 0x454D PUSH2 0x4883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x38ED1739 SWAP2 DUP6 SWAP2 PUSH2 0x463D SWAP2 SWAP1 PUSH2 0x250D SWAP1 PUSH2 0x45BB SWAP1 PUSH32 0x0 AND PUSH2 0x46E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE5EC9DB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE5EC9DB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4636 SWAP2 SWAP1 PUSH2 0x4909 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x34C0 JUMP JUMPDEST DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4660 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x467A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x468E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3F2B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x46CD JUMPI PUSH2 0x46CD PUSH2 0x4883 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH14 0x37B930B1B632A83937BB34B232B9 PUSH1 0x91 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4777 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x475F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3F2B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x47A7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x475C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x47E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B1B DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x481C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x484D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1B DUP3 PUSH2 0x482B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x487E JUMPI PUSH2 0x487E PUSH2 0x4856 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x48C1 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48A2 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x48F9 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48DA JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x493F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x495E JUMPI PUSH2 0x495E PUSH2 0x4856 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x497C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH2 0x4987 DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH2 0x4998 DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x49A9 DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH2 0x49BA DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x49CB DUP2 PUSH2 0x47D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x49D9 PUSH1 0xA0 DUP9 ADD PUSH2 0x482B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2B1B DUP2 PUSH2 0x47D4 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4A15 JUMPI PUSH2 0x4A15 PUSH2 0x4856 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4A2E JUMPI PUSH2 0x4A2E PUSH2 0x4856 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A84 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4A5F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2B18 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4A4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x4AF9 JUMPI PUSH2 0x4AF9 PUSH2 0x4A35 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x4B1E JUMPI PUSH2 0x4B1E PUSH2 0x4A35 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x4B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x4B5A JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x4B41 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4B78 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x475C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4BB7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4A4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH22 0x6E617574686F72697A65642061636365737300000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x467B4DB15D304DF6317EDAF636F38A2999706F1E5AB95AE3642E PUSH12 0x33A6F33264736F6C63430008 MULMOD STOP CALLER ", "sha1": "2ca16ca923638211a6d74ab62e687d4873148692", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"../../libraries/AddressProviderHelpers.sol\";\nimport \"../../libraries/ScaledMath.sol\";\nimport \"../utils/CvxMintAmount.sol\";\nimport \"../utils/SlippageTolerance.sol\";\nimport \"../../interfaces/IERC20Full.sol\";\nimport \"../../interfaces/IStrategy.sol\";\nimport \"../../interfaces/IAddressProvider.sol\";\nimport \"../../interfaces/vendor/IBooster.sol\";\nimport \"../../interfaces/vendor/ICurveSwap.sol\";\nimport \"../../interfaces/vendor/ICurveSwapEth.sol\";\nimport \"../../interfaces/vendor/IRewardStaking.sol\";\nimport \"../../interfaces/vendor/UniswapRouter02.sol\";\nimport \"../../interfaces/vendor/ICurveRegistry.sol\";\n\n/**\n * This is the BkdTriHopCvx strategy, which is designed to be used by a Backd ERC20 Vault.\n * The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool.\n * The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool.\n * The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex.\n * Rewards received on Convex (CVX, CRV), are sold in part for the underlying.\n * A share of earned CVX & CRV are retained on behalf of the Backd community to participate in governance.\n */\ncontract BkdTriHopCvx is IStrategy, CvxMintAmount, SlippageTolerance {\n    using ScaledMath for uint256;\n    using SafeERC20 for IERC20;\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using AddressProviderHelpers for IAddressProvider;\n\n    uint256 private constant _CURVE_CVX_INDEX = 1;\n    uint256 private constant _CURVE_ETH_INDEX = 0;\n\n    IBooster internal constant _BOOSTER = IBooster(0xF403C135812408BFbE8713b5A23a04b3D48AAE31); // Convex Booster Contract\n    ICurveRegistry internal constant _CURVE_REGISTRY =\n        ICurveRegistry(0x90E00ACe148ca3b23Ac1bC8C240C2a7Dd9c2d7f5); // Curve Registry Contract\n    IERC20 internal constant _CVX = IERC20(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B); // CVX\n    IERC20 internal constant _WETH = IERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // WETH\n    IERC20 internal constant _CRV = IERC20(0xD533a949740bb3306d119CC777fa900bA034cd52); // CRV\n    UniswapRouter02 internal constant _SUSHISWAP =\n        UniswapRouter02(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F); // Sushiswap Router for swaps\n    UniswapRouter02 internal constant _UNISWAP =\n        UniswapRouter02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); // Uniswap Router for swaps\n    ICurveSwapEth internal constant _CVX_ETH_CURVE_POOL =\n        ICurveSwapEth(0xB576491F1E6e5E62f1d8F26062Ee822B40B0E0d4); // CVX/ETH Curve Pool\n\n    IAddressProvider internal immutable _addressProvider; // Address provider used for getting oracle provider\n    address public immutable vault; // Backd Vault\n    IERC20 public immutable underlying; // Strategy Underlying\n    ICurveSwap public immutable curveHopPool; // Curve Pool to use for Hops\n    IERC20 public immutable hopLp; // Curve Hop Pool LP Token\n    uint256 public immutable curveHopIndex; // Underlying index in Curve Pool\n    uint256 public immutable decimalMultiplier; // Used for converting between underlying and LP\n\n    ICurveSwap public curvePool; // Curve Pool\n    uint256 public convexPid; // Index of Convex Pool in Booster Contract\n    uint256 public curveIndex; // Underlying index in Curve Pool\n    IERC20 public lp; // Curve Pool LP Token\n    IRewardStaking public rewards; // Rewards Contract for claiming Convex Rewards\n    uint256 public imbalanceToleranceIn; // Maximum allowed slippage from Curve Pool Imbalance for depositing\n    uint256 public imbalanceToleranceOut; // Maximum allowed slippage from Curve Pool Imbalance for withdrawing\n    uint256 public hopImbalanceToleranceIn; // Maximum allowed slippage from Curve Hop Pool Imbalance for depositing\n    uint256 public hopImbalanceToleranceOut; // Maximum allowed slippage from Curve Hop Pool Imbalance for withdrawing\n    address public communityReserve; // Address for sending CVX & CRV Community Reserve share\n    uint256 public cvxCommunityReserveShare; // Share of CVX sent to Community Reserve\n    uint256 public crvCommunityReserveShare; // Share of CRV sent to Community Reserve\n    address public override strategist; // The strategist for the strategy\n    bool public isShutdown; // If the strategy is shutdown, stops all deposits\n    mapping(address => UniswapRouter02) public tokenDex; // Dex to use for swapping for a given token\n\n    EnumerableSet.AddressSet private _rewardTokens; // List of additional reward tokens when claiming rewards on Convex\n\n    event Deposit(uint256 amount); // Emitted after a successfull deposit\n    event Withdraw(uint256 amount); // Emitted after a successful withdrawal\n    event WithdrawAll(uint256 amount); // Emitted after successfully withdrwaing all\n    event Harvest(uint256 amount); // Emitted after a successful harvest\n    event Shutdown(); // Emitted after a successful shutdown\n    event SetCommunityReserve(address reserve); // Emitted after a succuessful setting of reserve\n    event SetCrvCommunityReserveShare(uint256 value); // Emitted after a succuessful setting of CRV Community Reserve Share\n    event SetCvxCommunityReserveShare(uint256 value); // Emitted after a succuessful setting of CVX Community Reserve Share\n    event SetImbalanceToleranceIn(uint256 value); // Emitted after a succuessful setting of imbalance tolerance in\n    event SetImbalanceToleranceOut(uint256 value); // Emitted after a succuessful setting of imbalance tolerance out\n    event SetHopImbalanceToleranceIn(uint256 value); // Emitted after a succuessful setting of hop imbalance tolerance in\n    event SetHopImbalanceToleranceOut(uint256 value); // Emitted after a succuessful setting of hop imbalance tolerance out\n    event SetStrategist(address strategist); // Emitted after a succuessful setting of strategist\n    event AddRewardToken(address token); // Emitted after successfully adding a new reward token\n    event RemoveRewardToken(address token); // Emitted after successfully removing a reward token\n    event SwapDex(address token, address newDex); // Emitted after successfully swapping a tokens dex\n\n    modifier onlyVault() {\n        require(msg.sender == vault, Error.UNAUTHORIZED_ACCESS);\n        _;\n    }\n\n    constructor(\n        address vault_,\n        address strategist_,\n        uint256 convexPid_,\n        uint256 curveIndex_,\n        uint256 curveHopIndex_,\n        IAddressProvider addressProvider_\n    ) SlippageTolerance(addressProvider_.getRoleManager()) {\n        // Getting data from supporting contracts\n        (address lp_, , , address rewards_, , ) = _BOOSTER.poolInfo(convexPid_);\n        lp = IERC20(lp_);\n        rewards = IRewardStaking(rewards_);\n        address curvePool_ = _CURVE_REGISTRY.get_pool_from_lp_token(lp_);\n        curvePool = ICurveSwap(curvePool_);\n        address hopLp_ = ICurveSwap(curvePool_).coins(curveIndex_);\n        hopLp = IERC20(hopLp_);\n        address curveHopPool_ = _CURVE_REGISTRY.get_pool_from_lp_token(hopLp_);\n        curveHopPool = ICurveSwap(curveHopPool_);\n        address underlying_ = ICurveSwap(curveHopPool_).coins(curveHopIndex_);\n        underlying = IERC20(underlying_);\n        decimalMultiplier = 10**(18 - IERC20Full(underlying_).decimals());\n\n        // Setting inputs\n        vault = vault_;\n        strategist = strategist_;\n        convexPid = convexPid_;\n        curveIndex = curveIndex_;\n        curveHopIndex = curveHopIndex_;\n        _addressProvider = IAddressProvider(addressProvider_);\n\n        // Setting default values\n        imbalanceToleranceIn = 0.001e18;\n        imbalanceToleranceOut = 0.048e18;\n        hopImbalanceToleranceIn = 0.001e18;\n        hopImbalanceToleranceOut = 0.0015e18;\n\n        // Setting dexes\n        _setDex(address(_CRV), _SUSHISWAP);\n        _setDex(address(_CVX), _SUSHISWAP);\n        _setDex(address(underlying_), _SUSHISWAP);\n\n        // Approvals\n        IERC20(underlying_).safeApprove(curveHopPool_, type(uint256).max);\n        IERC20(hopLp_).safeApprove(curvePool_, type(uint256).max);\n        IERC20(lp_).safeApprove(address(_BOOSTER), type(uint256).max);\n        IERC20(underlying_).safeApprove(address(_SUSHISWAP), type(uint256).max);\n        _CVX.safeApprove(address(_CVX_ETH_CURVE_POOL), type(uint256).max);\n        _CRV.safeApprove(address(_SUSHISWAP), type(uint256).max);\n        _WETH.safeApprove(address(_SUSHISWAP), type(uint256).max);\n    }\n\n    /**\n     * @notice Withdraw an amount of underlying to the vault.\n     * @dev This can only be called by the vault.\n     *      If the amount is not available, it will be made liquid.\n     * @param amount Amount of underlying to withdraw.\n     * @return True if successful withdrawal.\n     */\n    function withdraw(uint256 amount) external override onlyVault returns (bool) {\n        if (amount == 0) return false;\n\n        // Transferring from idle balance if enough\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance >= amount) {\n            underlying.safeTransfer(vault, amount);\n            emit Withdraw(amount);\n            return true;\n        }\n\n        // Calculating needed amount of LP to withdraw\n        uint256 requiredUnderlyingAmount = amount - underlyingBalance;\n        uint256 maxHopLpBurned = _maxHopLpBurned(requiredUnderlyingAmount);\n        uint256 requiredHopLpAmount = maxHopLpBurned - _hopLpBalance();\n        uint256 maxLpBurned = _maxLpBurned(requiredHopLpAmount);\n        uint256 requiredLpAmount = maxLpBurned - _lpBalance();\n\n        // Unstaking needed LP Tokens from Convex\n        if (!rewards.withdrawAndUnwrap(requiredLpAmount, false)) return false;\n\n        // Removing needed liquidity from Curve Pool\n        uint256[2] memory amounts;\n        amounts[curveIndex] = requiredHopLpAmount;\n        curvePool.remove_liquidity_imbalance(amounts, maxLpBurned);\n\n        // Removing needed liquidity from Curve Hop Pool\n        uint256[3] memory hopAmounts;\n        hopAmounts[curveHopIndex] = requiredUnderlyingAmount;\n        curveHopPool.remove_liquidity_imbalance(hopAmounts, maxHopLpBurned);\n\n        // Sending underlying to vault\n        underlying.safeTransfer(vault, amount);\n        emit Withdraw(amount);\n        return true;\n    }\n\n    /**\n     * @notice Shuts down the strategy, disabling deposits.\n     * @return True if reserve was successfully set.\n     */\n    function shutdown() external override onlyVault returns (bool) {\n        if (isShutdown) return false;\n        isShutdown = true;\n        emit Shutdown();\n        return true;\n    }\n\n    /**\n     * @notice Set the address of the communit reserve.\n     * @dev CRV & CVX will be taxed and allocated to the reserve,\n     *      such that Backd can participate in governance.\n     * @param _communityReserve Address of the community reserve.\n     * @return True if successfully set.\n     */\n    function setCommunityReserve(address _communityReserve) external onlyGovernance returns (bool) {\n        communityReserve = _communityReserve;\n        emit SetCommunityReserve(_communityReserve);\n        return true;\n    }\n\n    /**\n     * @notice Set the share of CRV to send to the Community Reserve.\n     * @param crvCommunityReserveShare_ New fee charged on CRV rewards for governance.\n     * @return True if successfully set.\n     */\n    function setCrvCommunityReserveShare(uint256 crvCommunityReserveShare_)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        require(crvCommunityReserveShare_ <= ScaledMath.ONE, Error.INVALID_AMOUNT);\n        require(communityReserve != address(0), \"Community reserve must be set\");\n        crvCommunityReserveShare = crvCommunityReserveShare_;\n        emit SetCrvCommunityReserveShare(crvCommunityReserveShare_);\n        return true;\n    }\n\n    /**\n     * @notice Set the share of CVX to send to the Community Reserve.\n     * @param cvxCommunityReserveShare_ New fee charged on CVX rewards for governance.\n     * @return True if successfully set.\n     */\n    function setCvxCommunityReserveShare(uint256 cvxCommunityReserveShare_)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        require(cvxCommunityReserveShare_ <= ScaledMath.ONE, Error.INVALID_AMOUNT);\n        require(communityReserve != address(0), \"Community reserve must be set\");\n        cvxCommunityReserveShare = cvxCommunityReserveShare_;\n        emit SetCvxCommunityReserveShare(cvxCommunityReserveShare_);\n        return true;\n    }\n\n    /**\n     * @notice Set imbalance tolerance for Curve Pool deposits.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _imbalanceToleranceIn New imbalance tolarance in.\n     * @return True if successfully set.\n     */\n    function setImbalanceToleranceIn(uint256 _imbalanceToleranceIn)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        imbalanceToleranceIn = _imbalanceToleranceIn;\n        emit SetImbalanceToleranceIn(_imbalanceToleranceIn);\n        return true;\n    }\n\n    /**\n     * @notice Set imbalance tolerance for Curve Pool withdrawals.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _imbalanceToleranceOut New imbalance tolarance out.\n     * @return True if successfully set.\n     */\n    function setImbalanceToleranceOut(uint256 _imbalanceToleranceOut)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        imbalanceToleranceOut = _imbalanceToleranceOut;\n        emit SetImbalanceToleranceOut(_imbalanceToleranceOut);\n        return true;\n    }\n\n    /**\n     * @notice Set hop imbalance tolerance for Curve Hop Pool deposits.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _hopImbalanceToleranceIn New hop imbalance tolarance in.\n     * @return True if successfully set.\n     */\n    function setHopImbalanceToleranceIn(uint256 _hopImbalanceToleranceIn)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        hopImbalanceToleranceIn = _hopImbalanceToleranceIn;\n        emit SetHopImbalanceToleranceIn(_hopImbalanceToleranceIn);\n        return true;\n    }\n\n    /**\n     * @notice Set hop imbalance tolerance for Curve Hop Pool withdrawals.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _hopImbalanceToleranceOut New hop imbalance tolarance out.\n     * @return True if successfully set.\n     */\n    function setHopImbalanceToleranceOut(uint256 _hopImbalanceToleranceOut)\n        external\n        onlyGovernance\n        returns (bool)\n    {\n        hopImbalanceToleranceOut = _hopImbalanceToleranceOut;\n        emit SetHopImbalanceToleranceOut(_hopImbalanceToleranceOut);\n        return true;\n    }\n\n    /**\n     * @notice Set strategist.\n     * @dev Can only be set by current strategist.\n     * @param _strategist Address of new strategist.\n     * @return True if successfully set.\n     */\n    function setStrategist(address _strategist) external returns (bool) {\n        require(msg.sender == strategist, Error.UNAUTHORIZED_ACCESS);\n        strategist = _strategist;\n        emit SetStrategist(_strategist);\n        return true;\n    }\n\n    /**\n     * @notice Add a reward token to list of extra reward tokens.\n     * @dev These are tokens that are not the main assets of the strategy. For instance, temporary incentives.\n     * @param token Address of token to add to reward token list.\n     * @return True if successfully added.\n     */\n    function addRewardToken(address token) external onlyGovernance returns (bool) {\n        require(\n            token != address(_CVX) &&\n                token != address(underlying) &&\n                token != address(_CRV) &&\n                token != address(_WETH),\n            Error.INVALID_TOKEN_TO_ADD\n        );\n        if (_rewardTokens.contains(token)) return false;\n        _rewardTokens.add(token);\n        _setDex(token, _SUSHISWAP);\n        IERC20(token).safeApprove(address(_SUSHISWAP), 0);\n        IERC20(token).safeApprove(address(_SUSHISWAP), type(uint256).max);\n        emit AddRewardToken(token);\n        return true;\n    }\n\n    /**\n     * @notice Remove a reward token.\n     * @param token Address of token to remove from reward token list.\n     * @return True if successfully removed.\n     */\n    function removeRewardToken(address token) external onlyGovernance returns (bool) {\n        if (!_rewardTokens.remove(token)) return false;\n        emit RemoveRewardToken(token);\n        return true;\n    }\n\n    /**\n     * @notice Set the DEX that should be used for swapping for a specific coin.\n     *         If Uniswap is active, it will switch to SushiSwap and vice versa.\n     * @dev Only SushiSwap and Uniswap are supported.\n     * @param token Address of token for which the DEX should be updated.\n     */\n    function swapDex(address token) external onlyGovernance returns (bool) {\n        UniswapRouter02 currentDex = tokenDex[token];\n        require(address(currentDex) != address(0), Error.NO_DEX_SET);\n        UniswapRouter02 newDex = currentDex == _SUSHISWAP ? _UNISWAP : _SUSHISWAP;\n        _setDex(token, newDex);\n        IERC20(token).safeApprove(address(newDex), 0);\n        IERC20(token).safeApprove(address(newDex), type(uint256).max);\n        emit SwapDex(token, address(newDex));\n        return true;\n    }\n\n    /**\n     * @notice Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.\n     * @dev First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.\n     * @param convexPid_ The PID for the new Convex Pool.\n     * @param curveIndex_ The index of the new Convex Pool Token in the new Curve Pool.\n     */\n    function changeConvexPool(uint256 convexPid_, uint256 curveIndex_) external onlyGovernance {\n        _harvest();\n        _withdrawAllToHopLp();\n        convexPid = convexPid_;\n        curveIndex = curveIndex_;\n        (address lp_, , , address rewards_, , ) = _BOOSTER.poolInfo(convexPid_);\n        lp = IERC20(lp_);\n        rewards = IRewardStaking(rewards_);\n        address curvePool_ = _CURVE_REGISTRY.get_pool_from_lp_token(lp_);\n        curvePool = ICurveSwap(curvePool_);\n        IERC20(hopLp).safeApprove(curvePool_, 0);\n        IERC20(hopLp).safeApprove(curvePool_, type(uint256).max);\n        IERC20(lp_).safeApprove(address(_BOOSTER), 0);\n        IERC20(lp_).safeApprove(address(_BOOSTER), type(uint256).max);\n        require(_deposit(), Error.DEPOSIT_FAILED);\n    }\n\n    /**\n     * @notice Returns the name of the strategy.\n     * @return The name of the strategy.\n     */\n    function name() external view override returns (string memory) {\n        return \"BkdTriHopCvx\";\n    }\n\n    /**\n     * @notice Amount of rewards that can be harvested in the underlying.\n     * @dev Includes rewards for CRV & CVX.\n     * @return Estimated amount of underlying available to harvest.\n     */\n    function harvestable() external view override returns (uint256) {\n        uint256 crvAmount_ = rewards.earned(address(this));\n        if (crvAmount_ == 0) return 0;\n        return\n            _underlyingAmountOut(\n                _CRV,\n                crvAmount_.scaledMul(ScaledMath.ONE - crvCommunityReserveShare)\n            ) +\n            _underlyingAmountOut(\n                _CVX,\n                getCvxMintAmount(crvAmount_).scaledMul(ScaledMath.ONE - cvxCommunityReserveShare)\n            );\n    }\n\n    /**\n     * @dev Contract does not stash tokens.\n     */\n    function hasPendingFunds() external pure override returns (bool) {\n        return false;\n    }\n\n    /**\n     * @notice Deposit all available underlying into Convex pool.\n     * @dev Liquidity is added to Curve Pool then Curve LP tokens are deposited\n     * \t\tinto Convex and Convex LP tokens are staked for rewards by default.\n     * @return True if successful deposit.\n     */\n    function deposit() public payable override onlyVault returns (bool) {\n        return _deposit();\n    }\n\n    /**\n     * @notice Withdraw all underlying.\n     * @dev This does not liquidate reward tokens and only considers\n     *      idle underlying, idle lp tokens and staked lp tokens.\n     * @return Amount of underlying withdrawn\n     */\n    function withdrawAll() public override returns (uint256) {\n        require(\n            msg.sender == vault || _roleManager().hasRole(Roles.GOVERNANCE, msg.sender),\n            Error.UNAUTHORIZED_ACCESS\n        );\n\n        // Withdrawing all from Convex and converting to Hop LP Token\n        _withdrawAllToHopLp();\n\n        // Removing liquidity from Curve Hop Pool\n        uint256 hopLpBalance = _hopLpBalance();\n        if (hopLpBalance > 0) {\n            curveHopPool.remove_liquidity_one_coin(\n                hopLpBalance,\n                int128(uint128(curveHopIndex)),\n                _minUnderlyingAccepted(hopLpBalance)\n            );\n        }\n\n        // Transferring underlying to vault\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance == 0) return 0;\n        underlying.safeTransfer(vault, underlyingBalance);\n        emit WithdrawAll(underlyingBalance);\n        return underlyingBalance;\n    }\n\n    /**\n     * @notice Harvests reward tokens and sells these for the underlying.\n     * @dev Any underlying harvested is not redeposited by this method.\n     * @return Amount of underlying harvested.\n     */\n    function harvest() public override onlyVault returns (uint256) {\n        return _harvest();\n    }\n\n    /**\n     * @notice Get the total underlying balance of the strategy.\n     * @dev This includes idle underlying, idle LP and LP deposited on Convex.\n     * @return Underlying balance of strategy.\n     */\n    function balance() public view override returns (uint256) {\n        return\n            _underlyingBalance() +\n            _hopLpToUnderlying(_lpToHopLp(_stakedBalance() + _lpBalance()) + _hopLpBalance());\n    }\n\n    /**\n     * @dev Set the dex to use for a token.\n     * @param token Address of token to set the dex for.\n     * @param dex Dex to use for swaps with that token.\n     */\n    function _setDex(address token, UniswapRouter02 dex) internal {\n        tokenDex[token] = dex;\n    }\n\n    /**\n     * @notice Swaps all balance of a token for WETH.\n     * @param token Address of the token to swap for WETH.\n     */\n    function _swapAllForWeth(IERC20 token) internal {\n        uint256 amount = token.balanceOf(address(this));\n        return _swapForWeth(token, amount);\n    }\n\n    /**\n     * @notice Swaps a token for WETH.\n     * @param token Address of the token to swap for WETH.\n     * @param amount Amount of the token to swap for WETH.\n     */\n    function _swapForWeth(IERC20 token, uint256 amount) internal {\n        if (amount == 0) return;\n\n        // Handling CVX Swaps\n        if (address(token) == address(_CVX)) {\n            _CVX_ETH_CURVE_POOL.exchange(\n                _CURVE_CVX_INDEX,\n                _CURVE_ETH_INDEX,\n                amount,\n                amount\n                    .scaledMul(_addressProvider.getOracleProvider().getPriceETH(address(_CVX)))\n                    .scaledMul(slippageTolerance)\n            );\n            return;\n        }\n\n        // Handling other swaps\n        address[] memory path = new address[](2);\n        path[0] = address(token);\n        path[1] = address(_WETH);\n        tokenDex[address(token)].swapExactTokensForTokens(\n            amount,\n            amount\n                .scaledMul(_addressProvider.getOracleProvider().getPriceETH(address(token)))\n                .scaledMul(slippageTolerance),\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Swaps all available WETH for underlying.\n     */\n    function _swapWethForUnderlying() internal {\n        uint256 wethBalance = _WETH.balanceOf(address(this));\n        if (wethBalance == 0) return;\n        address[] memory path = new address[](2);\n        path[0] = address(_WETH);\n        path[1] = address(underlying);\n        tokenDex[address(underlying)].swapExactTokensForTokens(\n            wethBalance,\n            wethBalance\n                .scaledDiv(_addressProvider.getOracleProvider().getPriceETH(address(underlying)))\n                .scaledMul(slippageTolerance) / decimalMultiplier,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Sends a share of the current balance of CRV and CVX to the Community Reserve.\n     */\n    function _sendCommunityReserveShare() internal {\n        address communityReserve_ = communityReserve;\n        if (communityReserve_ == address(0)) return;\n        uint256 cvxCommunityReserveShare_ = cvxCommunityReserveShare;\n        if (cvxCommunityReserveShare_ > 0) {\n            uint256 cvxBalance_ = _CVX.balanceOf(address(this));\n            if (cvxBalance_ > 0) {\n                _CVX.safeTransfer(\n                    communityReserve_,\n                    cvxBalance_.scaledMul(cvxCommunityReserveShare_)\n                );\n            }\n        }\n        uint256 crvCommunityReserveShare_ = crvCommunityReserveShare;\n        if (crvCommunityReserveShare_ > 0) {\n            uint256 crvBalance_ = _CRV.balanceOf(address(this));\n            if (crvBalance_ > 0) {\n                _CRV.safeTransfer(\n                    communityReserve_,\n                    crvBalance_.scaledMul(crvCommunityReserveShare_)\n                );\n            }\n        }\n    }\n\n    /**\n     * @dev Get the balance of the underlying.\n     */\n    function _underlyingBalance() internal view returns (uint256) {\n        return underlying.balanceOf(address(this));\n    }\n\n    /**\n     * @dev Get the balance of the hop lp.\n     */\n    function _hopLpBalance() internal view returns (uint256) {\n        return hopLp.balanceOf(address(this));\n    }\n\n    /**\n     * @dev Get the balance of the lp.\n     */\n    function _lpBalance() internal view returns (uint256) {\n        return lp.balanceOf(address(this));\n    }\n\n    /**\n     * @dev Get the balance of the underlying staked in the Curve pool.\n     */\n    function _stakedBalance() internal view returns (uint256) {\n        return rewards.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Gets the amount of underlying that would be received by selling the token.\n     * @dev Uses WETH as intermediate in swap path.\n     * @return Underlying amount that would be received.\n     */\n    function _underlyingAmountOut(IERC20 token, uint256 amountIn) internal view returns (uint256) {\n        if (amountIn == 0) return 0;\n        address[] memory path;\n        if (token == _CVX) {\n            IERC20 underlying_ = underlying;\n            path = new address[](2);\n            path[0] = address(_WETH);\n            path[1] = address(underlying_);\n            return\n                tokenDex[address(underlying_)].getAmountsOut(\n                    _CVX_ETH_CURVE_POOL.get_dy(_CURVE_CVX_INDEX, _CURVE_ETH_INDEX, amountIn),\n                    path\n                )[1];\n        }\n        path = new address[](3);\n        path[0] = address(token);\n        path[1] = address(_WETH);\n        path[2] = address(underlying);\n        return tokenDex[address(token)].getAmountsOut(amountIn, path)[2];\n    }\n\n    /**\n     * @notice Calculates the minimum LP to accept when depositing underlying into Curve Pool.\n     * @param _hopLpAmount Amount of Hop LP that is being deposited into Curve Pool.\n     * @return The minimum LP balance to accept.\n     */\n    function _minLpAccepted(uint256 _hopLpAmount) internal view returns (uint256) {\n        return _hopLpToLp(_hopLpAmount).scaledMul(ScaledMath.ONE - imbalanceToleranceIn);\n    }\n\n    /**\n     * @notice Calculates the maximum LP to accept burning when withdrawing amount from Curve Pool.\n     * @param _hopLpAmount Amount of Hop LP that is being widthdrawn from Curve Pool.\n     * @return The maximum LP balance to accept burning.\n     */\n    function _maxLpBurned(uint256 _hopLpAmount) internal view returns (uint256) {\n        return _hopLpToLp(_hopLpAmount).scaledMul(ScaledMath.ONE + imbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Calculates the minimum Hop LP to accept when burning LP tokens to withdraw from Curve Pool.\n     * @param _lpAmount Amount of LP tokens being burned to withdraw from Curve Pool.\n     * @return The mininum Hop LP balance to accept.\n     */\n    function _minHopLpAcceptedFromWithdraw(uint256 _lpAmount) internal view returns (uint256) {\n        return _lpToHopLp(_lpAmount).scaledMul(ScaledMath.ONE - imbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Calculates the minimum Hop LP to accept when depositing underlying into Curve Hop Pool.\n     * @param _underlyingAmount Amount of underlying that is being deposited into Curve Hop Pool.\n     * @return The minimum Hop LP balance to accept.\n     */\n    function _minHopLpAcceptedFromDeposit(uint256 _underlyingAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return\n            _underlyingToHopLp(_underlyingAmount).scaledMul(\n                ScaledMath.ONE - hopImbalanceToleranceIn\n            );\n    }\n\n    /**\n     * @notice Calculates the maximum Hop LP to accept burning when withdrawing amount from Curve Hop Pool.\n     * @param _underlyingAmount Amount of underlying that is being widthdrawn from Curve Hop Pool.\n     * @return The maximum Hop LP balance to accept burning.\n     */\n    function _maxHopLpBurned(uint256 _underlyingAmount) internal view returns (uint256) {\n        return\n            _underlyingToHopLp(_underlyingAmount).scaledMul(\n                ScaledMath.ONE + hopImbalanceToleranceOut\n            );\n    }\n\n    /**\n     * @notice Calculates the minimum underlying to accept when burning Hop LP tokens to withdraw from Curve Hop Pool.\n     * @param _hopLpAmount Amount of Hop LP tokens being burned to withdraw from Curve Hop Pool.\n     * @return The mininum underlying balance to accept.\n     */\n    function _minUnderlyingAccepted(uint256 _hopLpAmount) internal view returns (uint256) {\n        return\n            _hopLpToUnderlying(_hopLpAmount).scaledMul(ScaledMath.ONE - hopImbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Converts an amount of underlying into their estimated Hop LP value.\n     * @dev Uses get_virtual_price which is less suceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _underlyingAmount Amount of underlying to convert.\n     * @return The estimated value in the Hop LP.\n     */\n    function _underlyingToHopLp(uint256 _underlyingAmount) internal view returns (uint256) {\n        return (_underlyingAmount * decimalMultiplier).scaledDiv(curveHopPool.get_virtual_price());\n    }\n\n    /**\n     * @notice Converts an amount of Hop LP into their estimated underlying value.\n     * @dev Uses get_virtual_price which is less suceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _hopLpAmount Amount of Hop LP to convert.\n     * @return The estimated value in the underlying.\n     */\n    function _hopLpToUnderlying(uint256 _hopLpAmount) internal view returns (uint256) {\n        return (_hopLpAmount / decimalMultiplier).scaledMul(curveHopPool.get_virtual_price());\n    }\n\n    /**\n     * @notice Converts an amount of LP into their estimated Hop LP value.\n     * @dev Uses get_virtual_price which is less suceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _lpAmount Amount of underlying to convert.\n     * @return The estimated value in the Hop LP.\n     */\n    function _lpToHopLp(uint256 _lpAmount) internal view returns (uint256) {\n        return\n            _lpAmount.scaledMul(curvePool.get_virtual_price()).scaledDiv(\n                curveHopPool.get_virtual_price()\n            );\n    }\n\n    /**\n     * @notice Converts an amount of Hop LP into their estimated LP value.\n     * @dev Uses get_virtual_price which is less suceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _hopLpAmount Amount of Hop LP to convert.\n     * @return The estimated value in the LP.\n     */\n    function _hopLpToLp(uint256 _hopLpAmount) internal view returns (uint256) {\n        return\n            _hopLpAmount.scaledMul(curveHopPool.get_virtual_price()).scaledDiv(\n                curvePool.get_virtual_price()\n            );\n    }\n\n    /**\n     * @dev Deposit all available underlying into Convex pool.\n     * @return True if successful deposit.\n     */\n    function _deposit() private returns (bool) {\n        require(msg.value == 0, Error.INVALID_VALUE);\n        require(!isShutdown, Error.STRATEGY_SHUT_DOWN);\n\n        // Depositing into Curve Hop Pool\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance > 0) {\n            uint256[3] memory hopAmounts;\n            hopAmounts[curveHopIndex] = underlyingBalance;\n            curveHopPool.add_liquidity(hopAmounts, _minHopLpAcceptedFromDeposit(underlyingBalance));\n        }\n\n        // Depositing into Curve Pool\n        uint256 hopLpBalance = _hopLpBalance();\n        if (hopLpBalance > 0) {\n            uint256[2] memory amounts;\n            amounts[curveIndex] = hopLpBalance;\n            curvePool.add_liquidity(amounts, _minLpAccepted(hopLpBalance));\n        }\n\n        // Depositing into Convex and Staking\n        if (_lpBalance() == 0) return false;\n        if (!_BOOSTER.depositAll(convexPid, true)) return false;\n        emit Deposit(underlyingBalance);\n        return true;\n    }\n\n    /**\n     * @dev Withdraw all underlying and convert to the Hop LP Token.\n     */\n    function _withdrawAllToHopLp() private {\n        // Unstaking and withdrawing from Convex pool\n        uint256 stakedBalance = _stakedBalance();\n        if (stakedBalance > 0) {\n            rewards.withdrawAndUnwrap(stakedBalance, false);\n        }\n\n        // Removing liquidity from Curve Pool\n        uint256 lpBalance = _lpBalance();\n        if (lpBalance > 0) {\n            curvePool.remove_liquidity_one_coin(\n                lpBalance,\n                int128(uint128(curveIndex)),\n                _minHopLpAcceptedFromWithdraw(lpBalance)\n            );\n        }\n    }\n\n    function _harvest() private returns (uint256) {\n        uint256 initialBalance = _underlyingBalance();\n\n        // Claim Convex rewards\n        rewards.getReward();\n\n        // Sending share to Community Reserve\n        _sendCommunityReserveShare();\n\n        // Swap CVX for WETH\n        _swapAllForWeth(_CVX);\n\n        // Swap CRV for WETH\n        _swapAllForWeth(_CRV);\n\n        // Swap Extra Rewards for WETH\n        for (uint256 i = 0; i < _rewardTokens.length(); i++) {\n            _swapAllForWeth(IERC20(_rewardTokens.at(i)));\n        }\n\n        // Swap WETH for underlying\n        _swapWethForUnderlying();\n\n        uint256 harvested = _underlyingBalance() - initialBalance;\n        emit Harvest(harvested);\n        return harvested;\n    }\n}\n", "sourceMap": "1507:33571:53:-:0;;;6522:2159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6743:33;:16;-1:-1:-1;;;;;6743:31:53;;;;;;:33;;:::i;:::-;-1:-1:-1;;;;;254:27:33;;;477:7:100::1;457:17;:27:::0;;;6880:29:53::1;::::0;-1:-1:-1;;;6880:29:53;;::::1;::::0;::::1;1032:25:171::0;;;457:17:100;;1908:42:53::1;::::0;6880:17:::1;::::0;1005:18:171;;6880:29:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;6919:2:53::1;:16:::0;;-1:-1:-1;;;;;;6919:16:53;;::::1;-1:-1:-1::0;;;;;6919:16:53;;::::1;::::0;;::::1;::::0;;6945:7:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;;7010:43:::1;::::0;-1:-1:-1;;;7010:43:53;;;;::::1;2257:51:171::0;6919:16:53;;-1:-1:-1;6945:34:53;-1:-1:-1;;;2058:42:53::1;::::0;-1:-1:-1;7010:38:53::1;::::0;-1:-1:-1;2230:18:171;;7010:43:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7063:9;:34:::0;;-1:-1:-1;;;;;;7063:34:53::1;-1:-1:-1::0;;;;;7063:34:53;::::1;::::0;;::::1;::::0;;;7124:41:::1;::::0;-1:-1:-1;;;7124:41:53;;::::1;::::0;::::1;1032:25:171::0;;;7063:34:53;;-1:-1:-1;;;7124:28:53::1;::::0;1005:18:171;;7124:41:53::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7175:22:53;::::1;;::::0;;;7231:46:::1;::::0;-1:-1:-1;;;7231:46:53;;::::1;::::0;::::1;2257:51:171::0;;;;7175:22:53;;-1:-1:-1;7207:21:53::1;::::0;2058:42:::1;::::0;7231:38:::1;::::0;2230:18:171;;7231:46:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7287:40:53;::::1;;::::0;;;7359:47:::1;::::0;-1:-1:-1;;;7359:47:53;;::::1;::::0;::::1;1032:25:171::0;;;7287:40:53;;-1:-1:-1;7337:19:53::1;::::0;7359:31:::1;::::0;1005:18:171;;7359:47:53::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7337:69;;7436:11;-1:-1:-1::0;;;;;7416:32:53::1;;;-1:-1:-1::0;;;;;7416:32:53::1;;;::::0;::::1;7499:11;-1:-1:-1::0;;;;;7488:32:53::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7483:39;::::0;:2:::1;:39;:::i;:::-;7478:45;::::0;:2:::1;:45;:::i;:::-;7458:65;::::0;-1:-1:-1;;;;;7560:14:53;;::::1;;::::0;7584:10:::1;:24:::0;;-1:-1:-1;;;;;;7584:24:53;;::::1;::::0;;::::1;;::::0;;;7618:9:::1;:22:::0;;;7650:10:::1;:24:::0;;;7684:30:::1;::::0;;;7724:53;;::::1;-1:-1:-1::0;7724:53:53;7845:8:::1;7822:20;:31:::0;;;7887:8:::1;-1:-1:-1::0;7863:32:53;7905:23:::1;:34:::0;7976:9:::1;7949:24;:36:::0;22289:8;-1:-1:-1;22289:15:53;;;;:21;;2492:42:::1;22289:21:::0;;;;;;;;:15;:21;;;;;;;;:15;;;-1:-1:-1;22289:15:53;;;;;;:21;;;;;;;;;;;8182:65:::1;::::0;22289:15;8214:13;;-1:-1:-1;;;8182:31:53::1;;::::0;::::1;;:65:::0;::::1;:::i;:::-;8257:57;8284:10;-1:-1:-1::0;;8264:6:53::1;-1:-1:-1::0;;;;;8257:26:53::1;;;;;;;:57;;;;;:::i;:::-;8324:61;1908:42;-1:-1:-1::0;;8331:3:53::1;-1:-1:-1::0;;;;;8324:23:53::1;;;;;;;:61;;;;;:::i;:::-;8395:71;2492:42;-1:-1:-1::0;;8402:11:53::1;-1:-1:-1::0;;;;;8395:31:53::1;;;;;;;:71;;;;;:::i;:::-;8476:65;2173:42;2793;-1:-1:-1::0;;8476:16:53::1;;::::0;;::::1;;;:65:::0;::::1;:::i;:::-;8551:56;2365:42;2492;-1:-1:-1::0;;8551:16:53::1;;::::0;;::::1;;;:56:::0;::::1;:::i;:::-;8617:57;2269:42;2492;-1:-1:-1::0;;8617:17:53::1;;::::0;;::::1;;;:57:::0;::::1;:::i;:::-;6778:1903;;;;;;6522:2159:::0;;;;;;1507:33571;;1940:184:161;2058:58;;-1:-1:-1;;;2058:58:161;;-1:-1:-1;;;2058:58:161;;;1032:25:171;2014:12:161;;-1:-1:-1;;;;;2058:19:161;;;;;1005:18:171;;2058:58:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2038:79;1940:184;-1:-1:-1;;1940:184:161:o;1413:603:19:-;1768:10;;;1767:62;;-1:-1:-1;1784:39:19;;-1:-1:-1;;;1784:39:19;;1808:4;1784:39;;;4962:34:171;-1:-1:-1;;;;;5032:15:171;;;5012:18;;;5005:43;1784:15:19;;;;;4897:18:171;;1784:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:19;;5450:2:171;1746:163:19;;;5432:21:171;5489:2;5469:18;;;5462:30;5528:34;5508:18;;;5501:62;5599:24;5579:18;;;5572:52;5641:19;;1746:163:19;;;;;;;;;1946:62;;;-1:-1:-1;;;;;5863:32:171;;1946:62:19;;;5845:51:171;5912:18;;;;5905:34;;;1946:62:19;;;;;;;;;;5818:18:171;;;;1946:62:19;;;;;;;;-1:-1:-1;;;;;1946:62:19;;;-1:-1:-1;;;1946:62:19;;;;1919:90;;1939:5;;1919:19;:90;:::i;:::-;1413:603;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:19;;;;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:19;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:19;;6359:2:171;3811:85:19;;;6341:21:171;6398:2;6378:18;;;6371:30;6437:34;6417:18;;;6410:62;-1:-1:-1;;;6488:18:171;;;6481:40;6538:19;;3811:85:19;6157:406:171;3861:223:20;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:20;;6770:2:171;5137:81:20;;;6752:21:171;6809:2;6789:18;;;6782:30;6848:34;6828:18;;;6821:62;-1:-1:-1;;;6899:18:171;;;6892:36;6945:19;;5137:81:20;6568:402:171;5137:81:20;-1:-1:-1;;;;;1465:19:20;;;5228:60;;;;-1:-1:-1;;;5228:60:20;;7177:2:171;5228:60:20;;;7159:21:171;7216:2;7196:18;;;7189:30;7255:31;7235:18;;;7228:59;7304:18;;5228:60:20;6975:353:171;5228:60:20;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:20;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5299:73:20;;-1:-1:-1;5299:73:20;-1:-1:-1;5389:51:20;5299:73;;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:20:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:20;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:20;;;;;;;;:::i;14:131:171:-;-1:-1:-1;;;;;89:31:171;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:731::-;291:6;299;307;315;323;331;384:3;372:9;363:7;359:23;355:33;352:53;;;401:1;398;391:12;352:53;433:9;427:16;452:31;477:5;452:31;:::i;:::-;552:2;537:18;;531:25;502:5;;-1:-1:-1;565:33:171;531:25;565:33;:::i;:::-;617:7;607:17;;;664:2;653:9;649:18;643:25;633:35;;708:2;697:9;693:18;687:25;677:35;;752:3;741:9;737:19;731:26;721:36;;802:3;791:9;787:19;781:26;816:33;841:7;816:33;:::i;:::-;868:7;858:17;;;150:731;;;;;;;;:::o;1068:164::-;1144:13;;1193;;1186:21;1176:32;;1166:60;;1222:1;1219;1212:12;1166:60;1068:164;;;:::o;1237:869::-;1349:6;1357;1365;1373;1381;1389;1442:3;1430:9;1421:7;1417:23;1413:33;1410:53;;;1459:1;1456;1449:12;1410:53;1491:9;1485:16;1510:31;1535:5;1510:31;:::i;:::-;1610:2;1595:18;;1589:25;1560:5;;-1:-1:-1;1623:33:171;1589:25;1623:33;:::i;:::-;1727:2;1712:18;;1706:25;1675:7;;-1:-1:-1;1740:33:171;1706:25;1740:33;:::i;:::-;1844:2;1829:18;;1823:25;1792:7;;-1:-1:-1;1857:33:171;1823:25;1857:33;:::i;:::-;1961:3;1946:19;;1940:26;1909:7;;-1:-1:-1;1975:33:171;1940:26;1975:33;:::i;:::-;2027:7;-1:-1:-1;2053:47:171;2095:3;2080:19;;2053:47;:::i;:::-;2043:57;;1237:869;;;;;;;;:::o;2319:251::-;2389:6;2442:2;2430:9;2421:7;2417:23;2413:32;2410:52;;;2458:1;2455;2448:12;2410:52;2490:9;2484:16;2509:31;2534:5;2509:31;:::i;2575:273::-;2643:6;2696:2;2684:9;2675:7;2671:23;2667:32;2664:52;;;2712:1;2709;2702:12;2664:52;2744:9;2738:16;2794:4;2787:5;2783:16;2776:5;2773:27;2763:55;;2814:1;2811;2804:12;2853:127;2914:10;2909:3;2905:20;2902:1;2895:31;2945:4;2942:1;2935:15;2969:4;2966:1;2959:15;2985:195;3023:4;3060;3057:1;3053:12;3092:4;3089:1;3085:12;3117:3;3112;3109:12;3106:38;;;3124:18;;:::i;:::-;3161:13;;;2985:195;-1:-1:-1;;;2985:195:171:o;3185:422::-;3274:1;3317:5;3274:1;3331:270;3352:7;3342:8;3339:21;3331:270;;;3411:4;3407:1;3403:6;3399:17;3393:4;3390:27;3387:53;;;3420:18;;:::i;:::-;3470:7;3460:8;3456:22;3453:55;;;3490:16;;;;3453:55;3569:22;;;;3529:15;;;;3331:270;;;3335:3;3185:422;;;;;:::o;3612:806::-;3661:5;3691:8;3681:80;;-1:-1:-1;3732:1:171;3746:5;;3681:80;3780:4;3770:76;;-1:-1:-1;3817:1:171;3831:5;;3770:76;3862:4;3880:1;3875:59;;;;3948:1;3943:130;;;;3855:218;;3875:59;3905:1;3896:10;;3919:5;;;3943:130;3980:3;3970:8;3967:17;3964:43;;;3987:18;;:::i;:::-;-1:-1:-1;;4043:1:171;4029:16;;4058:5;;3855:218;;4157:2;4147:8;4144:16;4138:3;4132:4;4129:13;4125:36;4119:2;4109:8;4106:16;4101:2;4095:4;4092:12;4088:35;4085:77;4082:159;;;-1:-1:-1;4194:19:171;;;4226:5;;4082:159;4273:34;4298:8;4292:4;4273:34;:::i;:::-;4343:6;4339:1;4335:6;4331:19;4322:7;4319:32;4316:58;;;4354:18;;:::i;:::-;4392:20;;3612:806;-1:-1:-1;;;3612:806:171:o;4423:140::-;4481:5;4510:47;4551:4;4541:8;4537:19;4531:4;4510:47;:::i;5059:184::-;5129:6;5182:2;5170:9;5161:7;5157:23;5153:32;5150:52;;;5198:1;5195;5188:12;5150:52;-1:-1:-1;5221:16:171;;5059:184;-1:-1:-1;5059:184:171:o;5950:202::-;6017:6;6070:2;6058:9;6049:7;6045:23;6041:32;6038:52;;;6086:1;6083;6076:12;6038:52;6109:37;6136:9;6109:37;:::i;7333:258::-;7405:1;7415:113;7429:6;7426:1;7423:13;7415:113;;;7505:11;;;7499:18;7486:11;;;7479:39;7451:2;7444:10;7415:113;;;7546:6;7543:1;7540:13;7537:48;;;7581:1;7572:6;7567:3;7563:16;7556:27;7537:48;;7333:258;;;:::o;7596:274::-;7725:3;7763:6;7757:13;7779:53;7825:6;7820:3;7813:4;7805:6;7801:17;7779:53;:::i;:::-;7848:16;;;;;7596:274;-1:-1:-1;;7596:274:171:o;7875:383::-;8024:2;8013:9;8006:21;7987:4;8056:6;8050:13;8099:6;8094:2;8083:9;8079:18;8072:34;8115:66;8174:6;8169:2;8158:9;8154:18;8149:2;8141:6;8137:15;8115:66;:::i;:::-;8242:2;8221:15;-1:-1:-1;;8217:29:171;8202:45;;;;8249:2;8198:54;;7875:383;-1:-1:-1;;7875:383:171:o;:::-;1507:33571:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/strategies/BkdTriHopCvx.sol", "type": "contract", "deployment": {"address": "0x5F0a7A6992BBFcB230B6E436fAF3B405713f9f0B", "chainid": "1", "blockHeight": 14391510}}