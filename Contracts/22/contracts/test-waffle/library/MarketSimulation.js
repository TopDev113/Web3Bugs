// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var CONSTANTS = require("../CONSTANTS.js");

function valueChange(totalLockedLong, totalLockedShort, percentageChange) {
  if (totalLockedShort.gte(totalLockedLong)) {
    return totalLockedLong.mul(percentageChange).div(CONSTANTS.tenToThe18);
  } else {
    return totalLockedShort.mul(percentageChange).div(CONSTANTS.tenToThe18);
  }
}

function simulateMarketPriceChange(oldPrice, newPrice, totalLockedLong, totalLockedShort) {
  if (oldPrice.eq(newPrice)) {
    return {
            totalLockedLong: totalLockedLong,
            totalLockedShort: totalLockedShort
          };
  }
  if (oldPrice.lt(newPrice)) {
    var percentageChange = newPrice.sub(oldPrice).mul(CONSTANTS.tenToThe18).div(oldPrice);
    if (percentageChange.gte(CONSTANTS.tenToThe18)) {
      var totalLocked = totalLockedLong.add(totalLockedShort);
      return {
              totalLockedLong: totalLocked,
              totalLockedShort: CONSTANTS.zeroBn
            };
    }
    var changeInValue = valueChange(totalLockedLong, totalLockedShort, percentageChange);
    return {
            totalLockedLong: totalLockedLong.add(changeInValue),
            totalLockedShort: totalLockedShort.sub(changeInValue)
          };
  }
  var percentageChange$1 = oldPrice.sub(newPrice).mul(CONSTANTS.tenToThe18).div(oldPrice);
  if (percentageChange$1.gte(CONSTANTS.tenToThe18)) {
    var totalLocked$1 = totalLockedLong.add(totalLockedShort);
    return {
            totalLockedLong: CONSTANTS.zeroBn,
            totalLockedShort: totalLocked$1
          };
  }
  var changeInValue$1 = valueChange(totalLockedLong, totalLockedShort, percentageChange$1);
  return {
          totalLockedLong: totalLockedLong.sub(changeInValue$1),
          totalLockedShort: totalLockedShort.add(changeInValue$1)
        };
}

exports.valueChange = valueChange;
exports.simulateMarketPriceChange = simulateMarketPriceChange;
/* CONSTANTS Not a pure module */
