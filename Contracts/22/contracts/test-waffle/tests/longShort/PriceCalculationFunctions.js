// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("../../bindings/chai/Chai.js");
var LetOps = require("../../library/LetOps.js");
var Helpers = require("../../library/Helpers.js");
var Contract = require("../../library/Contract.js");

function testUnit(contracts, param) {
  describe("_getSyntheticTokenPrice", (function () {
          it("should test function returns correct price", (function () {
                  var randomAmountPaymentToken = Helpers.randomTokenAmount(undefined);
                  var randomAmountSyntheticToken = Helpers.randomTokenAmount(undefined);
                  return LetOps.Await.let_(contracts.contents.longShort._getSyntheticTokenPriceExposed(randomAmountPaymentToken, randomAmountSyntheticToken), (function (actualResult) {
                                var expectedResult = Contract.LongShortHelpers.calcSyntheticTokenPrice(randomAmountPaymentToken, randomAmountSyntheticToken);
                                return Chai.bnEqual("expected result different to actual result for _getSyntheticTokenPrice call", actualResult, expectedResult);
                              }));
                }));
          
        }));
  describe("_getAmountPaymentToken", (function () {
          it("should test function returns correct amount", (function () {
                  var randomAmountSyntheticToken = Helpers.randomTokenAmount(undefined);
                  var randomTokenPrice = Helpers.randomTokenAmount(undefined);
                  return LetOps.Await.let_(contracts.contents.longShort._getAmountPaymentTokenExposed(randomAmountSyntheticToken, randomTokenPrice), (function (actualResult) {
                                var expectedResult = Contract.LongShortHelpers.calcAmountPaymentToken(randomAmountSyntheticToken, randomTokenPrice);
                                return Chai.bnEqual("expected result different to actual result for _getAmountPaymentToken call", actualResult, expectedResult);
                              }));
                }));
          
        }));
  describe("_getAmountSyntheticToken", (function () {
          it("should test function returns correct amount", (function () {
                  var randomAmountPaymentToken = Helpers.randomTokenAmount(undefined);
                  var randomTokenPrice = Helpers.randomTokenAmount(undefined);
                  return LetOps.Await.let_(contracts.contents.longShort._getAmountSyntheticTokenExposed(randomAmountPaymentToken, randomTokenPrice), (function (actualResult) {
                                var expectedResult = Contract.LongShortHelpers.calcAmountSyntheticToken(randomAmountPaymentToken, randomTokenPrice);
                                return Chai.bnEqual("expected result different to actual result for _getAmountSyntheticTokencd call", actualResult, expectedResult);
                              }));
                }));
          
        }));
  
}

exports.testUnit = testUnit;
/* Chai Not a pure module */
