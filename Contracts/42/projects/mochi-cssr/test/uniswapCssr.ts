import { expect } from 'chai';
import { ethers } from 'hardhat';
import { MochiCSSR } from '../src';
import { rlpDecode } from '../src/rlp-encoder';
import {
  utils,
  providers,
  Contract,
  Signer,
  BigNumber,
  constants,
} from 'ethers';
import 'dotenv/config';

const lastFork = BigInt(process.env.MAINNET_FORK_BLOCK);

// mainnet
const weth = '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2';
const wethFeed = '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419';
const dai = '0x6b175474e89094c44da98b954eedeac495271d0f';
const daiFeed = '0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9';
const usdc = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';
const usdcFeed = '0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6';
//const yfi = '0xD533a949740bb3306d119CC777fa900bA034cd52'; //crv
const yfi = '0x62b9c7356a2dc64a1969e19c23e4f579f9810aa7'; //cvxcrv
//const yfi = '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e';
//const yfi = '0x408e41876cccdc0f92210600ef50372656052a38';
const duck = '0x92e187a03b6cd19cb6af293ba17f2745fd2357d5';

// rinkeby
//const weth = "0x6440703C65D2F9f1BfA174D6963e93DFae2F4FB9";
//const wethFeed = "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e";
//const dai = "0xD381c0555F08987a610c91c46D628058CA4C1483";
//const daiFeed = "0x2bA49Aaa16E6afD2a993473cfB70Fa8559B523cF";
//const yfi = "0xa0De839F1B96B3efB93BDca65ae4Ec48a897c2E7";

describe('uniswapCssr', function () {
  let accounts: Signer[];

  let owned: Contract;
  let cssr: Contract;
  let uni: Contract;
  let sushi: Contract;
  let chainlink: Contract;
  let tokenAdapter: Contract;
  let uniLPAdapter: Contract;

  let owner: Signer;
  let alice: Signer;
  let bob: Signer;
  let charles: Signer;

  let sdk: MochiCSSR;

  async function routerUpdate(
    blockNumber: bigint,
    token: string,
  ) {
    const packedProof = await sdk.getProof(blockNumber, token);
    console.log(packedProof);
    await cssr.update(token, packedProof);
  }

  beforeEach(async function () {
    const MockOwnedFactory = await ethers.getContractFactory('MockOwned');
    owned = await MockOwnedFactory.deploy();
    const CssrFactory = await ethers.getContractFactory('MochiCSSRv0');
    cssr = await CssrFactory.deploy(owned.address);
    const UniFactory = await ethers.getContractFactory('UniswapV2CSSR');
    uni = await UniFactory.deploy('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');
    const SushiFactory = await ethers.getContractFactory('SushiswapV2CSSR');
    sushi = await SushiFactory.deploy('0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac');
    const ChainlinkFactory = await ethers.getContractFactory(
      'ChainlinkAdapterEth',
    );
    chainlink = await ChainlinkFactory.deploy(owned.address);
    const UniAdapterFactory = await ethers.getContractFactory(
      'UniswapV2TokenAdapter',
    );
    tokenAdapter = await UniAdapterFactory.deploy(
      owned.address,
      cssr.address,
      uni.address,
      sushi.address,
    );
    const UniLPAdapterFactory = await ethers.getContractFactory(
      'UniswapV2LPAdapter',
    );
    uniLPAdapter = await UniLPAdapterFactory.deploy(
      weth,
      "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
      cssr.address,
      uni.address,
    );
    await cssr.setBluechip([weth,dai]);
    await chainlink.setFeed([weth,dai], [wethFeed, daiFeed]);
    await cssr.setFiatPriceAdapter(chainlink.address);
    await cssr.listAdapter(tokenAdapter.address);
    await cssr.listAdapter(uniLPAdapter.address);
    await cssr.setDefaultPriceSource(tokenAdapter.address);
    await cssr.setDefaultLiquiditySource(tokenAdapter.address);
    await tokenAdapter.addKeyCurrency(dai);
    await tokenAdapter.setMinimumLiquidity('1000000');
    await tokenAdapter.addKeyCurrency(weth);
    const directProvider = new providers.JsonRpcProvider(
      process.env.MAINNET_RPC_URL,
    );
    sdk = new MochiCSSR(directProvider);
    const duckPair = await sdk.uni.getPair(duck, weth);
    const usdcPair = await sdk.uni.getPair(usdc, weth);
    await cssr.setPriceSource(uniLPAdapter.address, [duckPair, usdcPair]);
  });

  it.only('uniAdapter', async function () {
    //await routerUpdate(lastFork, yfi, weth);
    //await routerUpdate(lastFork, yfi, weth);
    await routerUpdate(lastFork, yfi);
    //2 less zeros in div for viewing 2 float points
 const proof = '';
    const debug = await cssr.update(yfi, proof);
    let res = await cssr.getPrice(yfi);
    console.log(
      res.numerator
        .mul(1000000000000000000n)
        .div(res.denominator)
        .div(10000000000000000n)
        .toString(),
    );
  });
  
  it('uniLPAdapter', async function () {
    await routerUpdate(lastFork, duck);
    await routerUpdate(lastFork, usdc);
    let pair = await sdk.uni.getPair(duck, weth);
    let res = await cssr.getPrice(pair);
    console.log(
      res.numerator
        .mul(1000000000000000000n)
        .div(res.denominator)
        .div(10000000000000000n)
        .toString(),
    );
    pair = await sdk.uni.getPair(usdc, weth);
    res = await cssr.getPrice(pair);
    console.log(
      res.numerator
        .mul(1000000000000000000n)
        .div(res.denominator)
        .div(10000000000000000n)
        .toString(),
    );
  });

  it('chainlinkAdapter', async function () {
    const eth_price = await cssr.getPrice(weth);
    console.log(
      eth_price.numerator
        .mul(1000000000000000000n)
        .div(eth_price.denominator)
        .div(10000000000000000n)
        .toString(),
    );
    const dai_price = await cssr.getPrice(dai);
    // div by 100 for precision
    console.log(
      dai_price.numerator
        .mul(1000000000000000000n)
        .div(dai_price.denominator)
        .div(10000000000000000n)
        .toString(),
    );
    await routerUpdate(lastFork, yfi);
    const yfi_price = await cssr.getPrice(yfi);
    await cssr.getLiquidity(yfi);
    console.log(
      yfi_price.numerator
        .mul(1000000000000000000n)
        .div(yfi_price.denominator)
        .div(10000000000000000n)
        .toString(),
    );
  });
});
