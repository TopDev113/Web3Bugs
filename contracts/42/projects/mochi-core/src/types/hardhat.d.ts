/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "ChainlinkAdapterEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkAdapterEth__factory>;
    getContractFactory(
      name: "SushiswapV2LPAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SushiswapV2LPAdapter__factory>;
    getContractFactory(
      name: "SushiswapV2TokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SushiswapV2TokenAdapter__factory>;
    getContractFactory(
      name: "UniswapV2LPAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2LPAdapter__factory>;
    getContractFactory(
      name: "UniswapV2TokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2TokenAdapter__factory>;
    getContractFactory(
      name: "SushiswapV2CSSR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SushiswapV2CSSR__factory>;
    getContractFactory(
      name: "UniswapV2CSSR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2CSSR__factory>;
    getContractFactory(
      name: "ICSSRAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICSSRAdapter__factory>;
    getContractFactory(
      name: "ICSSRRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICSSRRouter__factory>;
    getContractFactory(
      name: "IGovernanceOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernanceOwned__factory>;
    getContractFactory(
      name: "IUniswapV2CSSR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2CSSR__factory>;
    getContractFactory(
      name: "MochiCSSRv0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiCSSRv0__factory>;
    getContractFactory(
      name: "MockOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOwned__factory>;
    getContractFactory(
      name: "Beacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Beacon__factory>;
    getContractFactory(
      name: "Create2BeaconMaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Create2BeaconMaker__factory>;
    getContractFactory(
      name: "IVMochi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVMochi__factory>;
    getContractFactory(
      name: "VMochi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VMochi__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "Mochi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mochi__factory>;
    getContractFactory(
      name: "USDM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDM__factory>;
    getContractFactory(
      name: "VestedRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestedRewardPool__factory>;
    getContractFactory(
      name: "FeePoolV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeePoolV0__factory>;
    getContractFactory(
      name: "NoMochiFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoMochiFeePool__factory>;
    getContractFactory(
      name: "NoMochiReferralFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoMochiReferralFeePool__factory>;
    getContractFactory(
      name: "ReferralFeePoolV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReferralFeePoolV0__factory>;
    getContractFactory(
      name: "ICurveVotingEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveVotingEscrow__factory>;
    getContractFactory(
      name: "IDiscountProfile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiscountProfile__factory>;
    getContractFactory(
      name: "IERC3156FlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashBorrower__factory>;
    getContractFactory(
      name: "IERC3156FlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashLender__factory>;
    getContractFactory(
      name: "IFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeePool__factory>;
    getContractFactory(
      name: "ILiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidator__factory>;
    getContractFactory(
      name: "IMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinter__factory>;
    getContractFactory(
      name: "IMochi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochi__factory>;
    getContractFactory(
      name: "IMochiEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiEngine__factory>;
    getContractFactory(
      name: "IMochiNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiNFT__factory>;
    getContractFactory(
      name: "IMochiPositionDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiPositionDescriptor__factory>;
    getContractFactory(
      name: "IMochiProfile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiProfile__factory>;
    getContractFactory(
      name: "IMochiVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiVault__factory>;
    getContractFactory(
      name: "IMochiVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMochiVaultFactory__factory>;
    getContractFactory(
      name: "IReferralFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReferralFeePool__factory>;
    getContractFactory(
      name: "IUSDM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUSDM__factory>;
    getContractFactory(
      name: "DutchAuctionLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DutchAuctionLiquidator__factory>;
    getContractFactory(
      name: "MinterV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterV0__factory>;
    getContractFactory(
      name: "MochiEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiEngine__factory>;
    getContractFactory(
      name: "MockCollateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCollateral__factory>;
    getContractFactory(
      name: "MockCssrRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCssrRouter__factory>;
    getContractFactory(
      name: "MockDAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockDAI__factory>;
    getContractFactory(
      name: "MockWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWETH__factory>;
    getContractFactory(
      name: "DiscountProfileV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiscountProfileV0__factory>;
    getContractFactory(
      name: "MochiProfileV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiProfileV0__factory>;
    getContractFactory(
      name: "NoDiscountProfile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoDiscountProfile__factory>;
    getContractFactory(
      name: "MochiTreasuryV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiTreasuryV0__factory>;
    getContractFactory(
      name: "MochiNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiNFT__factory>;
    getContractFactory(
      name: "MochiNFTMigrated",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiNFTMigrated__factory>;
    getContractFactory(
      name: "MochiVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiVault__factory>;
    getContractFactory(
      name: "MochiVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MochiVaultFactory__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
