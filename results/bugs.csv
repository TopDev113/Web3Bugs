Contest ID, Bug ID, Bug Label, Difficulty, Bug Description, Reference, Comment
3, H-01, L1, 1, "Re-entrancy bug allows inflating balance", https://code4rena.com/reports/2021-04-marginswap#h-01-re-entrancy-bug-allows-inflating-balance, ""
3, H-02, SE-4, 1, "Missing fromToken != toToken check", https://code4rena.com/reports/2021-04-marginswap#h-02-missing-fromtoken--totoken-check, ""
3, H-03, S1-1, 1, "Price feed can be manipulated", https://code4rena.com/reports/2021-04-marginswap#h-03-price-feed-can-be-manipulated, ""
3, H-04, S6-2, 1, "Inconsistent usage of applyInterest", https://code4rena.com/reports/2021-04-marginswap#h-04-inconsistent-usage-of-applyinterest, ""
3, H-05, S6-4, 1, "Wrong liquidation logic", https://code4rena.com/reports/2021-04-marginswap#h-05-wrong-liquidation-logic, ""
3, H-06, SC, 1, "Users are credited more tokens when paying back debt with registerTradeAndBorrow", https://code4rena.com/reports/2021-04-marginswap#h-06-users-are-credited-more-tokens-when-paying-back-debt-with-registertradeandborrow, ""
3, H-07, S3-1, 1, "account.holdsToken is never set", https://code4rena.com/reports/2021-04-marginswap#h-07-accountholdstoken-is-never-set, ""
3, H-08, O5, 1, "Rewards cannot be withdrawn", https://code4rena.com/reports/2021-04-marginswap#h-08-rewards-cannot-be-withdrawn, ""
3, H-09, L4, 1, "lastUpdatedDay not initialized", https://code4rena.com/reports/2021-04-marginswap#h-09-lastupdatedday-not-initialized, ""
3, H-11, L4, 1, "Impossible to call withdrawReward fails due to run out of gas", https://code4rena.com/reports/2021-04-marginswap#h-11-impossible-to-call-withdrawreward-fails-due-to-run-out-of-gas, ""
5, H-01, O6, 2, "Unhandled return value of transfer in transferOut() of Pools.sol", https://code4rena.com/reports/2021-04-vader#h-01-unhandled-return-value-of-transfer-in-transferout-of-poolssol, ""
5, H-02, O7, 1, "Flash attack mitigation does not work as intended in USDV.sol", https://code4rena.com/reports/2021-04-vader#h-02-flash-attack-mitigation-does-not-work-as-intended-in-usdvsol, "non-critical"
5, H-03, SC, 1, "Missing DAO functionality to call changeDAO() function in Vader.sol", https://code4rena.com/reports/2021-04-vader#h-03-missing-dao-functionality-to-call-changedao-function-in-vadersol, ""
5, H-04, SE-4, 1, "Proposals can be cancelled", https://code4rena.com/reports/2021-04-vader#h-04-proposals-can-be-cancelled, ""
5, H-05, SE-2, 3, "Flash loans can affect governance voting in DAO.sol", https://code4rena.com/reports/2021-04-vader#h-05-flash-loans-can-affect-governance-voting-in-daosol, ""
5, H-06, O7, 1, "Incorrect burn address in Vader.sol", https://code4rena.com/reports/2021-04-vader#h-06-incorrect-burn-address-in-vadersol, "non-critical"
5, H-07, S6-4, 1, "Wrong calcAsymmetricShare calculation", https://code4rena.com/reports/2021-04-vader#h-07-wrong-calcasymmetricshare-calculation, ""
5, H-08, S6-4, 3, "Wrong liquidity units calculation", https://code4rena.com/reports/2021-04-vader#h-08-wrong-liquidity-units-calculation, ""
5, H-09, O5, 3, "Incorrect initialization gives IL protection of only 1 second instead of 100 days in Router.sol", https://code4rena.com/reports/2021-04-vader#h-09-incorrect-initialization-gives-il-protection-of-only-1-second-instead-of-100-days-in-routersol, ""
5, H-10, S5-3, 1, "Anyone can list anchors / curate tokens", https://code4rena.com/reports/2021-04-vader#h-10-anyone-can-list-anchors--curate-tokens, ""
5, H-11, S2-1, 2, "Swap token can be traded as fake base token", https://code4rena.com/reports/2021-04-vader#h-11-swap-token-can-be-traded-as-fake-base-token, ""
5, H-12, S6-4, 1, "getAddedAmount can return wrong results", https://code4rena.com/reports/2021-04-vader#h-12-getaddedamount-can-return-wrong-results, ""
5, H-13, S2-1, 1, "4 Synths can be minted with fake base token", https://code4rena.com/reports/2021-04-vader#h-13-4-synths-can-be-minted-with-fake-base-token, ""
5, H-14, S5-3, 1, "Missing access restriction on lockUnits/unlockUnits", https://code4rena.com/reports/2021-04-vader#h-14-missing-access-restriction-on-lockunitsunlockunits, ""
5, H-15, S6-3, 4, "Wrong slippage protection on Token -> Token trades", https://code4rena.com/reports/2021-04-vader#h-15-wrong-slippage-protection-on-token---token-trades, ""
5, H-16, LB, 1, "Tokens can be stolen through transferTo", https://code4rena.com/reports/2021-04-vader#h-16-tokens-can-be-stolen-through-transferto, ""
5, H-17, SC, 2, "Transfer fee is burned on wrong accounts", https://code4rena.com/reports/2021-04-vader#h-17-transfer-fee-is-burned-on-wrong-accounts, ""
5, H-18, SE-1, 1, "Vault rewards can be gamed", https://code4rena.com/reports/2021-04-vader#h-18--vault-rewards-can-be-gamed, ""
5, H-19, L3, 1, "Vault rewards last claim time not always initialized", https://code4rena.com/reports/2021-04-vader#h-19-vault-rewards-last-claim-time-not-always-initialized, ""
5, H-20, SC, 1, "Vault Weight accounting is wrong for withdrawals", https://code4rena.com/reports/2021-04-vader#h-20-vault-weight-accounting-is-wrong-for-withdrawals, ""
5, H-21, S5-3, 1, "Anyone Can Avoid All Vether Transfer Fees By Adding Their Address to the Vether ExcludedAddresses List.", https://code4rena.com/reports/2021-04-vader#h-21-anyone-can-avoid-all-vether-transfer-fees-by-adding-their-address-to-the-vether-excludedaddresses-list, ""
5, H-22, LB, 2, "Users may unintentionally remove liquidity under a phishing attack.", https://code4rena.com/reports/2021-04-vader#h-22-users-may-unintentionally-remove-liquidity-under-a-phishing-attack, ""
5, H-23, S5-3, 1, "Anyone can curate pools and steal rewards", https://code4rena.com/reports/2021-04-vader#h-23-anyone-can-curate-pools-and-steal-rewards, ""
5, H-25, O7, 2, "Incorrect initialization causes VADER emission rate of 1 second instead of 1 day in Vader.sol", https://code4rena.com/reports/2021-04-vader#h-25-incorrect-initialization-causes-vader-emission-rate-of-1-second-instead-of-1-day-in-vadersol, "duplicate of H-09"
6, H-00, O7, 1, "ERC-721 Enumerable Spec mismatch for index of tokenByIndex() function", https://code4rena.com/reports/2021-04-meebits#h-00-erc-721-enumerable-spec-mismatch-for-index-of-tokenbyindex-function, "non-critical"
6, H-01, LA, 1, "Signature malleability of EVM’s ecrecover in verify()", https://code4rena.com/reports/2021-04-meebits#h-01-signature-malleability-of-evms-ecrecover-in-verify, ""
6, H-02, LA, 1, "Arbitrary Transfer of Unowned NFTs", https://code4rena.com/reports/2021-04-meebits#h-02-arbitrary-transfer-of-unowned-nfts, ""
6, H-03, O7, 1, "Beebots.TradeValid() Will Erroneously Return True When Maker Is Set To Address(0) and makerIds Are Set To The TokenIds of Unminted Beebot NFTs", https://code4rena.com/reports/2021-04-meebits#h-03-beebotstradevalid-will-erroneously-return-true-when-maker-is-set-to-address0-and-makerids-are-set-to-the-tokenids-of-unminted-beebot-nfts, "duplicate of H-02"
6, H-04, O7, 1, "function tokenByIndex treats last index as invalid", https://code4rena.com/reports/2021-04-meebits#h-04-function-tokenbyindex-treats-last-index-as-invalid, "non-critical"
6, H-05, O7, 1, "NFT can be minted for free after sale ended", https://code4rena.com/reports/2021-04-meebits#h-05-nft-can-be-minted-for-free-after-sale-ended, "non-critical"
7, H-01, L3, 1, "UniswapConfig getters return wrong token config if token config does not exist", https://code4rena.com/reports/2021-04-basedloans#h-01-uniswapconfig-getters-return-wrong-token-config-if-token-config-does-not-exist, ""
7, H-02, O7, 2, "uint(-1) index for not found", https://code4rena.com/reports/2021-04-basedloans#h-02-uint-1-index-for-not-found, "duplicate of H-01"
8, H-01, L7, 4, "Missing overflow check in flashLoan", https://code4rena.com/reports/2021-05-nftx#h-01-missing-overflow-check-in-flashloan, ""
8, H-02, O1, 5, "distribute DoS on missing receiveRewards implementation", https://code4rena.com/reports/2021-05-nftx#h-02-distribute-dos-on-missing-receiverewards-implementation, ""
8, H-03, S6-4, 2, "getRandomTokenIdFromFund yields wrong probabilities for ERC1155", https://code4rena.com/reports/2021-05-nftx#h-03-getrandomtokenidfromfund-yields-wrong-probabilities-for-erc1155, ""
8, H-04, SE-1, 2, "NFTXLPStaking Is Subject To A Flash Loan Attack That Can Steal Nearly All Rewards/Fees That Have Accrued For A Particular Vault", https://code4rena.com/reports/2021-05-nftx#h-04-nftxlpstaking-is-subject-to-a-flash-loan-attack-that-can-steal-nearly-all-rewardsfees-that-have-accrued-for-a-particular-vault, ""
10, H-01, SE-1, 2, "A previously timelocked NFT token becomes permanently stuck in vault if it’s ever moved back into the vault", https://code4rena.com/reports/2021-05-visorfinance#h-01-a-previously-timelocked-nft-token-becomes-permanently-stuck-in-vault-if-its-ever-moved-back-into-the-vault, ""
10, H-02, S3-1, 2, "NFT transfer approvals are not removed and cannot be revoked thus leading to loss of NFT tokens", https://code4rena.com/reports/2021-05-visorfinance#h-02-nft-transfer-approvals-are-not-removed-and-cannot-be-revoked-thus-leading-to-loss-of-nft-tokens, ""
10, H-03, S3-1, 3, "Approval for NFT transfers is not removed after transfer", https://code4rena.com/reports/2021-05-visorfinance#h-03-approval-for-nft-transfers-is-not-removed-after-transfer, ""
10, H-04, L4, 6, "Unbounded loop in _removeNft could lead to a griefing/DOS attack", https://code4rena.com/reports/2021-05-visorfinance#h-04-unbounded-loop-in-_removenft-could-lead-to-a-griefingdos-attack, ""
11, H-01, O2, 1, "Conviction scoring fails to initialize and bootstrap", https://code4rena.com/reports/2021-05-fairside#h-01-conviction-scoring-fails-to-initialize-and-bootstrap, ""
11, H-02, O2, 3, "Locked funds are debited twice from the user during tokenization leading to fund loss", https://code4rena.com/reports/2021-05-fairside#h-02-locked-funds-are-debited-twice-from-the-user-during-tokenization-leading-to-fund-loss, ""
11, H-03, O2, 2, "Locked funds from tokenization are credited twice to user leading to protocol fund loss", https://code4rena.com/reports/2021-05-fairside#h-03-locked-funds-from-tokenization-are-credited-twice-to-user-leading-to-protocol-fund-loss, ""
11, H-04, O2, 1, "ERC20ConvictionScore’s governanceDelta should be subtracted when user is not a governor anymore", https://code4rena.com/reports/2021-05-fairside#h-04-erc20convictionscores-governancedelta-should-be-subtracted-when-user-is-not-a-governor-anymore, ""
11, H-05, O2, 3, "Withdrawable.withdraw does not decrease pendingWithdrawals", https://code4rena.com/reports/2021-05-fairside#h-05-withdrawablewithdraw-does-not-decrease-pendingwithdrawals, ""
11, H-06, O2, 2, "Incorrect type conversion in the contract ABC makes users unable to burn FSD tokens", https://code4rena.com/reports/2021-05-fairside#h-06-incorrect-type-conversion-in-the-contract-abc-makes-users-unable-to-burn-fsd-tokens, ""
11, H-07, O2, 1, "ERC20ConvictionScore._updateConvictionScore uses stale credit score for governanceDelta", https://code4rena.com/reports/2021-05-fairside#h-07-erc20convictionscore_updateconvictionscore-uses-stale-credit-score-for-governancedelta, ""
11, H-08, O2, 1, "Incorrect implementation of arctan in the contract FairSideFormula", https://code4rena.com/reports/2021-05-fairside#h-08-incorrect-implementation-of-arctan-in-the-contract-fairsideformula, ""
12, H-01, SE-4, 2, "Duplication of Balance", https://code4rena.com/reports/2021-05-yield#h-01-duplication-of-balance, ""
12, H-02, O1, 1, "auth collision possible", https://code4rena.com/reports/2021-05-yield#h-02-auth-collision-possible, ""
12, H-03, S6-4, 1, "YieldMath.sol / Log2: >= or > ?", https://code4rena.com/reports/2021-05-yield#h-03-yieldmathsol--log2--or--, ""
13, H-01, L8, 8, "Unchecked ERC20 transfers can cause lock up", https://code4rena.com/reports/2021-06-realitycards#h-01-unchecked-erc20-transfers-can-cause-lock-up, ""
13, H-02, SE-4, 1, "Can access cards of other markets", https://code4rena.com/reports/2021-06-realitycards#h-02-can-access-cards-of-other-markets, ""
13, H-03, S5-3, 4, "anyone can call function sponsor", https://code4rena.com/reports/2021-06-realitycards#h-03-anyone-can-call-function-sponsor, ""
13, H-04, S5-1, 1, "Anyone can affect deposits of any user and turn the owner of the token", https://code4rena.com/reports/2021-06-realitycards#h-04-anyone-can-affect-deposits-of-any-user-and-turn-the-owner-of-the-token, ""
14, H-01, S6-3, 1, "User could lose underlying tokens when redeeming from the IdleYieldSource", https://code4rena.com/reports/2021-06-pooltogether#h-01-user-could-lose-underlying-tokens-when-redeeming-from-the-idleyieldsource, ""
14, H-02, L7, 2, "YearnV2YieldSource wrong subtraction in withdraw", https://code4rena.com/reports/2021-06-pooltogether#h-02-yearnv2yieldsource-wrong-subtraction-in-withdraw, ""
14, H-03, S6-3, 1, "BadgerYieldSource balanceOfToken share calculation seems wrong", https://code4rena.com/reports/2021-06-pooltogether#h-03-badgeryieldsource-balanceoftoken-share-calculation-seems-wrong, ""
14, H-04, S3-2, 1, "withdraw timelock can be circumvented", https://code4rena.com/reports/2021-06-pooltogether#h-04-withdraw-timelock-can-be-circumvented, ""
14, H-05, L2, 1, "IdleYieldSource doesn’t use mantissa calculations", https://code4rena.com/reports/2021-06-pooltogether#h-05-idleyieldsource-doesnt-use-mantissa-calculations, ""
16, H-01, S1-3, 2, "Wrong trading pricing calculations", https://code4rena.com/reports/2021-06-tracer#h-01-wrong-trading-pricing-calculations, ""
16, H-02, S6-3, 1, "Use of incorrect index leads to incorrect updation of funding rates", https://code4rena.com/reports/2021-06-tracer#h-02-use-of-incorrect-index-leads-to-incorrect-updation-of-funding-rates, ""
16, H-03, O1, 3, "Malicious owner can drain the market at any time using SafetyWithdraw", https://code4rena.com/reports/2021-06-tracer#h-03-malicious-owner-can-drain-the-market-at-any-time-using-safetywithdraw, ""
16, H-04, S6-4, 1, "Logic error in fee subtraction", https://code4rena.com/reports/2021-06-tracer#h-04-logic-error-in-fee-subtraction, ""
16, H-05, SE-4, 1, "Insurance slippage reimbursement can be used to steal insurance fund", https://code4rena.com/reports/2021-06-tracer#h-05-insurance-slippage-reimbursement-can-be-used-to-steal-insurance-fund, ""
16, H-06, S6-4, 1, "Wrong price scale for GasOracle", https://code4rena.com/reports/2021-06-tracer#h-06-wrong-price-scale-for-gasoracle, ""
17, H-01, L7, 2, "implicit underflows", https://code4rena.com/reports/2021-06-gro#h-01-implicit-underflows, ""
17, H-02, S6-4, 2, "Buoy3Pool.safetyCheck is not precise and has some assumptions", https://code4rena.com/reports/2021-06-gro#h-02-buoy3poolsafetycheck-is-not-precise-and-has-some-assumptions, ""
17, H-03, S5-3, 3, "Incorrect use of operator leads to arbitrary minting of GVT tokens", https://code4rena.com/reports/2021-06-gro#h-03-incorrect-use-of-operator-leads-to-arbitrary-minting-of-gvt-tokens, ""
17, H-04, L3, 2, "sortVaultsByDelta doesn’t work as expected", https://code4rena.com/reports/2021-06-gro#h-04-sortvaultsbydelta-doesnt-work-as-expected, ""
18, H-01, S6-1, 1, "Reward computation is wrong", https://code4rena.com/reports/2021-07-wildcredit#h-01-reward-computation-is-wrong, ""
18, H-02, S3-1, 1, "LendingPair.liquidateAccount does not accrue and update cumulativeInterestRate", https://code4rena.com/reports/2021-07-wildcredit#h-02-lendingpairliquidateaccount-does-not-accrue-and-update-cumulativeinterestrate, ""
18, H-03, SE-2, 1, "LendingPair.liquidateAccount fails if tokens are lent out", https://code4rena.com/reports/2021-07-wildcredit#h-03-lendingpairliquidateaccount-fails-if-tokens-are-lent-out, ""
19, H-01, S2-1, 3, "Anyone can arbitrarily add router liquidity", https://code4rena.com/reports/2021-07-connext-findings#h-01-anyone-can-arbitrarily-add-router-liquidity, ""
19, H-02, L4, 3, "activeTransactionBlocks are vulnerable to DDoS attacks", https://code4rena.com/reports/2021-07-connext-findings#h-02-activetransactionblocks-are-vulnerable-to-ddos-attacks, ""
19, H-03, SC, 6, "Router liquidity on receiving chain can be double-dipped by the user", https://code4rena.com/reports/2021-07-connext-findings#h-03-router-liquidity-on-receiving-chain-can-be-double-dipped-by-the-user, ""
19, H-04, SE-2, 1, "Expired transfers will lock user funds on the sending chain", https://code4rena.com/reports/2021-07-connext-findings#h-04-expired-transfers-will-lock-user-funds-on-the-sending-chain, ""
19, H-05, S3-1, 4, "Approval is not reset if the call to IFulfillHelper fails", https://code4rena.com/reports/2021-07-connext-findings#h-05-approval-is-not-reset-if-the-call-to-ifulfillhelper-fails, ""
20, H-01, O6, 1, "SynthVault withdraw forfeits rewards", https://code4rena.com/reports/2021-07-spartan#h-01-synthvault-withdraw-forfeits-rewards, ""
20, H-02, SC, 5, "Pool.sol & Synth.sol: Failing Max Value Allowance", https://code4rena.com/reports/2021-07-spartan#h-02-poolsol--synthsol-failing-max-value-allowance, ""
20, H-03, L8, 11, "Result of transfer / transferFrom not checked", https://code4rena.com/reports/2021-07-spartan#h-03-result-of-transfer--transferfrom-not-checked, ""
20, H-04, O5, 2, "Members lose SPARTA tokens in removeLiquiditySingle()", https://code4rena.com/reports/2021-07-spartan#h-04-members-lose-sparta-tokens-in-removeliquiditysingle, ""
20, H-05, S1-1, 2, "Synth realise is vulnerable to flash loan attacks", https://code4rena.com/reports/2021-07-spartan#h-05-synth-realise-is-vulnerable-to-flash-loan-attacks, ""
20, H-06, S1-1, 1, "SynthVault rewards can be gamed", https://code4rena.com/reports/2021-07-spartan#h-06-synthvault-rewards-can-be-gamed, ""
20, H-07, S1-2, 2, "Missing slippage checks", https://code4rena.com/reports/2021-07-spartan#h-07-missing-slippage-checks, ""
20, H-08, SC, 1, "Dividend reward can be gamed", https://code4rena.com/reports/2021-07-spartan#h-08-dividend-reward-can-be-gamed, ""
20, H-09, S2-2, 1, "arbitrary synth mint/burn from pool", https://code4rena.com/reports/2021-07-spartan#h-09-arbitrary-synth-mintburn-from-pool, ""
20, H-10, O3, 1, "Hijack token pool by burning liquidity token", https://code4rena.com/reports/2021-07-spartan#h-10-hijack-token-pool-by-burning-liquidity-token, ""
20, H-11, SC, 1, "Misuse of AMM model on minting Synth (resubmit to add more detail)", https://code4rena.com/reports/2021-07-spartan#h-11-misuse-of-amm-model-on-minting-synth-resubmit-to-add-more-detail, ""
20, H-12, SC, 1, "wrong calcLiquidityHoldings that leads to dead fund in the Pool", https://code4rena.com/reports/2021-07-spartan#h-12-wrong-calcliquidityholdings-that-leads-to-dead-fund-in-the-pool, ""
20, H-13, S1-1, 1, "Flash loan manipulation on getPoolShareWeight of Utils", https://code4rena.com/reports/2021-07-spartan#h-13-flash-loan-manipulation-on-getpoolshareweight-of-utils, ""
21, H-01, O6, 3, "Single under-funded protocol can break paying off debt", https://code4rena.com/reports/2021-07-sherlock#h-01-single-under-funded-protocol-can-break-paying-off-debt, ""
21, H-02, SC, 3, "A critical bug in bps function", https://code4rena.com/reports/2021-07-sherlock#h-02-bug-a-critical-bug-in-bps-function, ""
22, H-01, O5, 3, "copy paste error in _batchConfirmOutstandingPendingActions", https://code4rena.com/reports/2021-08-floatcapital#h-01-copy-paste-error-in-_batchconfirmoutstandingpendingactions, ""
22, H-02, S2-3, 1, "2 variables not indexed by marketIndex", https://code4rena.com/reports/2021-08-floatcapital#h-02-2-variables-not-indexed-by-marketindex, ""
22, H-03, SE-3, 1, "Users could shift tokens on Staker with more than he has staked", https://code4rena.com/reports/2021-08-floatcapital#h-03-users-could-shift-tokens-on-staker-with-more-than-he-has-staked, ""
23, H-01, SE-4, 2, "Self transfer can lead to unlimited mint", https://code4rena.com/reports/2021-08-notional#h-01-self-transfer-can-lead-to-unlimited-mint, ""
23, H-02, L1, 2, "DAO proposals can be executed by anyone due to vulnerable TimelockController", https://code4rena.com/reports/2021-08-notional#h-02-dao-proposals-can-be-executed-by-anyone-due-to-vulnerable-timelockcontroller, ""
23, H-03, L8, 1, "CompoundToNotionalV2.notionalCallback ERC20 return values not checked", https://code4rena.com/reports/2021-08-notional#h-03-compoundtonotionalv2notionalcallback-erc20-return-values-not-checked, ""
23, H-04, S2-1, 1, "Access restrictions on CompoundToNotionalV2.notionalCallback can be bypassed", https://code4rena.com/reports/2021-08-notional#h-04-access-restrictions-on-compoundtonotionalv2notionalcallback-can-be-bypassed, ""
23, H-05, S2-1, 2, "Access restrictions on NotionalV1ToNotionalV2.notionalCallback can be bypassed", https://code4rena.com/reports/2021-08-notional#h-05-access-restrictions-on-notionalv1tonotionalv2notionalcallback-can-be-bypassed, ""
23, H-06, L8, 1, "TokenHandler.safeTransferOut does not work on non-standard compliant tokens like USDT", https://code4rena.com/reports/2021-08-notional#h-06-tokenhandlersafetransferout-does-not-work-on-non-standard-compliant-tokens-like-usdt, ""
23, H-07, L8, 1, "TokenHandler.safeTransferIn does not work on non-standard compliant tokens like USDT", https://code4rena.com/reports/2021-08-notional#h-07-tokenhandlersafetransferin-does-not-work-on-non-standard-compliant-tokens-like-usdt, ""
23, H-08, O4, 1, "DOS by Frontrunning NoteERC20 initialize() Function", https://code4rena.com/reports/2021-08-notional#h-08-dos-by-frontrunning-noteerc20-initialize-function, ""
23, H-09, L5, 1, "Potential DOS in Contracts Inheriting UUPSUpgradeable.sol", https://code4rena.com/reports/2021-08-notional#h-09-potential-dos-in-contracts-inheriting-uupsupgradeablesol, ""
23, H-10, S1-1, 1, "Liquidity token value can be manipulated", https://code4rena.com/reports/2021-08-notional#h-10-liquidity-token-value-can-be-manipulated, ""
24, H-01, O1, 3, "onlyOwnerOrAssetManager can swap Yield Source in SwappableYieldSource at any time, immediately rugging all funds from old yield source", https://code4rena.com/reports/2021-07-pooltogether#h-01-onlyownerorassetmanager-can-swap-yield-source-in-swappableyieldsource-at-any-time-immediately-rugging-all-funds-from-old-yield-source, ""
24, H-02, L8, 4, "redeemToken can fail for certain tokens", https://code4rena.com/reports/2021-07-pooltogether#h-02-redeemtoken-can-fail-for-certain-tokens, ""
24, H-03, S3-1, 1, "setYieldSource leads to temporary wrong results", https://code4rena.com/reports/2021-07-pooltogether#h-03-setyieldsource-leads-to-temporary-wrong-results, ""
24, H-04, SE-4, 2, "SwappableYieldSource: Missing same deposit token check in transferFunds()", https://code4rena.com/reports/2021-07-pooltogether#h-04-swappableyieldsource-missing-same-deposit-token-check-in-transferfunds, ""
25, H-01, S6-4, 1, "CompositeMultiOracle returns wrong decimals for prices?", https://code4rena.com/reports/2021-08-yield#h-01-compositemultioracle-returns-wrong-decimals-for-prices, ""
25, H-02, S3-1, 1, "ERC20Rewards returns wrong rewards if no tokens initially exist", https://code4rena.com/reports/2021-08-yield#h-02-erc20rewards-returns-wrong-rewards-if-no-tokens-initially-exist, ""
25, H-03, S6-4, 1, "ERC20Rewards breaks when setting a different token", https://code4rena.com/reports/2021-08-yield#h-03-erc20rewards-breaks-when-setting-a-different-token, ""
25, H-04, O6, 1, "Rewards accumulated can stay constant and often not increment", https://code4rena.com/reports/2021-08-yield#h-04-rewards-accumulated-can-stay-constant-and-often-not-increment, ""
25, H-05, S6-4, 1, "Exchange rates from Compound are assumed with 18 decimals", https://code4rena.com/reports/2021-08-yield#h-05-exchange-rates-from-compound-are-assumed-with-18-decimals, ""
26, H-01, SC, 1, "findNewOwner edgecase", https://code4rena.com/reports/2021-08-realitycards#h-01-findnewowner-edgecase, ""
26, H-02, O6, 1, "UberOwner has too much power", https://code4rena.com/reports/2021-08-realitycards#h-02-uberowner-has-too-much-power, ""
27, H-01, O4, 1, "Cannot actually submit evidence", https://code4rena.com/reports/2021-08-gravitybridge#h-01-cannot-actually-submit-evidence, ""
27, H-02, O4, 1, "Freeze Bridge via Non-UTF8 Token Name/Symbol/Denom", https://code4rena.com/reports/2021-08-gravitybridge#h-02-freeze-bridge-via-non-utf8-token-namesymboldenom, ""
27, H-03, O4, 1, "Freeze The Bridge Via Large ERC20 Names/Symbols/Denoms", https://code4rena.com/reports/2021-08-gravitybridge#h-03-freeze-the-bridge-via-large-erc20-namessymbolsdenoms, ""
27, H-04, O4, 1, "Large Validator Sets/Rapid Validator Set Updates May Freeze the Bridge or Relayers", https://code4rena.com/reports/2021-08-gravitybridge#h-04-large-validator-setsrapid-validator-set-updates-may-freeze-the-bridge-or-relayers, ""
28, H-01, SE-2, 4, "PostAuctionLauncher.sol#finalize() Adding liquidity to an existing pool may allows the attacker to steal most of the tokens", https://code4rena.com/reports/2021-09-sushimiso#h-01-postauctionlaunchersolfinalize-adding-liquidity-to-an-existing-pool-may-allows-the-attacker-to-steal-most-of-the-tokens, ""
28, H-02, SC, 1, "SushiToken transfers are broken due to wrong delegates accounting on transfers", https://code4rena.com/reports/2021-09-sushimiso#h-02-sushitoken-transfers-are-broken-due-to-wrong-delegates-accounting-on-transfers, ""
28, H-03, SE-1, 1, "Last person to withdraw his tokens might not be able to do this, in Crowdsale (edge case)", https://code4rena.com/reports/2021-09-sushimiso#h-03-last-person-to-withdraw-his-tokens-might-not-be-able-to-do-this-in-crowdsale-edge-case, ""
29, H-01, O5, 3, "Flash swap call back prior to transferring tokens in indexPool", https://code4rena.com/reports/2021-09-sushitrident#h-01-flash-swap-call-back-prior-to-transferring-tokens-in-indexpool, ""
29, H-02, O5, 4, "Index Pool always swap to Zero", https://code4rena.com/reports/2021-09-sushitrident#h-02-index-pool-always-swap-to-zero, "good example"
29, H-03, L7, 1, "IndexPool pow overflows when weightRatio > 10.", https://code4rena.com/reports/2021-09-sushitrident#h-03-indexpool-pow-overflows-when-weightratio--10, ""
29, H-04, SC, 2, "IndexPool’s INIT_POOL_SUPPLY is not fair.", https://code4rena.com/reports/2021-09-sushitrident#h-04-indexpools-init_pool_supply-is-not-fair, ""
29, H-05, S6-4, 1, "hybrid pool uses wrong non_optimal_mint_fee", https://code4rena.com/reports/2021-09-sushitrident#h-05-hybrid-pool-uses-wrong-non_optimal_mint_fee, ""
29, H-06, O5, 1, "IndexPool:  Poor conversion from Balancer V1’s corresponding functions", https://code4rena.com/reports/2021-09-sushitrident#h-06-indexpool--poor-conversion-from-balancer-v1s-corresponding-functions, ""
29, H-07, SC, 2, "IndexPool.mint The first liquidity provider is forced to supply assets in the same amount, which may cause a significant amount of fund loss", https://code4rena.com/reports/2021-09-sushitrident#h-07-indexpoolmint-the-first-liquidity-provider-is-forced-to-supply-assets-in-the-same-amount-which-may-cause-a-significant-amount-of-fund-loss, ""
29, H-08, S6-4, 3, "HybridPool’s reserve is converted to “amount” twice", https://code4rena.com/reports/2021-09-sushitrident#h-08-hybridpools-reserve-is-converted-to-amount-twice, ""
29, H-09, L7, 2, "Unsafe cast in IndexPool mint leads to attack", https://code4rena.com/reports/2021-09-sushitrident#h-09-unsafe-cast-in-indexpool-mint-leads-to-attack, ""
29, H-10, O7, 1, "IndexPool initial LP supply computation is wrong", https://code4rena.com/reports/2021-09-sushitrident#h-10-indexpool-initial-lp-supply-computation-is-wrong, "duplicated of H-07"
29, H-11, S6-3, 1, "ConstantProductPool.burnSingle swap amount computations should use balance", https://code4rena.com/reports/2021-09-sushitrident#h-11-constantproductpoolburnsingle-swap-amount-computations-should-use-balance, ""
29, H-12, O5, 2, "absolute difference is not calculated properly when a > b in MathUtils", https://code4rena.com/reports/2021-09-sushitrident#h-12-absolute-difference-is-not-calculated-properly-when-a--b-in-mathutils, ""
29, H-13, L7, 2, "Overflow in the mint function of IndexPool causes LPs’ funds to be stolen", https://code4rena.com/reports/2021-09-sushitrident#h-13-overflow-in-the-mint-function-of-indexpool-causes-lps-funds-to-be-stolen, ""
29, H-14, S6-4, 1, "Incorrect usage of _pow in _computeSingleOutGivenPoolIn of IndexPool", https://code4rena.com/reports/2021-09-sushitrident#h-14-incorrect-usage-of-_pow-in-_computesingleoutgivenpoolin-of-indexpool, ""
29, H-15, S6-4, 1, "Incorrect multiplication in _computeSingleOutGivenPoolIn of IndexPool", https://code4rena.com/reports/2021-09-sushitrident#h-15-incorrect-multiplication-in-_computesingleoutgivenpoolin-of-indexpool, ""
29, H-16, L1, 1, "Funds in the pool could be stolen by exploiting flashSwap in HybridPool", https://code4rena.com/reports/2021-09-sushitrident#h-16-funds-in-the-pool-could-be-stolen-by-exploiting-flashswap-in-hybridpool, ""
30, H-01, S6-3, 1, "Controller.setCap sets wrong vault balance", https://code4rena.com/reports/2021-09-yaxis#h-01-controllersetcap-sets-wrong-vault-balance, ""
30, H-02, O7, 2, "set cap breaks vault’s Balance", https://code4rena.com/reports/2021-09-yaxis#h-02--set-cap-breaks-vaults-balance, "duplicate of H-01"
30, H-03, O1, 3, "No safety check in addToken", https://code4rena.com/reports/2021-09-yaxis#h-03-no-safety-check-in-addtoken, ""
30, H-04, SC, 3, "Controller does not raise an error when there’s insufficient liquidity", https://code4rena.com/reports/2021-09-yaxis#h-04-controller-does-not-raise-an-error-when-theres-insufficient-liquidity, ""
30, H-05, O6, 3, "Vault treats all tokens exactly the same that creates (huge) arbitrage opportunities.", https://code4rena.com/reports/2021-09-yaxis#h-05-vault-treats-all-tokens-exactly-the-same-that-creates-huge-arbitrage-opportunities, ""
30, H-06, O6, 1, "earn results in decreasing share price", https://code4rena.com/reports/2021-09-yaxis#h-06-earn-results-in-decreasing-share-price, ""
30, H-07, S6-4, 1, "Vault.balance() mixes normalized and standard amounts", https://code4rena.com/reports/2021-09-yaxis#h-07-vaultbalance-mixes-normalized-and-standard-amounts, ""
30, H-08, S6-4, 3, "Vault.withdraw mixes normalized and standard amounts", https://code4rena.com/reports/2021-09-yaxis#h-08-vaultwithdraw-mixes-normalized-and-standard-amounts, ""
30, H-09, O1, 1, "removeToken would break the vault/protocol.", https://code4rena.com/reports/2021-09-yaxis#h-09-removetoken-would-break-the-vaultprotocol, ""
30, H-10, O6, 3, "An attacker can steal funds from multi-token vaults", https://code4rena.com/reports/2021-09-yaxis#h-10-an-attacker-can-steal-funds-from-multi-token-vaults, ""
31, H-01, S6-4, 2, "veCVXStrategy.manualRebalance has wrong logic", https://code4rena.com/reports/2021-09-bvecvx#h-01-vecvxstrategymanualrebalance-has-wrong-logic, ""
32, H-01, S6-3, 2, "Use of tokenB’s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency", https://code4rena.com/reports/2021-09-wildcredit#h-01-use-of-tokenbs-price-instead-of-tokena-in-determining-account-health-will-lead-to-protocol-mis-accounting-and-insolvency, ""
32, H-02, SE-2, 1, "Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity", https://code4rena.com/reports/2021-09-wildcredit#h-02-liquidation-can-be-escaped-by-depositing-a-uni-v3-position-with-0-liquidity, ""
34, H-01, S6-4, 2, "The formula of number of prizes for a degree is wrong", https://code4rena.com/reports/2021-10-pooltogether#h-01-the-formula-of-number-of-prizes-for-a-degree-is-wrong, ""
34, H-02, O7, 1, "Miners Can Re-Roll the VRF Output to Game the Protocol", https://code4rena.com/reports/2021-10-pooltogether#h-02-miners-can-re-roll-the-vrf-output-to-game-the-protocol, ""
35, H-01, L7, 2, "Unsafe cast in ConcentratedLiquidityPool.burn leads to attack", https://code4rena.com/reports/2021-09-sushitrident-2#h-01-unsafe-cast-in-concentratedliquiditypoolburn-leads-to-attack, ""
35, H-02, SC, 5, "Wrong usage of positionId in ConcentratedLiquidityPoolManager", https://code4rena.com/reports/2021-09-sushitrident-2#h-02-wrong-usage-of-positionid-in-concentratedliquiditypoolmanager, ""
35, H-03, S3-1, 5, "ConcentratedLiquidityPoolManager’s incentives can be stolen", https://code4rena.com/reports/2021-09-sushitrident-2#h-03-concentratedliquiditypoolmanagers-incentives-can-be-stolen, ""
35, H-04, L7, 1, "Overflow in the mint function of ConcentratedLiquidityPool causes LPs’ funds to be stolen", https://code4rena.com/reports/2021-09-sushitrident-2#h-04-overflow-in-the-mint-function-of-concentratedliquiditypool-causes-lps-funds-to-be-stolen, ""
35, H-05, L7, 1, "Incorrect usage of typecasting in _getAmountsForLiquidity lets an attacker steal funds from the pool", https://code4rena.com/reports/2021-09-sushitrident-2#h-05-incorrect-usage-of-typecasting-in-_getamountsforliquidity-lets-an-attacker-steal-funds-from-the-pool, ""
35, H-06, SC, 1, "ConcentratedLiquidityPosition.sol#collect() Users may get double the amount of yield when they call collect() before burn()", https://code4rena.com/reports/2021-09-sushitrident-2#h-06-concentratedliquiditypositionsolcollect-users-may-get-double-the-amount-of-yield-when-they-call-collect-before-burn, ""
35, H-07, SC, 1, "ConcentratedLiquidityPosition.sol#burn() Wrong implementation allows attackers to steal yield", https://code4rena.com/reports/2021-09-sushitrident-2#h-07-concentratedliquiditypositionsolburn-wrong-implementation-allows-attackers-to-steal-yield, ""
35, H-08, S6-4, 1, "Wrong inequality when adding/removing liquidity in current price range", https://code4rena.com/reports/2021-09-sushitrident-2#h-08-wrong-inequality-when-addingremoving-liquidity-in-current-price-range, ""
35, H-09, L7, 1, "range fee growth underflow", https://code4rena.com/reports/2021-09-sushitrident-2#h-09-range-fee-growth-underflow, ""
35, H-10, S6-3, 1, "ConcentratedLiquidityPool.burn() Wrong implementation", https://code4rena.com/reports/2021-09-sushitrident-2#h-10-concentratedliquiditypoolburn-wrong-implementation, ""
35, H-11, S6-4, 1, "ConcentratedLiquidityPool: incorrect feeGrowthGlobal accounting when crossing ticks", https://code4rena.com/reports/2021-09-sushitrident-2#h-11-concentratedliquiditypool-incorrect-feegrowthglobal-accounting-when-crossing-ticks, ""
35, H-12, S6-1, 1, "ConcentratedLiquidityPool: secondsPerLiquidity should be modified whenever pool liquidity changes", https://code4rena.com/reports/2021-09-sushitrident-2#h-12-concentratedliquiditypool-secondsperliquidity-should-be-modified-whenever-pool-liquidity-changes, ""
35, H-13, O7, 4, "Burning does not update reserves", https://code4rena.com/reports/2021-09-sushitrident-2#h-13-burning-does-not-update-reserves, "duplicated of H-10"
35, H-14, L7, 1, "ConcentratedLiquidityPool: rangeFeeGrowth and secondsPerLiquidity math needs to be unchecked", https://code4rena.com/reports/2021-09-sushitrident-2#h-14-concentratedliquiditypool-rangefeegrowth-and-secondsperliquidity-math-needs-to-be-unchecked, ""
35, H-15, L7, 1, "ConcentratedLiquidityPool: initialPrice should be checked to be within allowable range", https://code4rena.com/reports/2021-09-sushitrident-2#h-15-concentratedliquiditypool-initialprice-should-be-checked-to-be-within-allowable-range, ""
35, H-16, O3, 1, "Possible attacks on Seconds * Liquidity calculation", https://code4rena.com/reports/2021-09-sushitrident-2#h-16-possible-attacks-on-seconds--liquidity-calculation, ""
35, H-17, SC, 1, "Understanding the fee growth mechanism (why nearestTick is unsuitable)", https://code4rena.com/reports/2021-09-sushitrident-2#h-17-understanding-the-fee-growth-mechanism-why-nearesttick-is-unsuitable, "good learning material"
36, H-01, L1, 1, "Re-entrancy in settleAuction allow stealing all funds", https://code4rena.com/reports/2021-09-defiprotocol#h-01-re-entrancy-in-settleauction-allow-stealing-all-funds, ""
36, H-02, S3-1, 1, "Basket.sol#auctionBurn() A failed auction will freeze part of the funds", https://code4rena.com/reports/2021-09-defiprotocol#h-02-basketsolauctionburn-a-failed-auction-will-freeze-part-of-the-funds, ""
36, H-03, L1, 3, "Reentrancy in settleAuction(): malicious publisher can bypass index timelock mechanism, inject malicious index, and rug the basket", https://code4rena.com/reports/2021-09-defiprotocol#h-03-reentrancy-in-settleauction-malicious-publisher-can-bypass-index-timelock-mechanism-inject-malicious-index-and-rug-the-basket, ""
37, H-01, SC, 1, "Steal tokens from TempusController", https://code4rena.com/reports/2021-10-tempus#h-01-steal-tokens-from-tempuscontroller, ""
38, H-01, LA, 1, "Prevent execution with invalid signatures", https://code4rena.com/reports/2021-10-ambire#h-01-prevent-execution-with-invalid-signatures, ""
38, H-02, SC, 2, "QuickAccManager.sol#cancel() Wrong hashTx makes it impossible to cancel a scheduled transaction", https://code4rena.com/reports/2021-10-ambire#h-02-quickaccmanagersolcancel-wrong-hashtx-makes-it-impossible-to-cancel-a-scheduled-transaction, ""
38, H-03, S2-3, 2, "Signature replay attacks for different identities (nonce on wrong party)", https://code4rena.com/reports/2021-10-ambire#h-03-signature-replay-attacks-for-different-identities-nonce-on-wrong-party, ""
38, H-04, SC, 1, "QuickAccManager Smart Contract signature verification can be exploited", https://code4rena.com/reports/2021-10-ambire#h-04-quickaccmanager-smart-contract-signature-verification-can-be-exploited, ""
39, H-01, L8, 11, "Unsafe handling of underlying tokens", https://code4rena.com/reports/2021-09-swivel#h-01-unsafe-handling-of-underlying-tokens, ""
39, H-02, S6-4, 2, "Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate", https://code4rena.com/reports/2021-09-swivel#h-02-swivel-taker-is-charged-fees-twice-in-exitvaultfillingvaultinitiate, ""
39, H-03, SE-4, 1, "transferNotionalFrom doesn’t check from != to", https://code4rena.com/reports/2021-09-swivel#h-03-transfernotionalfrom-doesnt-check-from--to, ""
39, H-04, LA, 1, "return value of 0 from ecrecover not checked", https://code4rena.com/reports/2021-09-swivel#h-04-return-value-of-0-from-ecrecover-not-checked, ""
41, H-01, SC, 1, "Bonding mechanism allows malicious user to DOS auctions", https://code4rena.com/reports/2021-10-defiprotocol#h-01-bonding-mechanism-allows-malicious-user-to-dos-auctions, ""
42, H-01, S6-3, 2, "Vault fails to track debt correctly that leads to bad debt", https://code4rena.com/reports/2021-10-mochi#h-01-vault-fails-to-track-debt-correctly-that-leads-to-bad-debt, ""
42, H-02, SC, 1, "FeePoolV0.sol#distributeMochi() will unexpectedly flush treasuryShare, causing the protocol fee cannot be properly accounted for and collected", https://code4rena.com/reports/2021-10-mochi#h-02-feepoolv0soldistributemochi-will-unexpectedly-flush-treasuryshare-causing-the-protocol-fee-cannot-be-properly-accounted-for-and-collected, ""
42, H-03, O5, 2, "ReferralFeePoolV0.sol#claimRewardAsMochi() Array out of bound exception", https://code4rena.com/reports/2021-10-mochi#h-03-referralfeepoolv0solclaimrewardasmochi-array-out-of-bound-exception, ""
42, H-04, S2-1, 3, "registerAsset() can overwrite _assetClass value", https://code4rena.com/reports/2021-10-mochi#h-04-registerasset-can-overwrite-_assetclass-value, ""
42, H-05, S6-4, 1, "debts calculation is not accurate", https://code4rena.com/reports/2021-10-mochi#h-05-debts-calculation-is-not-accurate, ""
42, H-06, S3-1, 1, "Referrer can drain ReferralFeePoolV0", https://code4rena.com/reports/2021-10-mochi#h-06-referrer-can-drain-referralfeepoolv0, ""
42, H-07, L7, 1, "Liquidation will never work with non-zero discounts", https://code4rena.com/reports/2021-10-mochi#h-07-liquidation-will-never-work-with-non-zero-discounts, ""
42, H-08, S5-1, 2, "Anyone can extend withdraw wait period by depositing zero collateral", https://code4rena.com/reports/2021-10-mochi#h-08-anyone-can-extend-withdraw-wait-period-by-depositing-zero-collateral, ""
42, H-09, S1-2, 1, "treasury is vulnerable to sandwich attack", https://code4rena.com/reports/2021-10-mochi#h-09-treasury-is-vulnerable-to-sandwich-attack, ""
42, H-10, SC, 1, "Changing NFT contract in the MochiEngine would break the protocol", https://code4rena.com/reports/2021-10-mochi#h-10-changing-nft-contract-in-the-mochiengine-would-break-the-protocol, ""
42, H-11, S3-2, 1, "treasuryShare is Overwritten in FeePoolV0._shareMochi()", https://code4rena.com/reports/2021-10-mochi#h-11-treasuryshare-is-overwritten-in-feepoolv0_sharemochi, ""
42, H-12, S1-2, 1, "feePool is vulnerable to sandwich attack.", https://code4rena.com/reports/2021-10-mochi#h-12-feepool-is-vulnerable-to-sandwich-attack, ""
42, H-13, S4-1, 1, "Tokens Can Be Stolen By Frontrunning VestedRewardPool.vest() and VestedRewardPool.lock()", https://code4rena.com/reports/2021-10-mochi#h-13-tokens-can-be-stolen-by-frontrunning-vestedrewardpoolvest-and-vestedrewardpoollock, ""
43, H-01, L5, 1, "Usage of an incorrect version of Ownbale library can potentially malfunction all onlyOwner functions", https://code4rena.com/reports/2021-10-covalent#h-01-usage-of-an-incorrect-version-of-ownbale-library-can-potentially-malfunction-all-onlyowner-functions, ""
43, H-02, S6-1, 1, "unstake should update exchange rates first", https://code4rena.com/reports/2021-10-covalent#h-02-unstake-should-update-exchange-rates-first, ""
44, H-01, L6, 1, "Arbitrary contract call allows attackers to steal ERC20 from users’ wallets", https://code4rena.com/reports/2021-10-tally#h-01-arbitrary-contract-call-allows-attackers-to-steal-erc20-from-users-wallets, ""
44, H-02, S6-4, 2, "Wrong calculation of erc20Delta and ethDelta", https://code4rena.com/reports/2021-10-tally#h-02-wrong-calculation-of-erc20delta-and-ethdelta, ""
45, H-01, S6-1, 1, "borrow must accrueInterest first", https://code4rena.com/reports/2021-10-union#h-01-borrow-must-accrueinterest-first, ""
45, H-02, S6-1, 1, "Wrong implementation of CreditLimitByMedian.sol#getLockedAmount() makes it unable to unlock lockedAmount in CreditLimitByMedian model", https://code4rena.com/reports/2021-10-union#h-02-wrong-implementation-of-creditlimitbymediansolgetlockedamount-makes-it-unable-to-unlock-lockedamount-in-creditlimitbymedian-model, ""
47, H-01, SC, 2, "The design of wibBTC is not fully compatible with the current Curve StableSwap pool", https://code4rena.com/reports/2021-10-badgerdao#h-01-the-design-of-wibbtc-is-not-fully-compatible-with-the-current-curve-stableswap-pool, ""
47, H-02, S6-3, 5, "Approved spender can spend too many tokens", https://code4rena.com/reports/2021-10-badgerdao#h-02-approved-spender-can-spend-too-many-tokens, ""
47, H-03, SC, 8, "WrappedIbbtcEth contract will use stalled price for mint/burn if updatePricePerShare wasn’t run properly", https://code4rena.com/reports/2021-10-badgerdao#h-03-wrappedibbtceth-contract-will-use-stalled-price-for-mintburn-if-updatepricepershare-wasnt-run-properly, ""
47, H-04, SE-2, 1, "WrappedIbbtc and WrappedIbbtcEth contracts do not filter out price feed outliers", https://code4rena.com/reports/2021-10-badgerdao#h-04-wrappedibbtc-and-wrappedibbtceth-contracts-do-not-filter-out-price-feed-outliers, ""
49, H-01, S6-3, 1, "OverlayV1UniswapV3Market computes wrong market liquidity", https://code4rena.com/reports/2021-11-overlay#h-01-overlayv1uniswapv3market-computes-wrong-market-liquidity, ""
49, H-02, L1, 3, "OZ ERC1155Supply vulnerability", https://code4rena.com/reports/2021-11-overlay#h-02-oz-erc1155supply-vulnerability, ""
50, H-01, O2, 6, "Anyone Can Arbitrarily Call FSDVesting.updateVestedTokens()", https://code4rena.com/reports/2021-11-fairside#h-01-anyone-can-arbitrarily-call-fsdvestingupdatevestedtokens, ""
50, H-02, O2, 2, "FSDVesting: Claiming tributes should call FSD token’s corresponding functions", https://code4rena.com/reports/2021-11-fairside#h-02-fsdvesting-claiming-tributes-should-call-fsd-tokens-corresponding-functions, ""
50, H-03, O2, 2, "Beneficiary cant get fairSideConviction NFT unless they only claim once, and only after it’s fully vested", https://code4rena.com/reports/2021-11-fairside#h-03-beneficiary-cant-get-fairsideconviction-nft-unless-they-only-claim-once-and-only-after-its-fully-vested, ""
50, H-04, O2, 1, "`ERC20ConvictionScore._writeCheckpoint` does not write to storage on same block", https://code4rena.com/reports/2021-11-fairside#h-04-erc20convictionscore_writecheckpoint-does-not-write-to-storage-on-same-block, ""
51, H-01, O5, 2, "Contract BasicSale is missing an approve(address(vestLock), 2**256-1) call", https://code4rena.com/reports/2021-11-bootfinance#h-01-contract-basicsale-is-missing-an-approveaddressvestlock-2256-1-call, ""
51, H-02, S6-4, 2, "Can not update target price", https://code4rena.com/reports/2021-11-bootfinance#h-02-can-not-update-target-price, ""
51, H-03, S3-1, 1, "SwapUtils.sol Wrong implementation", https://code4rena.com/reports/2021-11-bootfinance#h-03-swaputilssol-wrong-implementation, ""
51, H-04, S6-4, 2, "Swaps are not split when trade crosses target price", https://code4rena.com/reports/2021-11-bootfinance#h-04-swaps-are-not-split-when-trade-crosses-target-price, ""
51, H-05, SE-3, 4, "Claim airdrop repeatedly", https://code4rena.com/reports/2021-11-bootfinance#h-05-claim-airdrop-repeatedly, ""
51, H-06, S6-3, 1, "Ideal balance is not calculated correctly when providing imbalanced liquidity", https://code4rena.com/reports/2021-11-bootfinance#h-06-ideal-balance-is-not-calculated-correctly-when-providing-imbalanced-liquidity, ""
51, H-07, L2, 1, "customPrecisionMultipliers would be rounded to zero and break the pool", https://code4rena.com/reports/2021-11-bootfinance#h-07-customprecisionmultipliers-would-be-rounded-to-zero-and-break-the-pool, ""
51, H-08, S2-1, 4, "Unable to claim vesting due to unbounded timelock loop", https://code4rena.com/reports/2021-11-bootfinance#h-08-unable-to-claim-vesting-due-to-unbounded-timelock-loop, ""
51, H-09, O1, 1, "addInvestor() Does Not Check Availability of investors_supply", https://code4rena.com/reports/2021-11-bootfinance#h-09-addinvestor-does-not-check-availability-of-investors_supply, ""
52, H-01, S1-2, 2, "Minting and burning synths exposes users to unlimited slippage", https://code4rena.com/reports/2021-11-vader#h-01-minting-and-burning-synths-exposes-users-to-unlimited-slippage, ""
52, H-02, S1-1, 1, "Redemption value of synths can be manipulated to drain VaderPool of all native assets", https://code4rena.com/reports/2021-11-vader#h-02-redemption-value-of-synths-can-be-manipulated-to-drain-vaderpool-of-all-native-assets, ""
52, H-03, SE-1, 4, "VADER contains a Fee-On-Transfer", https://code4rena.com/reports/2021-11-vader#h-03-vader-contains-a-fee-on-transfer, ""
52, H-04, S6-4, 1, "TwapOracle doesn’t calculate VADER:USDV exchange rate correctly", https://code4rena.com/reports/2021-11-vader#h-04-twaporacle-doesnt-calculate-vaderusdv-exchange-rate-correctly, ""
52, H-05, S1-1, 2, "LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve.", https://code4rena.com/reports/2021-11-vader#h-05-lps-of-vaderpoolv2-can-manipulate-pool-reserves-to-extract-funds-from-the-reserve, ""
52, H-06, O1, 1, "Paying IL protection for all VaderPool pairs allows the reserve to be drained.", https://code4rena.com/reports/2021-11-vader#h-06-paying-il-protection-for-all-vaderpool-pairs-allows-the-reserve-to-be-drained, ""
52, H-07, SC, 1, "VaderReserve does not support paying IL protection out to more than one address, resulting in locked funds", https://code4rena.com/reports/2021-11-vader#h-07-vaderreserve-does-not-support-paying-il-protection-out-to-more-than-one-address-resulting-in-locked-funds, ""
52, H-08, L2, 1, "USDV and VADER rate can be wrong", https://code4rena.com/reports/2021-11-vader#h-08-usdv-and-vader-rate-can-be-wrong, ""
52, H-09, S6-4, 1, "VaderPoolV2 incorrectly calculates the amount of IL protection to send to LPs", https://code4rena.com/reports/2021-11-vader#h-09-vaderpoolv2-incorrectly-calculates-the-amount-of-il-protection-to-send-to-lps, ""
52, H-10, S1-1, 1, "calculate Loss is vulnerable to flashloan attack", https://code4rena.com/reports/2021-11-vader#h-10--calculate-loss-is-vulnerable-to-flashloan-attack, ""
52, H-11, S4-1, 1, "(dex-v1) BasePool.mint() function can be frontrun", https://code4rena.com/reports/2021-11-vader#h-11-dex-v1-basepoolmint-function-can-be-frontrun, ""
52, H-12, O1, 2, "Attacker can get extremely cheap synth by front-running create Pool", https://code4rena.com/reports/2021-11-vader#h-12-attacker-can-get-extremely-cheap-synth-by-front-running-create-pool, ""
52, H-13, S5-3, 1, "Anyone Can Arbitrarily Mint Synthetic Assets In VaderPoolV2.mintSynth()", https://code4rena.com/reports/2021-11-vader#h-13-anyone-can-arbitrarily-mint-synthetic-assets-in-vaderpoolv2mintsynth, ""
52, H-14, S5-3, 1, "Anyone Can Arbitrarily Mint Fungible Tokens In VaderPoolV2.mintFungible()", https://code4rena.com/reports/2021-11-vader#h-14-anyone-can-arbitrarily-mint-fungible-tokens-in-vaderpoolv2mintfungible, ""
52, H-15, S6-4, 1, "VaderRouter._swap performs wrong swap", https://code4rena.com/reports/2021-11-vader#h-15-vaderrouter_swap-performs-wrong-swap, ""
52, H-16, S6-3, 1, "VaderRouter.calculateOutGivenIn calculates wrong swap", https://code4rena.com/reports/2021-11-vader#h-16-vaderroutercalculateoutgivenin-calculates-wrong-swap, ""
52, H-17, O5, 1, "TWAPOracle might register with wrong token order", https://code4rena.com/reports/2021-11-vader#h-17-twaporacle-might-register-with-wrong-token-order, ""
52, H-18, S1-1, 1, "Attacker can claim more IL by manipulating pool price then removeLiquidity", https://code4rena.com/reports/2021-11-vader#h-18-attacker-can-claim-more-il-by-manipulating-pool-price-then-removeliquidity-, ""
52, H-19, SC, 1, "Governance veto can be bypassed", https://code4rena.com/reports/2021-11-vader#h-19-governance-veto-can-be-bypassed, ""
52, H-20, O3, 1, "Early user can break addLiquidity", https://code4rena.com/reports/2021-11-vader#h-20-early-user-can-break-addliquidity, ""
52, H-21, S2-1, 1, "Lack of access control allow attacker to mintFungible() and mintSynth() with other user’s wallet balance", https://code4rena.com/reports/2021-11-vader#h-21-lack-of-access-control-allow-attacker-to-mintfungible-and-mintsynth-with-other-users-wallet-balance, ""
52, H-22, S1-2, 1, "mintSynth() and burnSynth() can be front run", https://code4rena.com/reports/2021-11-vader#h-22-mintsynth-and-burnsynth-can-be-front-run, ""
52, H-23, S6-4, 1, "Synth tokens can get over-minted", https://code4rena.com/reports/2021-11-vader#h-23-synth-tokens-can-get-over-minted, ""
52, H-24, SC, 1, "Wrong design/implementation of addLiquidity() allows attacker to steal funds from the liquidity pool", https://code4rena.com/reports/2021-11-vader#h-24-wrong-designimplementation-of-addliquidity-allows-attacker-to-steal-funds-from-the-liquidity-pool, ""
52, H-25, S6-4, 1, "Wrong design of swap() results in unexpected and unfavorable outputs", https://code4rena.com/reports/2021-11-vader#h-25-wrong-design-of-swap-results-in-unexpected-and-unfavorable-outputs, ""
52, H-26, S2-1, 2, "All user assets which are approved to VaderPoolV2 may be stolen", https://code4rena.com/reports/2021-11-vader#h-26-all-user-assets-which-are-approved-to-vaderpoolv2-may-be-stolen, ""
52, H-27, S2-1, 2, "Unrestricted vestFor", https://code4rena.com/reports/2021-11-vader#h-27-unrestricted-vestfor, ""
52, H-28, S6-4, 1, "Incorrect Price Consultation Results", https://code4rena.com/reports/2021-11-vader#h-28-incorrect-price-consultation-results, ""
52, H-29, S1-2, 1, "VaderPoolV2.mintFungible exposes users to unlimited slippage", https://code4rena.com/reports/2021-11-vader#h-29-vaderpoolv2mintfungible-exposes-users-to-unlimited-slippage, ""
52, H-30, SE-1, 1, "Newly Registered Assets Skew Consultation Results", https://code4rena.com/reports/2021-11-vader#h-30-newly-registered-assets-skew-consultation-results, ""
52, H-31, S1-2, 2, "Unused slippage params", https://code4rena.com/reports/2021-11-vader#h-31-unused-slippage-params, ""
52, H-32, SC, 1, "Covering impermanent loss allows profiting off asymmetric liquidity provision at expense of reserve holdings", https://code4rena.com/reports/2021-11-vader#h-32-covering-impermanent-loss-allows-profiting-off-asymmetric-liquidity-provision-at-expense-of-reserve-holdings, ""
52, H-33, O3, 1, "Mixing different types of LP shares can lead to losses for Synth holders", https://code4rena.com/reports/2021-11-vader#h-33-mixing-different-types-of-lp-shares-can-lead-to-losses-for-synth-holders, ""
52, H-34, S6-4, 1, "Incorrect Accrual Of sumNative and sumUSD In Producing Consultation Results", https://code4rena.com/reports/2021-11-vader#h-34-incorrect-accrual-of-sumnative-and-sumusd-in-producing-consultation-results-, ""
53, H-01, SC, 1, "Copy your own portfolio to keep earning royalties", https://code4rena.com/reports/2021-11-nested#h-01-copy-your-own-portfolio-to-keep-earning-royalties-, ""
54, H-01, SC, 1, "MEV miner can mint larger than expected UDT total supply", https://code4rena.com/reports/2021-11-unlock#h-01-mev-miner-can-mint-larger-than-expected-udt-total-supply, ""
54, H-02, SE-1, 1, "Wrong design/implementation of freeTrial allows attacker to steal funds from the protocol", https://code4rena.com/reports/2021-11-unlock#h-02-wrong-designimplementation-of-freetrial-allows-attacker-to-steal-funds-from-the-protocol, ""
54, H-03, S3-1, 1, "MixinTransfer.sol#transferFrom Wrong implementation can potentially allows attackers to reverse transfer and cause fund loss to the users", https://code4rena.com/reports/2021-11-unlock#h-03-mixintransfersoltransferfrom-wrong-implementation-can-potentially-allows-attackers-to-reverse-transfer-and-cause-fund-loss-to-the-users, ""
54, H-04, S3-1, 1, "Approvals not cleared after key transfer", https://code4rena.com/reports/2021-11-unlock#h-04-approvals-not-cleared-after-key-transfer, ""
55, H-01, S5-3, 1, "makePayment() Lack of access control allows malicious lender to retrieve a large portion of the funds earlier, making the borrower suffer fund loss", https://code4rena.com/reports/2021-12-maple#h-01-makepayment-lack-of-access-control-allows-malicious-lender-to-retrieve-a-large-portion-of-the-funds-earlier-making-the-borrower-suffer-fund-loss, ""
56, H-01, O5, 1, "YaxisVaultAdapter.sol#withdraw() will most certainly fail", https://code4rena.com/reports/2021-11-yaxis#h-01-yaxisvaultadaptersolwithdraw-will-most-certainly-fail, ""
56, H-02, S6-4, 1, "CDP.sol update overwrites user’s credit on every positive increment", https://code4rena.com/reports/2021-11-yaxis#h-02-cdpsol-update-overwrites-users-credit-on-every-positive-increment, ""
57, H-01, O5, 6, "setGuardian() Wrong implementation", https://code4rena.com/reports/2021-11-badgerzaps#h-01-setguardian-wrong-implementation, ""
58, H-01, O5, 1, "YearnVault.sol#pull() will most certainly fail", https://code4rena.com/reports/2021-12-mellow#h-01-yearnvaultsolpull-will-most-certainly-fail, ""
58, H-02, S6-4, 1, "Wrong implementation of performanceFee can cause users to lose 50% to 100% of their funds", https://code4rena.com/reports/2021-12-mellow#h-02-wrong-implementation-of-performancefee-can-cause-users-to-lose-50-to-100-of-their-funds, ""
58, H-03, S4-1, 1, "UniV3Vault.sol#collectEarnings() can be front run", https://code4rena.com/reports/2021-12-mellow#h-03-univ3vaultsolcollectearnings-can-be-front-run, ""
58, H-04, S3-1, 2, "AaveVault does not update TVL on deposit/withdraw", https://code4rena.com/reports/2021-12-mellow#h-04-aavevault-does-not-update-tvl-on-depositwithdraw, ""
59, H-01, O1, 3, "Timelock can be bypassed", https://code4rena.com/reports/2021-11-malt#h-01-timelock-can-be-bypassed, ""
59, H-02, SC, 1, "Unable to remove liquidity in Recovery Mode", https://code4rena.com/reports/2021-11-malt#h-02-unable-to-remove-liquidity-in-recovery-mode, ""
59, H-03, O5, 1, "getAuctionCore function returns wrong values out of order", https://code4rena.com/reports/2021-11-malt#h-03-getauctioncore-function-returns-wrong-values-out-of-order, ""
59, H-04, S6-4, 1, "AuctionBurnReserveSkew.getPegDeltaFrequency() Wrong implementation can result in an improper amount of excess Liquidity Extension balance to be used at the end of an auction", https://code4rena.com/reports/2021-11-malt#h-04-auctionburnreserveskewgetpegdeltafrequency-wrong-implementation-can-result-in-an-improper-amount-of-excess-liquidity-extension-balance-to-be-used-at-the-end-of-an-auction-, ""
59, H-05, S6-4, 1, "AuctionEschapeHatch.sol#exitEarly updates state of the auction wrongly", https://code4rena.com/reports/2021-11-malt#h-05-auctioneschapehatchsolexitearly-updates-state-of-the-auction-wrongly, ""
60, H-01, S6-4, 1, "Wrong shortfall calculation", https://code4rena.com/reports/2021-12-perennial#h-01-wrong-shortfall-calculation, ""
60, H-02, SC, 1, "withdrawTo Does Not Sync Before Checking A Position’s Margin Requirements", https://code4rena.com/reports/2021-12-perennial#h-02-withdrawto-does-not-sync-before-checking-a-positions-margin-requirements, ""
61, H-01, S6-4, 1, "In CreditLine#_borrowTokensToLiquidate, oracle is used wrong way", https://code4rena.com/reports/2021-12-sublime#h-01-in-creditline_borrowtokenstoliquidate-oracle-is-used-wrong-way, ""
61, H-02, S6-2, 1, "Wrong returns of SavingsAccountUtil.depositFromSavingsAccount() can cause fund loss", https://code4rena.com/reports/2021-12-sublime#h-02-wrong-returns-of-savingsaccountutildepositfromsavingsaccount-can-cause-fund-loss, ""
61, H-03, SC, 1, "denial of service", https://code4rena.com/reports/2021-12-sublime#h-03-denial-of-service, ""
61, H-04, S6-4, 1, "Yearn token <> shares conversion decimal issue", https://code4rena.com/reports/2021-12-sublime#h-04-yearn-token--shares-conversion-decimal-issue, ""
61, H-05, O6, 3, "Aave’s share tokens are rebasing breaking current strategy code", https://code4rena.com/reports/2021-12-sublime#h-05-aaves-share-tokens-are-rebasing-breaking-current-strategy-code, ""
61, H-06, S5-3, 1, "Anyone can liquidate credit line when autoLiquidation is false without supplying borrow tokens", https://code4rena.com/reports/2021-12-sublime#h-06-anyone-can-liquidate-credit-line-when-autoliquidation-is-false-without-supplying-borrow-tokens, ""
61, H-07, SE-2, 2, "SavingsAccount withdrawAll and switchStrategy can freeze user funds by ignoring possible strategy liquidity issues", https://code4rena.com/reports/2021-12-sublime#h-07-savingsaccount-withdrawall-and-switchstrategy-can-freeze-user-funds-by-ignoring-possible-strategy-liquidity-issues, ""
61, H-08, SE-1, 1, "Possibility to drain SavingsAccount contract assets", https://code4rena.com/reports/2021-12-sublime#h-08-possibility-to-drain-savingsaccount-contract-assets, ""
61, H-09, SE-2, 1, "PriceOracle Does Not Filter Price Feed Outliers", https://code4rena.com/reports/2021-12-sublime#h-09-priceoracle-does-not-filter-price-feed-outliers, ""
61, H-10, O5, 2, "Wrong implementation of NoYield.sol#emergencyWithdraw()", https://code4rena.com/reports/2021-12-sublime#h-10-wrong-implementation-of-noyieldsolemergencywithdraw, ""
61, H-11, O5, 1, "Unable To Call emergencyWithdraw ETH in NoYield Contract", https://code4rena.com/reports/2021-12-sublime#h-11-unable-to-call-emergencywithdraw-eth-in-noyield-contract, ""
62, H-01, S6-4, 9, "Wrong calculation of excess depositToken allows stream creator to retrieve depositTokenFlashloanFeeAmount, which may cause fund loss to users", https://code4rena.com/reports/2021-11-streaming#h-01-wrong-calculation-of-excess-deposittoken-allows-stream-creator-to-retrieve-deposittokenflashloanfeeamount-which-may-cause-fund-loss-to-users, ""
62, H-02, SE-4, 7, "Tokens can be stolen when depositToken == rewardToken", https://code4rena.com/reports/2021-11-streaming#h-02-tokens-can-be-stolen-when-deposittoken--rewardtoken, ""
62, H-03, S6-4, 5, "Reward token not correctly recovered", https://code4rena.com/reports/2021-11-streaming#h-03-reward-token-not-correctly-recovered, ""
62, H-04, O1, 3, "Improper implementation of arbitraryCall() allows protocol gov to steal funds from users’ wallets", https://code4rena.com/reports/2021-11-streaming#h-04-improper-implementation-of-arbitrarycall-allows-protocol-gov-to-steal-funds-from-users-wallets, ""
62, H-05, O1, 8, "Possible incentive theft through the arbitraryCall() function", https://code4rena.com/reports/2021-11-streaming#h-05-possible-incentive-theft-through-the-arbitrarycall-function, ""
62, H-06, SC, 1, "Creating rewardTokens without streaming depositTokens", https://code4rena.com/reports/2021-11-streaming#h-06-creating-rewardtokens-without-streaming-deposittokens, ""
62, H-07, O1, 2, "Business logic bug in __abdicate() function - 2 Bugs", https://code4rena.com/reports/2021-11-streaming#h-07-business-logic-bug-in-__abdicate-function---2-bugs, ""
62, H-08, S3-1, 2, "ts.tokens sometimes calculated incorrectly", https://code4rena.com/reports/2021-11-streaming#h-08-tstokens-sometimes-calculated-incorrectly, ""
62, H-09, L7, 1, "DOS while dealing with erc20 when value(i.e amount*decimals)  is high but less than type(uint112).max", https://code4rena.com/reports/2021-11-streaming#h-09-dos-while-dealing-with-erc20-when-valueie-amountdecimals--is-high-but-less-than-typeuint112max, ""
62, H-10, S6-3, 5, "recoverTokens doesn’t work when isSale is true", https://code4rena.com/reports/2021-11-streaming#h-10-recovertokens-doesnt-work-when-issale-is-true, ""
64, H-01, SE-4, 1, "createPromotion() Lack of input validation for _epochDuration can potentially freeze promotion creator’s funds", https://code4rena.com/reports/2021-12-pooltogether#h-01-createpromotion-lack-of-input-validation-for-_epochduration-can-potentially-freeze-promotion-creators-funds, ""
64, H-02, SE-4, 4, "Backdated _startTimestamp can lead to loss of funds", https://code4rena.com/reports/2021-12-pooltogether#h-02-backdated-_starttimestamp-can-lead-to-loss-of-funds, ""
64, H-03, S5-2, 6, "Continue claiming reqrds after numberOfEpochs are over", https://code4rena.com/reports/2021-12-pooltogether#h-03-continue-claiming-reqrds-after-numberofepochs-are-over, ""
64, H-04, SC, 6, "cancelPromotion is too rigorous", https://code4rena.com/reports/2021-12-pooltogether#h-04-cancelpromotion-is-too-rigorous, ""
64, H-05, S2-2, 10, "Malicious tickets can lead to the loss of all tokens", https://code4rena.com/reports/2021-12-pooltogether#h-05-malicious-tickets-can-lead-to-the-loss-of-all-tokens, ""
64, H-06, SE-3, 10, "Rewards can be claimed multiple times", https://code4rena.com/reports/2021-12-pooltogether#h-06-rewards-can-be-claimed-multiple-times, ""
64, H-07, SC, 4, "Contract does not work with fee-on transfer tokens", https://code4rena.com/reports/2021-12-pooltogether#h-07-contract-does-not-work-with-fee-on-transfer-tokens, ""
65, H-01, S3-1, 1, "Wrong fee calculation after totalSupply was 0", https://code4rena.com/reports/2021-12-defiprotocol#h-01-wrong-fee-calculation-after-totalsupply-was-0, ""
66, H-01, S5-3, 1, "receiveCollateral() can be called by anyone", https://code4rena.com/reports/2021-12-yetifinance#h-01-receivecollateral-can-be-called-by-anyone, ""
66, H-02, S6-3, 3, "Yeti token rebase checks the additional token amount incorrectly", https://code4rena.com/reports/2021-12-yetifinance#h-02-yeti-token-rebase-checks-the-additional-token-amount-incorrectly, ""
67, H-01, O3, 1, "forceUnsponsor() may open a window for attackers to manipulate the _totalShares and freeze users’ funds at a certain deposit amount", https://code4rena.com/reports/2022-01-sandclock#h-01-forceunsponsor-may-open-a-window-for-attackers-to-manipulate-the-_totalshares-and-freeze-users-funds-at-a-certain-deposit-amount, ""
67, H-02, L1, 3, "Withdrawers can get more value returned than expected with reentrant call", https://code4rena.com/reports/2022-01-sandclock#h-02-withdrawers-can-get-more-value-returned-than-expected-with-reentrant-call, ""
67, H-03, S1-1, 15, "Vaults with non-UST underlying asset vulnerable to flash loan attack on curve pool", https://code4rena.com/reports/2022-01-sandclock#h-03-vaults-with-non-ust-underlying-asset-vulnerable-to-flash-loan-attack-on-curve-pool, ""
67, H-04, L1, 15, "deposit() function is open to reentrancy attacks", https://code4rena.com/reports/2022-01-sandclock#h-04-deposit-function-is-open-to-reentrancy-attacks, ""
67, H-05, L1, 2, "sponsor() function in open to reentrancy attacks", https://code4rena.com/reports/2022-01-sandclock#h-05-sponsor-function-in-open-to-reentrancy-attacks, ""
68, H-01, S3-1, 1, "Unused ERC20 tokens are not refunded, and can be stolen by attacker", https://code4rena.com/reports/2021-12-amun#h-01-unused-erc20-tokens-are-not-refunded-and-can-be-stolen-by-attacker, "forget to refund leftover tokens, i.e., missing state updates"
68, H-02, SC, 2, "It might not be possible to withdraw tokens from the basket", https://code4rena.com/reports/2021-12-amun#h-02-it-might-not-be-possible-to-withdraw-tokens-from-the-basket, ""
69, H-01, O5, 1, "buyAndSwap1155WETH() function may cause loss of user assets", https://code4rena.com/reports/2021-12-nftx#h-01-buyandswap1155weth-function-may-cause-loss-of-user-assets, ""
69, H-02, L8, 2, "The return value of the _sendForReceiver function is not set, causing the receiver to receive more fees", https://code4rena.com/reports/2021-12-nftx#h-02-the-return-value-of-the-_sendforreceiver-function-is-not-set-causing-the-receiver-to-receive-more-fees, ""
69, H-03, SC, 9, "A vault can be locked from MarketplaceZap and StakingZap", https://code4rena.com/reports/2021-12-nftx#h-03-a-vault-can-be-locked-from-marketplacezap-and-stakingzap, ""
70, H-01, S4-1, 6, "VaderPoolV2 minting synths & fungibles can be frontrun", https://code4rena.com/reports/2021-12-vader#h-01-vaderpoolv2-minting-synths--fungibles-can-be-frontrun, ""
70, H-02, O1, 1, "VaderPoolV2 owner can steal all user assets which are approved VaderPoolV2", https://code4rena.com/reports/2021-12-vader#h-02-vaderpoolv2-owner-can-steal-all-user-assets-which-are-approved-vaderpoolv2, ""
70, H-03, S6-4, 3, "Oracle doesn’t calculate USDV/VADER price correctly", https://code4rena.com/reports/2021-12-vader#h-03-oracle-doesnt-calculate-usdvvader-price-correctly, ""
70, H-04, S6-4, 1, "Vader TWAP averages wrong", https://code4rena.com/reports/2021-12-vader#h-04-vader-twap-averages-wrong, ""
70, H-05, S6-4, 1, "Oracle returns an improperly scaled USDV/VADER price", https://code4rena.com/reports/2021-12-vader#h-05-oracle-returns-an-improperly-scaled-usdvvader-price, ""
70, H-06, S1-1, 2, "LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve.", https://code4rena.com/reports/2021-12-vader#h-06-lps-of-vaderpoolv2-can-manipulate-pool-reserves-to-extract-funds-from-the-reserve, ""
70, H-07, S1-1, 2, "Redemption value of synths can be manipulated to drain VaderPoolV2 of all native assets in the associated pair", https://code4rena.com/reports/2021-12-vader#h-07-redemption-value-of-synths-can-be-manipulated-to-drain-vaderpoolv2-of-all-native-assets-in-the-associated-pair, ""
70, H-08, S6-4, 1, "Reserve does not properly apply prices of VADER and USDV tokens", https://code4rena.com/reports/2021-12-vader#h-08-reserve-does-not-properly-apply-prices-of-vader-and-usdv-tokens, ""
70, H-09, S6-4, 2, "USDV.sol Mint and Burn Amounts Are Incorrect", https://code4rena.com/reports/2021-12-vader#h-09-usdvsol-mint-and-burn-amounts-are-incorrect, ""
70, H-10, S3-1, 1, "previousPrices Is Never Updated Upon Syncing Token Price", https://code4rena.com/reports/2021-12-vader#h-10-previousprices-is-never-updated-upon-syncing-token-price, ""
70, H-11, SC, 1, "totalLiquidityWeight Is Updated When Adding New Token Pairs Which Skews Price Data For getVaderPrice and getUSDVPrice", https://code4rena.com/reports/2021-12-vader#h-11-totalliquidityweight-is-updated-when-adding-new-token-pairs-which-skews-price-data-for-getvaderprice-and-getusdvprice, ""
70, H-12, SC, 2, "Using single total native reserve variable for synth and non-synth reserves of VaderPoolV2 can lead to losses for synth holders", https://code4rena.com/reports/2021-12-vader#h-12-using-single-total-native-reserve-variable-for-synth-and-non-synth-reserves-of-vaderpoolv2-can-lead-to-losses-for-synth-holders, ""
70, H-13, SC, 1, "Council veto protection does not work", https://code4rena.com/reports/2021-12-vader#h-13-council-veto-protection-does-not-work, ""
70, H-14, O3, 1, "Denial of service", https://code4rena.com/reports/2021-12-vader#h-14-denial-of-service, ""
71, H-01, SE-2, 1, "Tokens can be burned with no access control", https://code4rena.com/reports/2022-01-insure#h-01-tokens-can-be-burned-with-no-access-control, ""
71, H-02, O5, 3, "Typo in PoolTemplate unlock function results in user being able to unlock multiple times", https://code4rena.com/reports/2022-01-insure#h-02-typo-in-pooltemplate-unlock-function-results-in-user-being-able-to-unlock-multiple-times, ""
71, H-03, S2-1, 1, "Malicious Market Creators Can Steal Tokens From Unsuspecting Approved Reference Accounts", https://code4rena.com/reports/2022-01-insure#h-03-malicious-market-creators-can-steal-tokens-from-unsuspecting-approved-reference-accounts, ""
71, H-04, S4-1, 2, "Initial pool deposit can be stolen", https://code4rena.com/reports/2022-01-insure#h-04-initial-pool-deposit-can-be-stolen, ""
71, H-05, O1, 4, "backdoor in withdrawRedundant", https://code4rena.com/reports/2022-01-insure#h-05-backdoor-in-withdrawredundant, ""
71, H-06, O3, 1, "the first depositor to a pool can drain all users", https://code4rena.com/reports/2022-01-insure#h-06-the-first-depositor-to-a-pool-can-drain-all-users, ""
71, H-07, O1, 1, "Wrong design/implementation of permission control allows malicious/compromised Registry or Factory admin to steal funds from users’ wallet balances", https://code4rena.com/reports/2022-01-insure#h-07-wrong-designimplementation-of-permission-control-allows-maliciouscompromised-registry-or-factory-admin-to-steal-funds-from-users-wallet-balances, ""
71, H-08, L2, 1, "IndexTemplate.sol#compensate() will most certainly fail", https://code4rena.com/reports/2022-01-insure#h-08-indextemplatesolcompensate-will-most-certainly-fail, ""
71, H-09, O1, 1, "Vault#setController() owner of the Vault contracts can drain funds from the Vault", https://code4rena.com/reports/2022-01-insure#h-09-vaultsetcontroller-owner-of-the-vault-contracts-can-drain-funds-from-the-vault, ""
71, H-10, O1, 1, "A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts", https://code4rena.com/reports/2022-01-insure#h-10-a-maliciouscompromised-registry-or-factory-admin-can-drain-all-the-funds-from-the-vault-contracts, ""
71, H-11, S6-4, 2, "PoolTemplate.sol#resume() Wrong implementation of resume() will compensate overmuch redeem amount from index pools", https://code4rena.com/reports/2022-01-insure#h-11-pooltemplatesolresume-wrong-implementation-of-resume-will-compensate-overmuch-redeem-amount-from-index-pools, ""
71, H-12, S5-2, 2, "IndexTemplate.sol Wrong implementation allows lp of the index pool to resume a locked PayingOut pool and escape the responsibility for the compensation", https://code4rena.com/reports/2022-01-insure#h-12-indextemplatesol-wrong-implementation-allows-lp-of-the-index-pool-to-resume-a-locked-payingout-pool-and-escape-the-responsibility-for-the-compensation, ""
71, H-13, O1, 1, "Admin of the index pool can withdrawCredit() after applyCover() to avoid taking loss for the compensation paid for a certain pool", https://code4rena.com/reports/2022-01-insure#h-13-admin-of-the-index-pool-can-withdrawcredit-after-applycover-to-avoid-taking-loss-for-the-compensation-paid-for-a-certain-pool, ""
72, H-01, L8, 1, "OpenLevV1Lib’s and LPool’s doTransferOut functions call native payable.transfer, which can be unusable for smart contract calls", https://code4rena.com/reports/2022-01-openleverage#h-01-openlevv1libs-and-lpools-dotransferout-functions-call-native-payabletransfer-which-can-be-unusable-for-smart-contract-calls, ""
73, H-01, SC, 4, "L1Migrator.sol#migrateETH() does not send bridgeMinter’s ETH to L2 causing ETH get frozen in the contract", https://code4rena.com/reports/2022-01-livepeer#h-01-wp-h5-l1migratorsolmigrateeth-does-not-send-bridgeminters-eth-to-l2-causing-eth-get-frozen-in-the-contract, ""
74, H-01, S5-1, 1, "TimeswapPair.sol#borrow() Improper implementation allows attacker to increase pool.state.z to a large value", https://code4rena.com/reports/2022-01-timeswap#h-01-timeswappairsolborrow-improper-implementation-allows-attacker-to-increase-poolstatez-to-a-large-value, ""
74, H-02, S5-1, 1, "TimeswapConvenience.sol#borrowGivenDebt() Attacker can increase state.y to an extremely large value with a dust amount of assetOut", https://code4rena.com/reports/2022-01-timeswap#h-02-timeswapconveniencesolborrowgivendebt-attacker-can-increase-statey-to-an-extremely-large-value-with-a-dust-amount-of-assetout, ""
74, H-03, S5-1, 4, "Manipulation of the Y State Results in Interest Rate Manipulation", https://code4rena.com/reports/2022-01-timeswap#h-03-manipulation-of-the-y-state-results-in-interest-rate-manipulation, ""
74, H-04, O6, 1, "Important state updates are made after the callback in the mint() function", https://code4rena.com/reports/2022-01-timeswap#h-04-important-state-updates-are-made-after-the-callback-in-the-mint-function-, ""
74, H-05, O6, 1, "In the lend() function state updates are made after the callback", https://code4rena.com/reports/2022-01-timeswap#h-05-in-the-lend-function-state-updates-are-made-after-the-callback-, ""
74, H-06, O6, 1, "borrow() function has state updates after a callback to msg.sender", https://code4rena.com/reports/2022-01-timeswap#h-06-borrow-function-has-state-updates-after-a-callback-to-msgsender-, ""
74, H-07, O6, 1, "pay() function has callback to msg.sender before important state updates", https://code4rena.com/reports/2022-01-timeswap#h-07-pay-function-has-callback-to-msgsender-before-important-state-updates-, ""
75, H-01, O3, 1, "Malicious early user/attacker can malfunction the contract and even freeze users’ funds in edge cases", https://code4rena.com/reports/2022-01-xdefi#h-01-malicious-early-userattacker-can-malfunction-the-contract-and-even-freeze-users-funds-in-edge-cases, ""
75, H-02, L1, 6, "The reentrancy vulnerability in _safeMint can allow an attacker to steal all rewards", https://code4rena.com/reports/2022-01-xdefi#h-02-the-reentrancy-vulnerability-in-_safemint-can-allow-an-attacker-to-steal-all-rewards, ""
76, H-01, O3, 2, "first user can steal everyone else’s tokens", https://code4rena.com/reports/2022-01-sherlock#h-01-first-user-can-steal-everyone-elses-tokens, ""
77, H-01, S6-4, 1, "In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of ΔRo", https://code4rena.com/reports/2022-01-elasticswap#h-01-in-the-case-of-single-asset-entry-new-liquidity-providers-will-suffer-fund-loss-due-to-wrong-formula-of-%CE%B4ro, ""
77, H-02, SE-1, 1, "Transferring quoteToken to the exchange pool contract will cause future liquidity providers to lose funds", https://code4rena.com/reports/2022-01-elasticswap#h-02-transferring-quotetoken-to-the-exchange-pool-contract-will-cause-future-liquidity-providers-to-lose-funds, ""
78, H-01, S5-1, 3, "Lack of access control on assertGovernanceApproved can cause funds to be locked", https://code4rena.com/reports/2022-01-behodler#h-01-lack-of-access-control-on-assertgovernanceapproved-can-cause-funds-to-be-locked, ""
78, H-02, S6-3, 1, "wrong minting amount", https://code4rena.com/reports/2022-01-behodler#h-02-wrong-minting-amount, ""
78, H-03, SC, 4, "Double transfer in the transferAndCall function of ERC677", https://code4rena.com/reports/2022-01-behodler#h-03-double-transfer-in-the-transferandcall-function-of-erc677, ""
78, H-04, S3-2, 1, "Logic error in burnFlashGovernanceAsset can cause locked assets to be stolen", https://code4rena.com/reports/2022-01-behodler#h-04-logic-error-in-burnflashgovernanceasset-can-cause-locked-assets-to-be-stolen, ""
78, H-05, S1-1, 1, "Flash loan price manipulation in purchasePyroFlan()", https://code4rena.com/reports/2022-01-behodler#h-05-flash-loan-price-manipulation-in-purchasepyroflan, ""
78, H-06, S4-1, 1, "Loss Of Flash Governance Tokens If They Are Not Withdrawn Before The Next Request", https://code4rena.com/reports/2022-01-behodler#h-06-loss-of-flash-governance-tokens-if-they-are-not-withdrawn-before-the-next-request, ""
78, H-07, S1-1, 1, "LP pricing formula is vulnerable to flashloan manipulation", https://code4rena.com/reports/2022-01-behodler#h-07-lp-pricing-formula-is-vulnerable-to-flashloan-manipulation, ""
79, H-01, O1, 2, "Users can lose value in emergency state", https://code4rena.com/reports/2022-01-trader-joe#h-01-users-can-lose-value-in-emergency-state, ""
79, H-02, S6-4, 1, "Wrong token allocation computation for token decimals != 18 if floor price not reached", https://code4rena.com/reports/2022-01-trader-joe#h-02-wrong-token-allocation-computation-for-token-decimals--18-if-floor-price-not-reached, ""
80, H-01, SE-1, 2, "Malicious Users Can Duplicate Protocol Earned Yield By Transferring wCVX Tokens To Another Account", https://code4rena.com/reports/2022-01-yield#h-01-malicious-users-can-duplicate-protocol-earned-yield-by-transferring-wcvx-tokens-to-another-account, ""
80, H-02, SE-1, 1, "Malicious Users Can Transfer Vault Collateral To Other Accounts To Extract Additional Yield From The Protocol", https://code4rena.com/reports/2022-01-yield#h-02-malicious-users-can-transfer-vault-collateral-to-other-accounts-to-extract-additional-yield-from-the-protocol, ""
81, H-01, S2-1, 2, "Treasury cannot claim COMP tokens & COMP tokens are stuck", https://code4rena.com/reports/2022-01-notional#h-01-treasury-cannot-claim-comp-tokens--comp-tokens-are-stuck, ""
81, H-02, SE-1, 1, "Cooldown and redeem windows can be rendered useless", https://code4rena.com/reports/2022-01-notional#h-02-cooldown-and-redeem-windows-can-be-rendered-useless, ""
81, H-03, O1, 1, "A Malicious Treasury Manager Can Burn Treasury Tokens By Setting makerFee To The Amount The Maker Receives", https://code4rena.com/reports/2022-01-notional#h-03-a-malicious-treasury-manager-can-burn-treasury-tokens-by-setting-makerfee-to-the-amount-the-maker-receives, ""
83, H-01, S3-1, 4, "Wrong reward token calculation in MasterChef contract", https://code4rena.com/reports/2022-02-concur#h-01-wrong-reward-token-calculation-in-masterchef-contract, ""
83, H-02, S6-1, 2, "Masterchef: Improper handling of deposit fee", https://code4rena.com/reports/2022-02-concur#h-02-masterchef-improper-handling-of-deposit-fee, ""
83, H-03, S5-2, 19, "Repeated Calls to Shelter.withdraw Can Drain All Funds in Shelter", https://code4rena.com/reports/2022-02-concur#h-03-repeated-calls-to-shelterwithdraw-can-drain-all-funds-in-shelter, ""
83, H-04, O5, 7, "ConvexStakingWrapper, StakingRewards Wrong implementation will send concur rewards to the wrong receiver", https://code4rena.com/reports/2022-02-concur#h-04-convexstakingwrapper-stakingrewards-wrong-implementation-will-send-concur-rewards-to-the-wrong-receiver, ""
83, H-05, S1-1, 4, "USDMPegRecovery Risk of fund locked, due to discrepancy between curveLP token value against internal contract math", https://code4rena.com/reports/2022-02-concur#h-05-usdmpegrecovery-risk-of-fund-locked-due-to-discrepancy-between-curvelp-token-value-against-internal-contract-math, ""
83, H-06, SC, 6, "ConvexStakingWrapper.sol#_calcRewardIntegral Wrong implementation can disrupt rewards calculation and distribution", https://code4rena.com/reports/2022-02-concur#h-06-convexstakingwrappersol_calcrewardintegral-wrong-implementation-can-disrupt-rewards-calculation-and-distribution, ""
83, H-07, SE-3, 4, "Shelter claimed mapping is set with _to address and not msg.sender", https://code4rena.com/reports/2022-02-concur#h-07-shelter-claimed-mapping-is-set-with-_to-address-and-not-msgsender, ""
83, H-08, SC, 3, "MasterChef.sol Users won’t be able to receive the concur rewards", https://code4rena.com/reports/2022-02-concur#h-08-masterchefsol-users-wont-be-able-to-receive-the-concur-rewards, ""
83, H-09, O5, 2, "deposit in ConvexStakingWrapper will most certainly revert", https://code4rena.com/reports/2022-02-concur#h-09-deposit-in-convexstakingwrapper-will-most-certainly-revert, ""
83, H-10, O1, 1, "ConvexStakingWrapper.exitShelter() Will Lock LP Tokens, Preventing Users From Withdrawing", https://code4rena.com/reports/2022-02-concur#h-10-convexstakingwrapperexitshelter-will-lock-lp-tokens-preventing-users-from-withdrawing, ""
83, H-11, S2-2, 3, "ConvexStakingWrapper._calcRewardIntegral() Can Be Manipulated To Steal Tokens From Other Pools", https://code4rena.com/reports/2022-02-concur#h-11-convexstakingwrapper_calcrewardintegral-can-be-manipulated-to-steal-tokens-from-other-pools, ""
89, H-01, L1, 1, "Update initializer modifier to prevent reentrancy during initialization", https://code4rena.com/reports/2022-02-hubble#h-01-update-initializer-modifier-to-prevent-reentrancy-during-initialization, ""
89, H-02, L4, 12, "denial of service", https://code4rena.com/reports/2022-02-hubble#h-02-denial-of-service, ""
89, H-03, O3, 2, "InsuranceFund depositors can be priced out & deposits can be stolen", https://code4rena.com/reports/2022-02-hubble#h-03-insurancefund-depositors-can-be-priced-out--deposits-can-be-stolen, ""
90, H-01, S4-1, 5, "IndexLogic: An attacker can mint tokens for himself using assets deposited by other users", https://code4rena.com/reports/2022-04-phuture#h-01-indexlogic-an-attacker-can-mint-tokens-for-himself-using-assets-deposited-by-other-users, ""
90, H-02, L7, 1, "UniswapV2PriceOracle.sol currentCumulativePrices() will revert when priceCumulative addition overflow", https://code4rena.com/reports/2022-04-phuture#h-02-uniswapv2priceoraclesol-currentcumulativeprices-will-revert-when-pricecumulative-addition-overflow, ""
92, H-01, S6-3, 5, "ERC4626 mint uses wrong amount", https://code4rena.com/reports/2022-02-tribe-turbo#h-01-erc4626-mint-uses-wrong-amount, ""
92, H-02, O5, 3, "TurboRouter: deposit(), mint(), createSafeAndDeposit() and createSafeAndDepositAndBoost() functions do not work", https://code4rena.com/reports/2022-02-tribe-turbo#h-02-turborouter-deposit-mint-createsafeanddeposit-and-createsafeanddepositandboost-functions-do-not-work, ""
94, H-01, S2-2, 2, "NFT owner can create multiple auctions", https://code4rena.com/reports/2022-02-foundation#h-01-nft-owner-can-create-multiple-auctions, ""
94, H-02, SE-1, 1, "Creators can steal sale revenue from owners’ sales", https://code4rena.com/reports/2022-02-foundation#h-02-creators-can-steal-sale-revenue-from-owners-sales, ""
94, H-03, S4-1, 4, "An offer made after auction end can be stolen by an auction winner", https://code4rena.com/reports/2022-02-foundation#h-03-an-offer-made-after-auction-end-can-be-stolen-by-an-auction-winner, ""
96, H-01, SE-4, 2, "Wrong timing of check allows users to withdraw collateral without paying for the debt", https://code4rena.com/reports/2022-03-timeswap#h-01-wrong-timing-of-check-allows-users-to-withdraw-collateral-without-paying-for-the-debt, ""
97, H-01, SE-4, 2, "Can deposit native token for free and steal funds", https://code4rena.com/reports/2022-03-biconomy#h-01-can-deposit-native-token-for-free-and-steal-funds, ""
97, H-02, L7, 1, "LiquidityProviders.sol The share price of the LP can be manipulated and making future liquidityProviders unable to removeLiquidity()", https://code4rena.com/reports/2022-03-biconomy#h-02-liquidityproviderssol-the-share-price-of-the-lp-can-be-manipulated-and-making-future-liquidityproviders-unable-to-removeliquidity, ""
97, H-03, S6-4, 4, "Wrong formula when add fee incentivePool can lead to loss of funds.", https://code4rena.com/reports/2022-03-biconomy#h-03-wrong-formula-when-add-fee-incentivepool-can-lead-to-loss-of-funds, ""
97, H-04, SC, 3, "Deleting nft Info can cause users’ nft.unpaidRewards to be permanently erased", https://code4rena.com/reports/2022-03-biconomy#h-04-deleting-nft-info-can-cause-users-nftunpaidrewards-to-be-permanently-erased, ""
97, H-05, L2, 2, "Users will lose a majority or even all of the rewards when the amount of total shares is too large, due to precision loss", https://code4rena.com/reports/2022-03-biconomy#h-05-users-will-lose-a-majority-or-even-all-of-the-rewards-when-the-amount-of-total-shares-is-too-large-due-to-precision-loss, ""
98, H-01, SC, 1, "Incorrect strike price displayed in name/symbol of qToken", https://code4rena.com/reports/2022-03-rolla#h-01-incorrect-strike-price-displayed-in-namesymbol-of-qtoken-, ""
98, H-02, L2, 1, "Mint spread collateral-less and conjuring collateral claims out of thin air with implicit arithmetic rounding and flawed int to uint conversion", https://code4rena.com/reports/2022-03-rolla#h-02-mint-spread-collateral-less-and-conjuring-collateral-claims-out-of-thin-air-with-implicit-arithmetic-rounding-and-flawed-int-to-uint-conversion, ""
98, H-03, O5, 1, "Wrong implementation of EIP712MetaTransaction", https://code4rena.com/reports/2022-03-rolla#h-03--wrong-implementation-of-eip712metatransaction, ""
98, H-04, SC, 1, "EIP712MetaTransaction.executeMetaTransaction() failed txs are open to replay attacks", https://code4rena.com/reports/2022-03-rolla#h-04-eip712metatransactionexecutemetatransaction-failed-txs-are-open-to-replay-attacks, ""
100, H-01, O1, 1, "Strategy Migration May Leave Tokens in the Old Strategy Impacting Share Calculations", https://code4rena.com/reports/2022-03-prepo#h-01-strategy-migration-may-leave-tokens-in-the-old-strategy-impacting-share-calculations, ""
100, H-02, O3, 7, "First depositor can break minting of shares", https://code4rena.com/reports/2022-03-prepo#h-02-first-depositor-can-break-minting-of-shares, ""
100, H-03, SE-1, 3, "Withdrawal delay can be circumvented", https://code4rena.com/reports/2022-03-prepo#h-03-withdrawal-delay-can-be-circumvented, ""
101, H-01, S6-2, 1, "LenderPool: Principal withdrawable is incorrectly calculated if start() is invoked with non-zero start fee", https://code4rena.com/reports/2022-03-sublime#h-01-lenderpool-principal-withdrawable-is-incorrectly-calculated-if-start-is-invoked-with-non-zero-start-fee, ""
101, H-02, S6-3, 3, "PooledCreditLine: termination likely fails because _principleWithdrawable is treated as shares", https://code4rena.com/reports/2022-03-sublime#h-02-pooledcreditline-termination-likely-fails-because-_principlewithdrawable-is-treated-as-shares, ""
102, H-01, S6-1, 1, "Oracle price does not compound", https://code4rena.com/reports/2022-03-volt#h-01-oracle-price-does-not-compound, ""
103, H-01, S2-1, 5, "Reliance on lifiData.receivingAssetId can cause loss of funds", https://code4rena.com/reports/2022-03-lifinance#h-01-reliance-on-lifidatareceivingassetid-can-cause-loss-of-funds, ""
103, H-02, SC, 3, "All swapping functions lack checks for returned tokens", https://code4rena.com/reports/2022-03-lifinance#h-02-all-swapping-functions-lack-checks-for-returned-tokens, ""
104, H-01, L8, 7, "ERC20 transferFrom return values not checked", https://code4rena.com/reports/2022-03-joyn#h-01-erc20-transferfrom-return-values-not-checked, ""
104, H-02, S5-3, 10, "Splitter: Anyone can call incrementWindow to steal the tokens in the contract", https://code4rena.com/reports/2022-03-joyn#h-02-splitter-anyone-can-call-incrementwindow-to-steal-the-tokens-in-the-contract, ""
104, H-03, L4, 3, "DoS: claimForAllWindows() May Be Made Unusable By An Attacker", https://code4rena.com/reports/2022-03-joyn#h-03-dos-claimforallwindows-may-be-made-unusable-by-an-attacker, ""
104, H-04, S5-3, 12, "CoreCollection can be reinitialized", https://code4rena.com/reports/2022-03-joyn#h-04-corecollection-can-be-reinitialized, ""
104, H-05, O1, 11, "Centralisation RIsk: Owner Of RoyaltyVault Can Take All Funds", https://code4rena.com/reports/2022-03-joyn#h-05-centralisation-risk-owner-of-royaltyvault-can-take-all-funds, ""
104, H-06, L5, 1, "STORAGE COLLISION BETWEEN PROXY AND IMPLEMENTATION (LACK EIP 1967)", https://code4rena.com/reports/2022-03-joyn#h-06-storage-collision-between-proxy-and-implementation-lack-eip-1967, ""
104, H-07, L1, 1, "Duplicate NFTs Can Be Minted if payableToken Has a Callback Attached to it", https://code4rena.com/reports/2022-03-joyn#h-07-duplicate-nfts-can-be-minted-if-payabletoken-has-a-callback-attached-to-it, ""
104, H-08, L8, 3, "Funds cannot be withdrawn in CoreCollection.withdraw", https://code4rena.com/reports/2022-03-joyn#h-08-funds-cannot-be-withdrawn-in-corecollectionwithdraw, ""
104, H-09, L8, 2, "ERC20 tokens with no return value will fail to transfer", https://code4rena.com/reports/2022-03-joyn#h-09-erc20-tokens-with-no-return-value-will-fail-to-transfer, ""
105, H-01, L2, 2, "DropPerSecond is not updated homogeneously, the rewards emission can be much higher than expected in some cases", https://code4rena.com/reports/2022-03-paladin#h-01-droppersecond-is-not-updated-homogeneously-the-rewards-emission-can-be-much-higher-than-expected-in-some-cases, ""
105, H-02, SE-1, 1, "System could be wrapped and made useless without contract whitelisting", https://code4rena.com/reports/2022-03-paladin#h-02-system-could-be-wrapped-and-made-useless-without-contract-whitelisting, ""
106, H-01, O6, 9, "Can force borrower to pay huge interest", https://code4rena.com/reports/2022-04-backed#h-01-can-force-borrower-to-pay-huge-interest, ""
106, H-02, L1, 1, "currentLoanOwner can manipulate loanInfo when any lenders try to buyout", https://code4rena.com/reports/2022-04-backed#h-02-currentloanowner-can-manipulate-loaninfo-when-any-lenders-try-to-buyout, ""
106, H-03, L1, 1, "Borrower can be their own lender and steal funds from buyout due to reentrancy", https://code4rena.com/reports/2022-04-backed#h-03-borrower-can-be-their-own-lender-and-steal-funds-from-buyout-due-to-reentrancy, ""
107, H-01, O3, 6, "yVault: First depositor can break minting of shares", https://code4rena.com/reports/2022-04-jpegd#h-01-yvault-first-depositor-can-break-minting-of-shares, ""
107, H-02, S2-1, 8, "Existing user’s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds", https://code4rena.com/reports/2022-04-jpegd#h-02-existing-users-locked-jpeg-could-be-overwritten-by-new-user-causing-permanent-loss-of-jpeg-funds, ""
107, H-03, L1, 1, "Update initializer modifier to prevent reentrancy during initialization", https://code4rena.com/reports/2022-04-jpegd#h-03-update-initializer-modifier-to-prevent-reentrancy-during-initialization, ""
107, H-04, L1, 1, "Reentrancy issue in yVault.deposit", https://code4rena.com/reports/2022-04-jpegd#h-04-reentrancy-issue-in-yvaultdeposit, ""
107, H-05, O1, 1, "yVaultLPFarming: No guarantee JPEG currentBalance > previousBalance", https://code4rena.com/reports/2022-04-jpegd#h-05-yvaultlpfarming-no-guarantee-jpeg-currentbalance--previousbalance, ""
107, H-06, O1, 1, "Setting new controller can break YVaultLPFarming", https://code4rena.com/reports/2022-04-jpegd#h-06-setting-new-controller-can-break-yvaultlpfarming, ""
107, H-07, O1, 2, "Controller: Strategy migration will fail", https://code4rena.com/reports/2022-04-jpegd#h-07-controller-strategy-migration-will-fail, ""
107, H-08, O5, 1, "StrategyPUSDConvex.balanceOfJPEG uses incorrect function signature while calling extraReward.earned, causing the function to unexpectedly revert everytime", https://code4rena.com/reports/2022-04-jpegd#h-08-strategypusdconvexbalanceofjpeg-uses-incorrect-function-signature-while-calling-extrarewardearned-causing-the-function-to-unexpectedly-revert-everytime, ""
107, H-09, SC, 1, "Bad debts should not continue to accrue interest", https://code4rena.com/reports/2022-04-jpegd#h-09-bad-debts-should-not-continue-to-accrue-interest, ""
109, H-01, SC, 2, "Cross-chain smart contract calls can revert but source chain tokens remain burnt and are not refunded", https://code4rena.com/reports/2022-04-axelar#h-01-cross-chain-smart-contract-calls-can-revert-but-source-chain-tokens-remain-burnt-and-are-not-refunded, ""
110, H-01, S6-2, 11, "StakedCitadel doesn’t use correct balance for internal accounting", https://code4rena.com/reports/2022-04-badger-citadel#h-01-stakedcitadel-doesnt-use-correct-balance-for-internal-accounting, ""
110, H-02, O5, 15, "StakedCitadel: wrong setupVesting function name", https://code4rena.com/reports/2022-04-badger-citadel#h-02-stakedcitadel-wrong-setupvesting-function-name, "good example"
110, H-03, O3, 6, "StakedCitadel depositors can be attacked by the first depositor with depressing of vault token denomination", https://code4rena.com/reports/2022-04-badger-citadel#h-03-stakedcitadel-depositors-can-be-attacked-by-the-first-depositor-with-depressing-of-vault-token-denomination, ""
112, H-01, S6-1, 2, "User can steal all rewards due to checkpoint after transfer", https://code4rena.com/reports/2022-04-backd#h-01-user-can-steal-all-rewards-due-to-checkpoint-after-transfer, ""
112, H-02, S3-1, 1, "function lockFunds in TopUpActionLibrary can cause serious fund lose. fee and Capped bypass. It’s not calling stakerVault.increaseActionLockedBalance when transfers stakes.", https://code4rena.com/reports/2022-04-backd#h-02-function-lockfunds-in-topupactionlibrary-can-cause-serious-fund-lose-fee-and-capped-bypass-its-not-calling-stakervaultincreaseactionlockedbalance-when-transfers-stakes, ""
112, H-03, L8, 1, "Customers cannot be topUp()ed a second time", https://code4rena.com/reports/2022-04-backd#h-03-customers-cannot-be-topuped-a-second-time, ""
113, H-01, SC, 3, "Avoidance of Liquidation Via Malicious Oracle", https://code4rena.com/reports/2022-04-abranft#h-01-avoidance-of-liquidation-via-malicious-oracle, ""
113, H-02, SE-2, 10, "The return value success of the get function of the INFTOracle interface is not checked", https://code4rena.com/reports/2022-04-abranft#h-02-the-return-value-success-of-the-get-function-of-the-inftoracle-interface-is-not-checked, ""
113, H-03, S3-1, 9, "Critical Oracle Manipulation Risk by Lender", https://code4rena.com/reports/2022-04-abranft#h-03-critical-oracle-manipulation-risk-by-lender, ""
113, H-04, S5-2, 7, "Lender is able to seize the collateral by changing the loan parameters", https://code4rena.com/reports/2022-04-abranft#h-04-lender-is-able-to-seize-the-collateral-by-changing-the-loan-parameters, ""
113, H-05, S6-4, 4, "Mistake while checking LTV to lender accepted LTV", https://code4rena.com/reports/2022-04-abranft#h-05-mistake-while-checking-ltv-to-lender-accepted-ltv, ""
114, H-01, O3, 9, "A malicious early user/attacker can manipulate the vault’s pricePerShare to take an unfair share of future users’ deposits", https://code4rena.com/reports/2022-04-pooltogether#h-01-a-malicious-early-userattacker-can-manipulate-the-vaults-pricepershare-to-take-an-unfair-share-of-future-users-deposits, ""
115, H-01, L6, 1, "User can call liquidate() and steal all collateral due to arbitrary router call", https://code4rena.com/reports/2022-04-mimo#h-01-user-can-call-liquidate-and-steal-all-collateral-due-to-arbitrary-router-call, ""
115, H-02, SC, 2, "Fund loss or theft by attacker with creating a flash loan and setting SuperVault as receiver so executeOperation() will be get called by lendingPool but with attackers specified params", https://code4rena.com/reports/2022-04-mimo#h-02-fund-loss-or-theft-by-attacker-with-creating-a-flash-loan-and-setting-supervault-as-receiver-so-executeoperation-will-be-get-called-by-lendingpool-but-with-attackers-specified-params, ""
122, H-01, L8, 3, "no-revert-on-transfer ERC20 tokens can be drained", https://code4rena.com/reports/2022-05-cally#h-01-no-revert-on-transfer-erc20-tokens-can-be-drained, ""
122, H-02, SC, 3, "Inefficiency in the Dutch Auction due to lower duration", https://code4rena.com/reports/2022-05-cally#h-02-inefficiency-in-the-dutch-auction-due-to-lower-duration, ""
122, H-03, L8, 4, "Fake balances can be created for not-yet-existing ERC20 tokens, which allows attackers to set traps to steal funds from future users", https://code4rena.com/reports/2022-05-cally#h-03-wp-h0-fake-balances-can-be-created-for-not-yet-existing-erc20-tokens-which-allows-attackers-to-set-traps-to-steal-funds-from-future-users, ""
123, H-01, S5-1, 1, "User can forfeit other user rewards", https://code4rena.com/reports/2022-05-aura#h-01-user-can-forfeit-other-user-rewards, ""
124, H-01, O3, 6, "Rounding Issues In Certain Functions", https://code4rena.com/reports/2022-06-notional-coop#h-01-rounding-issues-in-certain-functions, ""
125, H-01, SE-2, 6, "Hard-coded slippage may freeze user funds during market turbulence", https://code4rena.com/reports/2022-05-sturdy#h-01-hard-coded-slippage-may-freeze-user-funds-during-market-turbulence, ""
125, H-02, O5, 32, "The check for value transfer success is made after the return statement in _withdrawFromYieldPool of LidoVault", https://code4rena.com/reports/2022-05-sturdy#h-02-the-check-for-value-transfer-success-is-made-after-the-return-statement-in-_withdrawfromyieldpool-of-lidovault, "good example"
131, H-01, L3, 2, "Minter.sol#startInflation() can be bypassed.", https://code4rena.com/reports/2022-05-backd#h-01-mintersolstartinflation-can-be-bypassed, ""
131, H-02, SC, 2, "Total Supply is not guaranteed and is not deterministic.", https://code4rena.com/reports/2022-05-backd#h-02-total-supply-is-not-guaranteed-and-is-not-deterministic, ""
143, H-01, SE-2, 33, "Oracle data feed can be outdated yet used anyways which will impact payment logic", https://code4rena.com/reports/2022-07-juicebox#h-01-oracle-data-feed-can-be-outdated-yet-used-anyways-which-will-impact-payment-logic, ""
143, H-02, S2-2, 3, "Token Change Can Be Frontrun, Blocking Token", https://code4rena.com/reports/2022-07-juicebox#h-02-token-change-can-be-frontrun-blocking-token, ""
145, H-01, L1, 6, "It is possible to create fake ERC1155 NameWrapper token for subdomain, which is not owned by NameWrapper", https://code4rena.com/reports/2022-07-ens#h-01-it-is-possible-to-create-fake-erc1155-namewrapper-token-for-subdomain-which-is-not-owned-by-namewrapper, ""
145, H-02, S3-2, 1, "The expiry of the parent node can be smaller than the one of a child node, violating the guarantee policy", https://code4rena.com/reports/2022-07-ens#h-02-the-expiry-of-the-parent-node-can-be-smaller-than-the-one-of-a-child-node-violating-the-guarantee-policy, ""
145, H-03, SC, 3, "PARENT_CANNOT_CONTROL can be bypassed by maliciously unwrapping parent node", https://code4rena.com/reports/2022-07-ens#h-03-parent_cannot_control-can-be-bypassed-by-maliciously-unwrapping-parent-node, ""
190, H-01, SC, 5, "griefing / blocking / delaying users to withdraw", https://code4rena.com/reports/2022-12-prepo#h-01-griefing--blocking--delaying-users-to-withdraw, ""
190, H-02, SC, 13, "A whale user is able to cause freeze of funds of other users by bypassing withdraw limit", https://code4rena.com/reports/2022-12-prepo#h-02-a-whale-user-is-able-to-cause-freeze-of-funds-of-other-users-by-bypassing-withdraw-limit, ""
191, H-01, O1, 31, "Admin does not have to wait to call lastResortTimelockOwnerClaimNFT()", https://code4rena.com/reports/2022-12-forgeries#h-01-admin-does-not-have-to-wait-to-call-lastresorttimelockownerclaimnft, ""
191, H-02, SC, 1, "Draw organizer can rig the draw to favor certain participants such as their own account.", https://code4rena.com/reports/2022-12-forgeries#h-02-draw-organizer-can-rig-the-draw-to-favor-certain-participants-such-as-their-own-account, ""
192, H-01, S3-1, 10, "Lock.sol: assets deposited with Lock.extendLock function are lost", https://code4rena.com/reports/2022-12-tigris#h-01-locksol-assets-deposited-with-lockextendlock-function-are-lost, ""
192, H-02, SC, 1, "Riskless trades due to delay check", https://code4rena.com/reports/2022-12-tigris#h-02-riskless-trades-due-to-delay-check, ""
192, H-03, L7, 1, "Certain fee configuration enables vaults to be drained", https://code4rena.com/reports/2022-12-tigris#h-03-certain-fee-configuration-enables-vaults-to-be-drained, ""
192, H-04, SC, 1, "Bypass the maximum PnL check to take extra profit", https://code4rena.com/reports/2022-12-tigris#h-04-bypass-the-maximum-pnl-check-to-take-extra-profit, ""
192, H-05, S5-1, 6, "Malicious user can steal all assets in BondNFT", https://code4rena.com/reports/2022-12-tigris#h-05-malicious-user-can-steal-all-assets-in-bondnft, ""
192, H-06, S6-4, 1, "Incorrect calculation of new price while adding position", https://code4rena.com/reports/2022-12-tigris#h-06-incorrect-calculation-of-new-price-while-adding-position, ""
192, H-07, L1, 9, "reentrancy attack during mint() function in Position contract which can lead to removing of the other user’s limit orders or stealing contract funds because initId is set low value", https://code4rena.com/reports/2022-12-tigris#h-07-reentrancy-attack-during-mint-function-in-position-contract-which-can-lead-to-removing-of-the-other-users-limit-orders-or-stealing-contract-funds-because-initid-is-set-low-value, ""
192, H-08, SE-2, 11, "Incorrect Assumption of Stablecoin Market Stability", https://code4rena.com/reports/2022-12-tigris#h-08-incorrect-assumption-of-stablecoin-market-stability, ""
192, H-09, S6-4, 4, "Users can bypass the maxWinPercent limit using a partially closing", https://code4rena.com/reports/2022-12-tigris#h-09-users-can-bypass-the-maxwinpercent-limit-using-a-partially-closing, ""
192, H-10, SC, 3, "User can abuse tight stop losses and high leverage to make risk free trades", https://code4rena.com/reports/2022-12-tigris#h-10-user-can-abuse-tight-stop-losses-and-high-leverage-to-make-risk-free-trades, ""
192, H-11, S6-4, 9, "Not enough margin pulled or burned from user when adding to a position", https://code4rena.com/reports/2022-12-tigris#h-11-not-enough-margin-pulled-or-burned-from-user-when-adding-to-a-position, ""
193, H-01, L1, 10, "Reentrancy in buy function for ERC777 tokens allows buying funds with considerable discount", https://code4rena.com/reports/2022-12-caviar#h-01-reentrancy-in-buy-function-for-erc777-tokens-allows-buying-funds-with-considerable-discount, ""
193, H-02, S1-2, 28, "Liquidity providers may lose funds when adding liquidity", https://code4rena.com/reports/2022-12-caviar#h-02-liquidity-providers-may-lose-funds-when-adding-liquidity, ""
193, H-03, O3, 41, "First depositor can break minting of shares", https://code4rena.com/reports/2022-12-caviar#h-03-first-depositor-can-break-minting-of-shares, ""
